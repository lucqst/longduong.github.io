(undo-tree-save-format-version . 1)
"a707c9c339dd277adad6a026a892609453497120"
[nil nil nil nil (26388 13672 428877 357000) 0 nil]
([nil nil ((nil rear-nonsticky nil 197 . 198) (nil fontified nil 1 . 198) (1 . 198) (t . -1)) nil (26388 13672 428876 34000) 0 nil])
([nil nil ((198 . 208)) nil (26388 13672 428874 892000) 0 nil])
([nil nil ((208 . 209) 207) nil (26388 13672 428868 289000) 0 nil])
([nil nil ((35 . 36) (#("3" 0 1 (face markdown-metadata-value-face markdown-metadata-value (18 52 18 23 23 26 26 52 #<buffer 2024-10-18-proj4.markdown>) markdown-yaml-metadata-section (5 113) fontified t)) . -35) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) 36 (t 26388 13672 439180 769000)) nil (26388 13700 313391 766000) 0 nil])
([nil nil ((39 . 44) (#("O" 0 1 (face markdown-metadata-value-face markdown-metadata-value (18 41 18 23 23 26 26 41 #<buffer 2024-10-18-proj4.markdown>) markdown-yaml-metadata-section (5 102) fontified t)) . -39) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) 40 (38 . 40) (#("Face" 0 4 (face markdown-metadata-value-face markdown-metadata-value (18 43 18 23 23 26 26 43 #<buffer 2024-10-18-proj4.markdown>) markdown-yaml-metadata-section (5 104) fontified t)) . -38) (undo-tree-id3 . -4) (undo-tree-id4 . -4) (undo-tree-id5 . -4) (undo-tree-id6 . -4) (undo-tree-id7 . -4) (undo-tree-id8 . -4) (undo-tree-id9 . -4) (undo-tree-id10 . -4) (undo-tree-id11 . -4) (undo-tree-id12 . -4) (undo-tree-id13 . -4) 42 (#(" " 0 1 (face markdown-metadata-value-face markdown-metadata-value (18 44 18 23 23 26 26 44 #<buffer 2024-10-18-proj4.markdown>) markdown-yaml-metadata-section (5 105) fontified t)) . -42) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) 43 (#("Morphing" 0 8 (face markdown-metadata-value-face markdown-metadata-value (18 52 18 23 23 26 26 52 #<buffer 2024-10-18-proj4.markdown>) markdown-yaml-metadata-section (5 113) fontified t)) . -43) (undo-tree-id24 . -8) (undo-tree-id25 . -8) (undo-tree-id26 . -8) (undo-tree-id27 . -8) (undo-tree-id28 . -8) (undo-tree-id29 . -8) (undo-tree-id30 . -8) 51) nil (26388 13700 313381 396000) 0 nil])
([nil nil ((nil rear-nonsticky nil 858 . 859) (nil fontified nil 202 . 859) (202 . 859) (t 26388 13700 336458 875000)) nil (26388 15371 385940 987000) 0 nil])
([nil nil ((202 . 203)) nil (26388 15371 385938 913000) 0 nil])
([nil nil ((203 . 205) (#("#" 0 1 (fontified t)) . -203) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (#("#" 0 1 (fontified t)) . -204) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) 205 (203 . 205)) nil (26388 15371 385936 579000) 0 nil])
([nil nil ((862 . 864)) nil (26388 15371 385907 554000) 0 nil])
([nil nil ((864 . 865) 863) nil (26388 15371 385897 575000) 0 nil])
([nil nil ((864 . 865) (t 26388 15371 408196 868000)) nil (26388 15637 179050 947000) 0 nil])
([nil nil ((203 . 204)) nil (26388 15637 179030 809000) 0 nil])
([nil nil ((#("$" 0 1 (fontified t)) . 863) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (t 26388 15637 197874 625000)) nil (26388 15668 520520 659000) 0 nil])
([nil nil ((863 . 864)) nil (26388 15668 520517 313000) 0 nil])
([nil nil ((#("$" 0 1 (fontified t)) . 205) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1)) nil (26388 15668 520514 878000) 0 nil])
([nil nil ((205 . 206)) nil (26388 15734 670898 259000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -221) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) 222 (213 . 222) (#("align*" 0 5 (fontified t) 5 6 (face (markdown-markup-face) invisible markdown-markup font-lock-multiline t fontified t)) . 213) (undo-tree-id178 . -2) (undo-tree-id179 . -2) (undo-tree-id180 . 3) (undo-tree-id181 . -2) (undo-tree-id182 . -2) (undo-tree-id183 . -5) (undo-tree-id184 . -5) (undo-tree-id185 . -5) (undo-tree-id186 . -5) (undo-tree-id187 . -5) (undo-tree-id188 . -2) (undo-tree-id189 . -5) (undo-tree-id190 . -5) (undo-tree-id191 . -2) (undo-tree-id192 . -2) (undo-tree-id193 . -2) (undo-tree-id194 . -2) (undo-tree-id195 . -2) (undo-tree-id196 . -2) 215 (t 26388 15668 527191 475000)) nil (26388 15750 237053 772000) 0 nil] [nil nil ((202 . 203) (#("	$$ \\begin{align*}
    &\\begin{cases}
    ax + by + c = wx' \\\\
    dx + ey + f = wy' \\\\
    gx + hy + 1 = w
    \\end{cases}
    \\\\
    \\implies
    &\\begin{cases}
    ax + by + c = (gx + hy + 1) x' \\\\
    dx + ey + f = (gx + hy + 1) y'
    \\end{cases}
    \\\\
    \\implies
    &\\begin{cases}
    ax + by + c - gxx' - hyx' = x' \\\\
    dx + ey + f - gxy' - hyy' = y'
    \\end{cases}
    \\\\
    \\implies
    &\\begin{bmatrix}
    x & y & 1 & 0 & 0 & 0 & -xx' & -yx' \\\\
    0 & 0 & 0 & x & y & 1 & -xy' & -yy' \\\\
    \\end{bmatrix}
    \\begin{bmatrix} a \\\\ b \\\\ c \\\\ d \\\\ e \\\\ f \\\\ g \\\\ h \\end{bmatrix}
    =
    \\begin{bmatrix} x' \\\\ y' \\end{bmatrix}
    \\end{align*} $$
" 0 4 (fontified t) 4 5 (face (markdown-markup-face) invisible markdown-markup fontified t) 5 16 (fontified t) 16 17 (face (markdown-markup-face) invisible markdown-markup font-lock-multiline t fontified t) 17 24 (face (markdown-italic-face) font-lock-multiline t fontified t) 24 25 (invisible markdown-markup face (markdown-markup-face markdown-italic-face) font-lock-multiline t fontified t) 25 60 (face (markdown-italic-face) font-lock-multiline t fontified t) 60 61 (invisible markdown-markup face (markdown-markup-face markdown-italic-face) font-lock-multiline t fontified t) 61 85 (face (markdown-italic-face) font-lock-multiline t fontified t) 85 86 (invisible markdown-markup face (markdown-markup-face markdown-italic-face) font-lock-multiline t fontified t) 86 112 (face (markdown-italic-face) font-lock-multiline t fontified t) 112 113 (invisible markdown-markup face (markdown-markup-face markdown-italic-face) font-lock-multiline t fontified t) 113 128 (face (markdown-italic-face) font-lock-multiline t fontified t) 128 129 (invisible markdown-markup face (markdown-markup-face markdown-italic-face) font-lock-multiline t fontified t) 129 135 (face (markdown-italic-face) font-lock-multiline t fontified t) 135 136 (invisible markdown-markup face (markdown-markup-face markdown-italic-face) font-lock-multiline t fontified t) 136 149 (face (markdown-italic-face) font-lock-multiline t fontified t) 149 150 (invisible markdown-markup face (markdown-markup-face markdown-italic-face) font-lock-multiline t fontified t) 150 198 (face (markdown-italic-face) font-lock-multiline t fontified t) 198 199 (invisible markdown-markup face (markdown-markup-face markdown-italic-face) font-lock-multiline t fontified t) 199 240 (face (markdown-italic-face) font-lock-multiline t fontified t) 240 241 (invisible markdown-markup face (markdown-markup-face markdown-italic-face) font-lock-multiline t fontified t) 241 256 (face (markdown-italic-face) font-lock-multiline t fontified t) 256 257 (invisible markdown-markup face (markdown-markup-face markdown-italic-face) font-lock-multiline t fontified t) 257 263 (face (markdown-italic-face) font-lock-multiline t fontified t) 263 264 (invisible markdown-markup face (markdown-markup-face markdown-italic-face) font-lock-multiline t fontified t) 264 277 (face (markdown-italic-face) font-lock-multiline t fontified t) 277 278 (invisible markdown-markup face (markdown-markup-face markdown-italic-face) font-lock-multiline t fontified t) 278 326 (face (markdown-italic-face) font-lock-multiline t fontified t) 326 327 (invisible markdown-markup face (markdown-markup-face markdown-italic-face) font-lock-multiline t fontified t) 327 368 (face (markdown-italic-face) font-lock-multiline t fontified t) 368 369 (invisible markdown-markup face (markdown-markup-face markdown-italic-face) font-lock-multiline t fontified t) 369 384 (face (markdown-italic-face) font-lock-multiline t fontified t) 384 385 (invisible markdown-markup face (markdown-markup-face markdown-italic-face) font-lock-multiline t fontified t) 385 391 (face (markdown-italic-face) font-lock-multiline t fontified t) 391 392 (invisible markdown-markup face (markdown-markup-face markdown-italic-face) font-lock-multiline t fontified t) 392 405 (face (markdown-italic-face) font-lock-multiline t fontified t) 405 406 (invisible markdown-markup face (markdown-markup-face markdown-italic-face) font-lock-multiline t fontified t) 406 461 (face (markdown-italic-face) font-lock-multiline t fontified t) 461 462 (invisible markdown-markup face (markdown-markup-face markdown-italic-face) font-lock-multiline t fontified t) 462 504 (face (markdown-italic-face) font-lock-multiline t fontified t) 504 505 (invisible markdown-markup face (markdown-markup-face markdown-italic-face) font-lock-multiline t fontified t) 505 511 (face (markdown-italic-face) font-lock-multiline t fontified t) 511 512 (invisible markdown-markup face (markdown-markup-face markdown-italic-face) font-lock-multiline t fontified t) 512 529 (face (markdown-italic-face) font-lock-multiline t fontified t) 529 530 (invisible markdown-markup face (markdown-markup-face markdown-italic-face) font-lock-multiline t fontified t) 530 547 (face (markdown-italic-face) font-lock-multiline t fontified t) 547 548 (invisible markdown-markup face (markdown-markup-face markdown-italic-face) font-lock-multiline t fontified t) 548 552 (face (markdown-italic-face) font-lock-multiline t fontified t) 552 553 (invisible markdown-markup face (markdown-markup-face markdown-italic-face) font-lock-multiline t fontified t) 553 557 (face (markdown-italic-face) font-lock-multiline t fontified t) 557 558 (invisible markdown-markup face (markdown-markup-face markdown-italic-face) font-lock-multiline t fontified t) 558 562 (face (markdown-italic-face) font-lock-multiline t fontified t) 562 563 (invisible markdown-markup face (markdown-markup-face markdown-italic-face) font-lock-multiline t fontified t) 563 567 (face (markdown-italic-face) font-lock-multiline t fontified t) 567 568 (invisible markdown-markup face (markdown-markup-face markdown-italic-face) font-lock-multiline t fontified t) 568 572 (face (markdown-italic-face) font-lock-multiline t fontified t) 572 573 (invisible markdown-markup face (markdown-markup-face markdown-italic-face) font-lock-multiline t fontified t) 573 577 (face (markdown-italic-face) font-lock-multiline t fontified t) 577 578 (invisible markdown-markup face (markdown-markup-face markdown-italic-face) font-lock-multiline t fontified t) 578 582 (face (markdown-italic-face) font-lock-multiline t fontified t) 582 583 (invisible markdown-markup face (markdown-markup-face markdown-italic-face) font-lock-multiline t fontified t) 583 606 (face (markdown-italic-face) font-lock-multiline t fontified t) 606 607 (invisible markdown-markup face (markdown-markup-face markdown-italic-face) font-lock-multiline t fontified t) 607 625 (face (markdown-italic-face) font-lock-multiline t fontified t) 625 626 (invisible markdown-markup face (markdown-markup-face markdown-italic-face) font-lock-multiline t fontified t) 626 631 (face (markdown-italic-face) font-lock-multiline t fontified t) 631 632 (invisible markdown-markup face (markdown-markup-face markdown-italic-face) font-lock-multiline t fontified t) 632 649 (face (markdown-italic-face) font-lock-multiline t fontified t) 649 650 (invisible markdown-markup face (markdown-markup-face markdown-italic-face) font-lock-multiline t fontified t) 650 659 (face (markdown-italic-face) font-lock-multiline t fontified t) 659 660 (face (markdown-markup-face) invisible markdown-markup font-lock-multiline t fontified t) 660 664 (fontified t) 664 665 (fontified t)) . 202) (undo-tree-id52 . -13) (undo-tree-id53 . -660) (undo-tree-id54 . 661) (undo-tree-id55 . -13) (undo-tree-id56 . 651) (undo-tree-id57 . -13) (undo-tree-id58 . -13) (undo-tree-id59 . -3) (undo-tree-id60 . -3) (undo-tree-id61 . -643) (undo-tree-id62 . -643) (undo-tree-id63 . -643) (undo-tree-id64 . -16) (undo-tree-id65 . -11) (undo-tree-id66 . -16) (undo-tree-id67 . -16) (undo-tree-id68 . -16) (undo-tree-id69 . -16) (undo-tree-id70 . -3) (undo-tree-id71 . -13) (undo-tree-id72 . -16) (undo-tree-id73 . -16) (undo-tree-id74 . -3) (undo-tree-id75 . -3) (undo-tree-id76 . -3) (undo-tree-id77 . -25) (undo-tree-id78 . -3) (undo-tree-id79 . -44) (undo-tree-id80 . -25) (undo-tree-id81 . -69) (undo-tree-id82 . -44) (undo-tree-id83 . -94) (undo-tree-id84 . -69) (undo-tree-id85 . -114) (undo-tree-id86 . -94) (undo-tree-id87 . -129) (undo-tree-id88 . -114) (undo-tree-id89 . -137) (undo-tree-id90 . -129) (undo-tree-id91 . -129) (undo-tree-id92 . -137) (undo-tree-id93 . -114) (undo-tree-id94 . -129) (undo-tree-id95 . -94) (undo-tree-id96 . -114) (undo-tree-id97 . -69) (undo-tree-id98 . -94) (undo-tree-id99 . -44) (undo-tree-id100 . -69) (undo-tree-id101 . -25) (undo-tree-id102 . -44) (undo-tree-id103 . -30) (undo-tree-id104 . -25) (undo-tree-id105 . -30) (undo-tree-id106 . -30) (undo-tree-id107 . -30) (undo-tree-id108 . -30) (undo-tree-id109 . -31) (undo-tree-id110 . -30) (undo-tree-id111 . -31) (undo-tree-id112 . -31) (undo-tree-id113 . -31) (undo-tree-id114 . -31) (undo-tree-id115 . -31) (undo-tree-id116 . -31) (undo-tree-id117 . -30) (undo-tree-id118 . -31) (undo-tree-id119 . -25) (undo-tree-id120 . -30) (undo-tree-id121 . -23) (undo-tree-id122 . -25) (undo-tree-id123 . -42) (undo-tree-id124 . -23) (undo-tree-id125 . -67) (undo-tree-id126 . -42) (undo-tree-id127 . -92) (undo-tree-id128 . -67) (undo-tree-id129 . -112) (undo-tree-id130 . -92) (undo-tree-id131 . -128) (undo-tree-id132 . -112) (undo-tree-id133 . -112) (undo-tree-id134 . -128) (undo-tree-id135 . -128) (undo-tree-id136 . -112) (undo-tree-id137 . -135) (undo-tree-id138 . -128) (undo-tree-id139 . -136) (undo-tree-id140 . -135) (undo-tree-id141 . -129) (undo-tree-id142 . -136) (undo-tree-id143 . -129) (undo-tree-id144 . -113) (undo-tree-id145 . -129) (undo-tree-id146 . -116) (undo-tree-id147 . -113) (undo-tree-id148 . -116) (undo-tree-id149 . -116) (undo-tree-id150 . -116) (undo-tree-id151 . -18) (undo-tree-id152 . -18) (undo-tree-id153 . -17) (undo-tree-id154 . -18) (undo-tree-id155 . -17) (undo-tree-id156 . -18) (undo-tree-id157 . -17) (undo-tree-id158 . -17) (undo-tree-id159 . -17) (undo-tree-id160 . -13) (undo-tree-id161 . -13) (undo-tree-id162 . -13) (undo-tree-id163 . -13) (undo-tree-id164 . -13) (undo-tree-id165 . -13) (undo-tree-id166 . -13) (undo-tree-id167 . -13) (undo-tree-id168 . -13) (undo-tree-id169 . -13) (undo-tree-id170 . -13) (undo-tree-id171 . -13) (undo-tree-id172 . -13) (undo-tree-id173 . -13) 215 (t 26388 15668 527191 475000)) ((202 . 867) (#("
" 0 1 (fontified t)) . 202) (undo-tree-id174 . 1)) (26388 15734 668201 260000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -744) (undo-tree-id266 . -4) 748 (#("    " 0 4 (fontified t)) . -705) 709 (#("    " 0 4 (fontified t)) . -703) 707 (#("    " 0 4 (fontified t)) . -636) 640 (#("    " 0 4 (fontified t)) . -622) 626 (#("    " 0 4 (fontified t)) . -583) 587 (#("    " 0 4 (fontified t)) . -544) 548 (#("    " 0 4 (fontified t)) . -527) 531 (#("    " 0 4 (fontified t)) . -518) 522 (#("    " 0 4 (fontified t)) . -515) 519 (#("    " 0 4 (fontified t)) . -503) 507 (#("    " 0 4 (fontified t)) . -472) 476 (#("    " 0 4 (fontified t)) . -438) 442 (#("    " 0 4 (fontified t)) . -423) 427 (#("    " 0 4 (fontified t)) . -414) 418 (#("    " 0 4 (fontified t)) . -411) 415 (#("    " 0 4 (fontified t)) . -399) 403 (#("    " 0 4 (fontified t)) . -368) 372 (#("    " 0 4 (fontified t)) . -334) 338 (#("    " 0 4 (fontified t)) . -319) 323 (#("    " 0 4 (fontified t)) . -310) 314 (#("    " 0 4 (fontified t)) . -307) 311 (#("    " 0 4 (fontified t)) . -295) 299 (#("    " 0 4 (fontified t)) . -279) 283 (#("    " 0 4 (fontified t)) . -258) 262 (#("    " 0 4 (fontified t)) . -237) 241 (#("    " 0 4 (fontified t)) . -222) 226 (#("	" 0 1 (fontified t)) . -202) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) 203 (t 26388 15740 241916 763000)) nil (26388 15755 95135 986000) 0 nil] [nil nil ((291 . 292) (#(" " 0 1 (fontified t)) . -291) (undo-tree-id197 . -1) (undo-tree-id198 . -1) 292 (#(" " 0 1 (fontified nil)) . -288) (287 . 288) (#("+" 0 1 (fontified t)) . -287) (undo-tree-id199 . -1) (undo-tree-id200 . -1) 288 (#(" " 0 1 (fontified nil)) . -284) (283 . 284) (#("+" 0 1 (fontified t)) . -283) (undo-tree-id201 . -1) (undo-tree-id202 . -1) 284 (279 . 280) (#("    " 0 4 (fontified t)) . -279) (undo-tree-id203 . -4) (undo-tree-id204 . -4) (undo-tree-id205 . -4) (undo-tree-id206 . -4) 283 (275 . 276) (#(" " 0 1 (fontified t)) . -275) (undo-tree-id207 . -1) (undo-tree-id208 . -1) 276 (271 . 272) (#(" " 0 1 (fontified t)) . -271) (undo-tree-id209 . -1) (undo-tree-id210 . -1) 272 (#(" " 0 1 (fontified nil)) . -268) (267 . 268) (#("+" 0 1 (fontified t)) . -267) (undo-tree-id211 . -1) (undo-tree-id212 . -1) 268 (#(" " 0 1 (fontified nil)) . -264) (263 . 264) (#("+" 0 1 (fontified t)) . -263) (undo-tree-id213 . -1) (undo-tree-id214 . -1) 264 (259 . 260) (#("    " 0 4 (fontified t)) . -259) (undo-tree-id215 . -4) (undo-tree-id216 . -4) (undo-tree-id217 . -4) (undo-tree-id218 . -4) 263 (255 . 256) (#(" " 0 1 (fontified t)) . -255) (undo-tree-id219 . -1) (undo-tree-id220 . -1) 256 (251 . 252) (#(" " 0 1 (fontified t)) . -251) (undo-tree-id221 . -1) (undo-tree-id222 . -1) 252 (#(" " 0 1 (fontified nil)) . -248) (247 . 248) (#("+" 0 1 (fontified t)) . -247) (undo-tree-id223 . -1) (undo-tree-id224 . -1) 248 (#(" " 0 1 (fontified nil)) . -244) (243 . 244) (#("+" 0 1 (fontified t)) . -243) (undo-tree-id225 . -1) (undo-tree-id226 . -1) 244 (239 . 240) (#("    " 0 4 (fontified t)) . -239) (undo-tree-id227 . -4) (undo-tree-id228 . -4) (undo-tree-id229 . -4) (undo-tree-id230 . -4) 243 (235 . 236) (#("e" 0 1 (fontified t)) . -235) (undo-tree-id231 . -1) (undo-tree-id232 . -1) 236 (231 . 232) (#("{" 0 1 (fontified t)) . -231) (undo-tree-id233 . -1) (undo-tree-id234 . -1) 232 (227 . 228) (#("e" 0 1 (fontified t)) . -227) (undo-tree-id235 . -1) (undo-tree-id236 . -1) 228 (223 . 224) (#("    " 0 4 (fontified t)) . -223) (undo-tree-id237 . -4) (undo-tree-id238 . -4) (undo-tree-id239 . -4) (undo-tree-id240 . -4) 227 (218 . 219) (#("i" 0 1 (fontified t)) . -218) (undo-tree-id241 . -1) (undo-tree-id242 . -1) 219 (214 . 215) (#("q" 0 1 (fontified t)) . -214) (undo-tree-id243 . -1) (undo-tree-id244 . -1) 215 (210 . 211) (#("i" 0 1 (fontified t)) . -210) (undo-tree-id245 . -1) (undo-tree-id246 . -1) 211 (206 . 207) (#("\\" 0 1 (face (markdown-markup-face) invisible markdown-markup fontified t)) . -206) (undo-tree-id247 . -1) (undo-tree-id248 . -1) 207 (202 . 203) (#("	" 0 1 (fontified t)) . -202) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) 203 (t 26388 15740 241916 763000)) ((202 . 203) (#("
" 0 1 (fontified t)) . 202) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (206 . 207) (#("
" 0 1 (fontified nil)) . 206) (210 . 211) (#("
" 0 1 (fontified nil)) . 210) (214 . 215) (#("
" 0 1 (fontified nil)) . 214) (218 . 219) (#("
" 0 1 (fontified nil)) . 218) (223 . 227) (#("
" 0 1 (fontified t)) . 223) (227 . 228) (#("
" 0 1 (fontified nil)) . 227) (231 . 232) (#("
" 0 1 (fontified nil)) . 231) (235 . 236) (#("
" 0 1 (fontified nil)) . 235) (239 . 243) (#("
" 0 1 (fontified t)) . 239) (243 . 244) (#("
" 0 1 (fontified nil)) . 243) (244 . 245) (247 . 248) (#("
" 0 1 (fontified nil)) . 247) (248 . 249) (251 . 252) (#("
" 0 1 (fontified nil)) . 251) (255 . 256) (#("
" 0 1 (fontified nil)) . 255) (259 . 263) (#("
" 0 1 (fontified t)) . 259) (263 . 264) (#("
" 0 1 (fontified nil)) . 263) (264 . 265) (267 . 268) (#("
" 0 1 (fontified nil)) . 267) (268 . 269) (271 . 272) (#("
" 0 1 (fontified nil)) . 271) (275 . 276) (#("
" 0 1 (fontified nil)) . 275) (279 . 283) (#("
" 0 1 (fontified t)) . 279) (283 . 284) (#("
" 0 1 (fontified nil)) . 283) (284 . 285) (287 . 288) (#("
" 0 1 (fontified nil)) . 287) (288 . 289) (291 . 292) (#("
" 0 1 (fontified t)) . 291)) (26388 15750 205416 89000) 0 nil])
nil
([nil nil ((#("&" 0 1 (fontified t)) . 222) (t 26388 15755 106067 91000)) nil (26388 15763 69808 642000) 0 nil])
nil
([nil nil ((#("&" 0 1 (fontified t)) . 318) (t 26388 15763 81147 747000)) nil (26388 15765 806368 48000) 0 nil])
([nil nil ((#("&" 0 1 (fontified t)) . 421)) nil (26388 15784 720646 884000) 0 nil])
([nil nil ((#("&" 0 1 (fontified t)) . 524)) nil (26388 15789 752695 649000) 0 nil] [nil nil ((#("&" 0 1 (fontified t)) . 524) (t 26388 15765 818175 428000)) ((524 . 525)) (26388 15784 365600 546000) 0 nil])
([nil nil ((217 . 218) (212 . 217) (#("equation" 0 1 (fontified t) 1 2 (fontified t) 2 5 (fontified t) 5 6 (fontified t) 6 8 (fontified t)) . -212) (undo-tree-id277 . -8) (undo-tree-id278 . -8) (undo-tree-id279 . -8) (undo-tree-id280 . -8) (undo-tree-id281 . -8) (undo-tree-id282 . -8) (undo-tree-id283 . -8) 220) nil (26388 15789 752688 806000) 0 nil])
([nil nil ((745 . 753) (#("align*" 0 5 (fontified t) 5 6 (fontified t)) . 745) (undo-tree-id270 . -6) (t 26388 15768 5197 547000)) ((745 . 751) (#("equation" 0 8 (fontified t)) . 745) (undo-tree-id271 . -7) (undo-tree-id272 . -7) (undo-tree-id273 . -7) (undo-tree-id274 . -7) (undo-tree-id275 . -7) (undo-tree-id276 . -7) (t 26388 15781 392332 938000)) (26388 15781 377390 710000) 0 nil])
([nil nil ((191 . 192) 200 (t 26388 15789 767417 639000)) nil (26388 15819 882857 757000) 0 nil])
nil
([nil nil ((204 . 209) (203 . 204) (202 . 203) 192) nil (26388 15819 882856 123000) 0 nil])
([nil nil ((#("" 0 1 (fontified t)) . -207) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) 208 (207 . 208) (206 . 207)) nil (26388 15819 882852 76000) 0 nil])
([nil nil ((nil rear-nonsticky nil 389 . 390) (nil fontified nil 207 . 390) (207 . 390) 206) nil (26388 15819 878275 646000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t)) . -394) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) 395 (393 . 395) 389) nil (26388 15819 878267 561000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -203) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) 204 (203 . 204) (t 26388 15819 886722 251000) 203) nil (26388 15987 302589 238000) 0 nil])
([nil nil ((203 . 204) 203) nil (26388 15987 302577 796000) 0 nil])
([nil nil ((204 . 224)) nil (26388 15987 302576 834000) 0 nil])
([nil nil ((224 . 225) 223) nil (26388 15987 302575 522000) 0 nil])
([nil nil ((nil rear-nonsticky nil 225 . 226) (#("
" 0 1 (fontified nil)) . -275) (225 . 276)) nil (26388 15987 302573 368000) 0 nil])
([nil nil ((275 . 276) 226) nil (26388 15987 302571 915000) 0 nil])
([nil nil ((260 . 278) (#("3" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t)) . -260) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (#("/" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t)) . -261) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) 262 (#("me_" 0 3 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t)) . -262) (undo-tree-id321 . -3) (undo-tree-id322 . -3) (undo-tree-id323 . -3) (undo-tree-id324 . -3) (undo-tree-id325 . -3) (undo-tree-id326 . -3) (undo-tree-id327 . -3) (undo-tree-id328 . -3) (undo-tree-id329 . -3) (undo-tree-id330 . -3) (undo-tree-id331 . -3) 265 (#("geo_" 0 4 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t)) . -265) (undo-tree-id332 . -4) (undo-tree-id333 . -4) (undo-tree-id334 . -4) (undo-tree-id335 . -4) (undo-tree-id336 . -4) (undo-tree-id337 . -4) (undo-tree-id338 . -4) (undo-tree-id339 . -4) (undo-tree-id340 . -4) 269 (#("morph" 0 5 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t)) . -269) (undo-tree-id341 . -5) (undo-tree-id342 . -5) (undo-tree-id343 . -5) (undo-tree-id344 . -5) (undo-tree-id345 . -5) (undo-tree-id346 . -5) (undo-tree-id347 . -5) 274) nil (26388 15987 302561 956000) 0 nil])
([nil nil ((206 . 216) (#("i" 0 1 (face markdown-header-face-2 markdown-heading-2-atx (192 207 nil nil nil nil nil nil 192 195 195 207 207 207 #<buffer 2024-10-18-proj4.markdown>) markdown-heading (192 207 nil nil nil nil nil nil 192 195 195 207 207 207 #<buffer 2024-10-18-proj4.markdown>) fontified t)) . -206) (undo-tree-id376 . -1) 207 (202 . 207) (t 26388 15987 314415 533000)) nil (26388 16077 31914 107000) 0 nil])
([nil nil ((269 . 282) (248 . 269) (#("portrait" 0 8 (fontified t)) . -248) (undo-tree-id373 . -8) 256 (#(" " 0 1 (fontified t)) . -256) (undo-tree-id374 . -1) 257 (#("wi" 0 2 (fontified t)) . -257) (undo-tree-id375 . -2) 259 (252 . 259) (238 . 252)) nil (26388 16077 31911 301000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -338) (undo-tree-id362 . -1) 339 (#("Suppose" 0 7 (fontified t)) . -339) (undo-tree-id363 . -7) 346 (#(" " 0 1 (fontified t)) . -346) (undo-tree-id364 . -1) 347 (#("that" 0 4 (fontified t)) . -347) (undo-tree-id365 . -4) 351 (#(" " 0 1 (fontified t)) . -351) (undo-tree-id366 . -1) 352 (#("we" 0 2 (fontified t)) . -352) (undo-tree-id367 . -2) 354 (#(" " 0 1 (fontified t)) . -354) (undo-tree-id368 . -1) 355 (#("want" 0 4 (fontified t)) . -355) (undo-tree-id369 . -4) 359 (#(" " 0 1 (fontified t)) . -359) (undo-tree-id370 . -1) 360 (#("to" 0 2 (fontified t)) . -360) (undo-tree-id371 . -2) 362 (#(" " 0 1 (fontified t)) . -362) (undo-tree-id372 . -1) 363 (360 . 363) (339 . 360) (338 . 339) (337 . 338) 336) nil (26388 16077 31898 267000) 0 nil])
([nil nil ((303 . 314) (282 . 303)) nil (26388 16077 31887 426000) 0 nil])
([nil nil ((394 . 404) (392 . 394) (371 . 392) (370 . 371) (369 . 370) 368) nil (26388 16077 31886 494000) 0 nil])
([nil nil ((457 . 463) (436 . 457) (#("n" 0 1 (fontified t)) . -436) (undo-tree-id355 . -1) 437 (433 . 437) (#("p" 0 1 (fontified t)) . -433) (undo-tree-id356 . -1) (#("a" 0 1 (fontified t)) . -434) (undo-tree-id357 . -1) 435 (430 . 435) (#("p" 0 1 (fontified t)) . -430) (undo-tree-id358 . -1) 431 (430 . 431) (#("picture" 0 7 (fontified t)) . -430) (undo-tree-id359 . -7) 437 (#(" " 0 1 (fontified t)) . -437) (undo-tree-id360 . -1) 438 (425 . 438) (404 . 425) (#("
" 0 1 (fontified t)) . -404) (undo-tree-id361 . -1) 405 (404 . 405) 403) nil (26388 16077 31882 807000) 0 nil])
([nil nil ((463 . 464)) nil (26388 16077 31855 15000) 0 nil])
([nil nil ((575 . 585) (554 . 575) (547 . 554) (#("colored" 0 7 (fontified t)) . -547) (undo-tree-id384 . -7) (undo-tree-id385 . -1) (undo-tree-id386 . -2) (undo-tree-id387 . -1) (undo-tree-id388 . -3) (undo-tree-id389 . -2) (undo-tree-id390 . -4) (undo-tree-id391 . -3) (undo-tree-id392 . -5) (undo-tree-id393 . -4) (undo-tree-id394 . -6) (undo-tree-id395 . -5) (undo-tree-id396 . -7) (undo-tree-id397 . -6) (undo-tree-id398 . -7) (undo-tree-id399 . -7) (undo-tree-id400 . -7) (undo-tree-id401 . -7) (undo-tree-id402 . -7) 554 (#(" " 0 1 (fontified t)) . -554) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) 555 (547 . 555) (534 . 548) (#("5" 0 1 (fontified t)) . -534) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) 535 (533 . 535) (#("2" 0 1 (fontified t)) . -533) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) 534 (#(" " 0 1 (fontified t)) . -534) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) 535 (534 . 535) (513 . 534) (#("n" 0 1 (fontified t)) . -513) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (#("a" 0 1 (fontified t)) . -514) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) 515 (503 . 515) (499 . 503) (478 . 499) (#(" " 0 1 (fontified t)) . -478) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) 479 (#("first" 0 5 (fontified t)) . -479) (undo-tree-id450 . -5) (undo-tree-id451 . -5) (undo-tree-id452 . -5) (undo-tree-id453 . -5) (undo-tree-id454 . -5) (undo-tree-id455 . -5) (undo-tree-id456 . -5) (undo-tree-id457 . -5) (undo-tree-id458 . -5) (undo-tree-id459 . -5) (undo-tree-id460 . -5) (undo-tree-id461 . -5) (undo-tree-id462 . -5) (undo-tree-id463 . -5) (undo-tree-id464 . -5) 484 (#(" " 0 1 (fontified t)) . -484) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) 485 (#("recognize" 0 9 (fontified t)) . -485) (undo-tree-id479 . -9) (undo-tree-id480 . -9) (undo-tree-id481 . -9) (undo-tree-id482 . -9) (undo-tree-id483 . -9) (undo-tree-id484 . -9) (undo-tree-id485 . -9) (undo-tree-id486 . -9) (undo-tree-id487 . -9) (undo-tree-id488 . -9) (undo-tree-id489 . -9) 494 (#(" " 0 1 (fontified t)) . -494) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) 495 (#("that" 0 4 (fontified t)) . -495) (undo-tree-id500 . -4) (undo-tree-id501 . -4) (undo-tree-id502 . -4) (undo-tree-id503 . -4) (undo-tree-id504 . -4) (undo-tree-id505 . -4) (undo-tree-id506 . -4) 499 (#(" " 0 1 (fontified t)) . -499) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) 500 (497 . 500) (476 . 497) (#("f" 0 1 (fontified t)) . -476) (undo-tree-id512 . -1) 477 (464 . 477) (t 26388 16077 44323 17000)) nil (26388 16149 780579 847000) 0 nil])
([nil nil ((662 . 663) (641 . 662) (639 . 641) (618 . 639) (597 . 618) (#("the" 0 3 (fontified t)) . -597) (undo-tree-id377 . -3) (undo-tree-id378 . -1) (undo-tree-id379 . -2) (undo-tree-id380 . -1) (undo-tree-id381 . -3) (undo-tree-id382 . -2) (undo-tree-id383 . -3) 600 (597 . 600) (586 . 597)) nil (26388 16201 96807 409000) 0 nil])
([nil nil ((622 . 626) (603 . 622) (#(" " 0 1 (fontified t)) . -603) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) 604 (#("transformed" 0 11 (fontified t)) . -604) (undo-tree-id798 . -11) (undo-tree-id799 . -11) (undo-tree-id800 . -11) (undo-tree-id801 . -11) (undo-tree-id802 . -11) (undo-tree-id803 . -11) (undo-tree-id804 . -11) (undo-tree-id805 . -11) (undo-tree-id806 . -11) (undo-tree-id807 . -11) (undo-tree-id808 . -11) (undo-tree-id809 . -11) (undo-tree-id810 . -11) (undo-tree-id811 . -11) (undo-tree-id812 . -11) (undo-tree-id813 . -11) (undo-tree-id814 . -11) (undo-tree-id815 . -11) (undo-tree-id816 . -11) (undo-tree-id817 . -11) (undo-tree-id818 . -11) (undo-tree-id819 . -11) (undo-tree-id820 . -11) (undo-tree-id821 . -11) (undo-tree-id822 . -11) (undo-tree-id823 . -11) (undo-tree-id824 . -11) (undo-tree-id825 . -11) (undo-tree-id826 . -11) (undo-tree-id827 . -11) (undo-tree-id828 . -11) (undo-tree-id829 . -11) (undo-tree-id830 . -11) (undo-tree-id831 . -11) (undo-tree-id832 . -11) 615 (#(" " 0 1 (fontified t)) . -615) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) 616 (#("version" 0 7 (fontified t)) . 616) (undo-tree-id865 . -7) (undo-tree-id866 . -7) (undo-tree-id867 . -7) (undo-tree-id868 . -7) (undo-tree-id869 . -7) (undo-tree-id870 . -7)) nil (26388 16213 158032 283000) 0 nil] [nil nil ((668 . 673) (#("A" 0 1 (face markdown-header-face-1 markdown-heading-1-atx (665 669 nil nil nil nil nil nil 665 667 667 669 669 669 #<buffer 2024-10-18-proj4.markdown>) markdown-heading (665 669 nil nil nil nil nil nil 665 667 667 669 669 669 #<buffer 2024-10-18-proj4.markdown>) fontified t)) . -668) (undo-tree-id513 . -1) (undo-tree-id515 . -1) 669 (665 . 669) (#("*" 0 1 (fontified t)) . -665) (undo-tree-id516 . -1) (undo-tree-id518 . -1) (undo-tree-id520 . -1) (undo-tree-id522 . -1) (undo-tree-id524 . -1) (undo-tree-id526 . -1) (undo-tree-id528 . -1) (undo-tree-id530 . -1) (#(" " 0 1 (markdown-list-item ((665 667 0 2 "* " nil (665 667 665 665 665 666 666 667))) fontified t)) . -666) (undo-tree-id531 . -1) (undo-tree-id533 . -1) (undo-tree-id535 . -1) (undo-tree-id537 . -1) (undo-tree-id539 . -1) (undo-tree-id541 . -1) 667 (#("F" 0 1 (markdown-list-item ((665 668 0 2 "* " nil (665 667 665 665 665 666 666 667))) fontified t)) . -667) (undo-tree-id542 . -1) (undo-tree-id544 . -1) (undo-tree-id546 . -1) (undo-tree-id548 . -1) (#("A" 0 1 (markdown-list-item ((665 669 0 2 "* " nil (665 667 665 665 665 666 666 667))) fontified t)) . -668) (undo-tree-id549 . -1) (undo-tree-id551 . -1) 669 (665 . 669) (#("Fact" 0 4 (fontified t)) . -665) (undo-tree-id552 . -4) (undo-tree-id554 . -2) (undo-tree-id556 . -3) (undo-tree-id558 . -4) (undo-tree-id560 . -4) 669 (665 . 669) (#("First," 0 6 (fontified t)) . -665) (undo-tree-id561 . -6) (undo-tree-id563 . -6) (undo-tree-id565 . -6) (undo-tree-id567 . -6) 671 (#(" " 0 1 (fontified t)) . -671) (undo-tree-id568 . -1) (undo-tree-id570 . -1) (undo-tree-id572 . -1) 672 (665 . 672) (663 . 665) (t 26388 16149 791058 742000)) ((#("

" 0 1 (fontified t) 1 2 (fontified t)) . 663) (undo-tree-id751 . -2) (#("First, " 0 6 (fontified nil) 6 7 (fontified nil)) . 665) (665 . 672) (#("Fact" 0 4 (fontified nil)) . 665) (665 . 669) (#("* FA" 0 1 (fontified nil) 1 2 (markdown-list-item ((665 667 0 2 "* " nil (665 667 665 665 665 666 666 667))) fontified nil) 2 3 (markdown-list-item ((665 668 0 2 "* " nil (665 667 665 665 665 666 666 667))) fontified nil) 3 4 (markdown-list-item ((665 669 0 2 "* " nil (665 667 665 665 665 666 666 667))) fontified nil)) . 665) (665 . 669) (#("# FA" 0 2 (markdown-heading-1-atx (665 673 nil nil nil nil nil nil 665 667 667 672 672 673 #<buffer 2024-10-18-proj4.markdown>) markdown-heading (665 673 nil nil nil nil nil nil 665 667 667 672 672 673 #<buffer 2024-10-18-proj4.markdown>) face markdown-header-delimiter-face fontified nil) 2 3 (markdown-heading-1-atx (665 673 nil nil nil nil nil nil 665 667 667 672 672 673 #<buffer 2024-10-18-proj4.markdown>) markdown-heading (665 673 nil nil nil nil nil nil 665 667 667 672 672 673 #<buffer 2024-10-18-proj4.markdown>) face markdown-header-face-1 fontified nil) 3 4 (face markdown-header-face-1 markdown-heading-1-atx (665 669 nil nil nil nil nil nil 665 667 667 669 669 669 #<buffer 2024-10-18-proj4.markdown>) markdown-heading (665 669 nil nil nil nil nil nil 665 667 667 669 669 669 #<buffer 2024-10-18-proj4.markdown>) fontified nil)) . 665) (undo-tree-id752 . -3) (668 . 669) (#("act: " 0 4 (markdown-heading-1-atx (665 673 nil nil nil nil nil nil 665 667 667 672 672 673 #<buffer 2024-10-18-proj4.markdown>) markdown-heading (665 673 nil nil nil nil nil nil 665 667 667 672 672 673 #<buffer 2024-10-18-proj4.markdown>) face markdown-header-face-1 fontified t) 4 5 (markdown-heading-1-atx (665 673 nil nil nil nil nil nil 665 667 667 672 672 673 #<buffer 2024-10-18-proj4.markdown>) markdown-heading (665 673 nil nil nil nil nil nil 665 667 667 672 672 673 #<buffer 2024-10-18-proj4.markdown>) face markdown-header-delimiter-face fontified t)) . 668) (undo-tree-id753 . -4) (t 26388 16167 220235 12000)) (26388 16201 87134 325000) 0 nil])
([nil nil ((688 . 695) (687 . 689) (#("*" 0 1 (face markdown-header-face-1 markdown-heading-1-atx (668 688 nil nil nil nil nil nil 668 670 670 688 688 688 #<buffer 2024-10-18-proj4.markdown>) markdown-heading (668 688 nil nil nil nil nil nil 668 670 670 688 688 688 #<buffer 2024-10-18-proj4.markdown>) fontified t)) . -687) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) 688 (687 . 688) (#("x" 0 1 (face markdown-header-face-1 markdown-heading-1-atx (668 688 nil nil nil nil nil nil 668 670 670 688 688 688 #<buffer 2024-10-18-proj4.markdown>) markdown-heading (668 688 nil nil nil nil nil nil 668 670 670 688 688 688 #<buffer 2024-10-18-proj4.markdown>) fontified t)) . -687) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) 688 (686 . 688) (#("(" 0 1 (face markdown-header-face-1 markdown-heading-1-atx (668 688 nil nil nil nil nil nil 668 670 670 688 688 688 #<buffer 2024-10-18-proj4.markdown>) markdown-heading (668 688 nil nil nil nil nil nil 668 670 670 688 688 688 #<buffer 2024-10-18-proj4.markdown>) fontified nil)) . -686) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (#(")" 0 1 (face markdown-header-face-1 markdown-heading-1-atx (668 688 nil nil nil nil nil nil 668 670 670 688 688 688 #<buffer 2024-10-18-proj4.markdown>) markdown-heading (668 688 nil nil nil nil nil nil 668 670 670 688 688 688 #<buffer 2024-10-18-proj4.markdown>) fontified t)) . 687) (#("x" 0 1 (face markdown-header-face-1 markdown-heading-1-atx (668 689 nil nil nil nil nil nil 668 670 670 689 689 689 #<buffer 2024-10-18-proj4.markdown>) markdown-heading (668 689 nil nil nil nil nil nil 668 670 670 689 689 689 #<buffer 2024-10-18-proj4.markdown>) fontified t)) . -687) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) 688 (687 . 688) (676 . 688) (668 . 676) (#("
" 0 1 (fontified t)) . -668) (undo-tree-id1028 . -1) 669 (668 . 669) (t 26388 16213 161699 642000) 668) nil (26388 16260 484728 118000) 0 nil])
([nil nil ((#("tho" 0 3 (fontified t)) . -597) (undo-tree-id573 . -3) (undo-tree-id574 . -1) (undo-tree-id575 . -2) (undo-tree-id576 . -1) (undo-tree-id577 . -3) (undo-tree-id578 . -2) (undo-tree-id579 . -3) (undo-tree-id580 . -3) 600 (597 . 600) (#("in" 0 2 (fontified t)) . -597) (undo-tree-id581 . -2) (undo-tree-id582 . -2) (undo-tree-id583 . -2) (undo-tree-id584 . -2) (undo-tree-id585 . -2) (undo-tree-id586 . -2) (undo-tree-id587 . -2) (undo-tree-id588 . -2) (undo-tree-id589 . -2) (undo-tree-id590 . -2) (undo-tree-id591 . -2) (undo-tree-id592 . -2) (undo-tree-id593 . -2) (undo-tree-id594 . -2) (undo-tree-id595 . -2) (undo-tree-id596 . -2) (undo-tree-id597 . -2) (undo-tree-id598 . -2) (undo-tree-id599 . -2) (undo-tree-id600 . -2) (undo-tree-id601 . -2) (undo-tree-id602 . -2) (undo-tree-id603 . -2) (undo-tree-id604 . -2) (undo-tree-id605 . -2) (undo-tree-id606 . -2) (undo-tree-id607 . -2) (undo-tree-id608 . -2) (undo-tree-id609 . -2) (undo-tree-id610 . -2) (undo-tree-id611 . -2) (undo-tree-id612 . -2) (undo-tree-id613 . -2) (undo-tree-id614 . -2) (undo-tree-id615 . -2) 599 (#(" " 0 1 (fontified t)) . -599) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) 600 (#("the" 0 3 (fontified t)) . -600) (undo-tree-id650 . -3) (undo-tree-id651 . -3) (undo-tree-id652 . -3) (undo-tree-id653 . -3) (undo-tree-id654 . -3) (undo-tree-id655 . -3) (undo-tree-id656 . -3) (undo-tree-id657 . -3) (undo-tree-id658 . -3) (undo-tree-id659 . -3) (undo-tree-id660 . -3) (undo-tree-id661 . -3) (undo-tree-id662 . -3) (undo-tree-id663 . -3) (undo-tree-id664 . -3) (undo-tree-id665 . -3) (undo-tree-id666 . -3) (undo-tree-id667 . -3) (undo-tree-id668 . -3) (undo-tree-id669 . -3) (undo-tree-id670 . -3) (undo-tree-id671 . -3) (undo-tree-id672 . -3) (undo-tree-id673 . -3) (undo-tree-id674 . -3) (undo-tree-id675 . -3) (undo-tree-id676 . -3) 603 (#(" " 0 1 (fontified t)) . -603) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) 604 (#("transformed" 0 11 (fontified t)) . -604) (undo-tree-id703 . -11) (undo-tree-id704 . -11) (undo-tree-id705 . -11) (undo-tree-id706 . -11) (undo-tree-id707 . -11) (undo-tree-id708 . -11) (undo-tree-id709 . -11) (undo-tree-id710 . -11) (undo-tree-id711 . -11) (undo-tree-id712 . -11) (undo-tree-id713 . -11) (undo-tree-id714 . -11) (undo-tree-id715 . -11) (undo-tree-id716 . -11) (undo-tree-id717 . -11) (undo-tree-id718 . -11) (undo-tree-id719 . -11) (undo-tree-id720 . -11) (undo-tree-id721 . -11) 615 (#(" " 0 1 (fontified t)) . -615) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) 616 (#("version" 0 7 (fontified t)) . 616) (undo-tree-id740 . -7) (undo-tree-id741 . -7) (undo-tree-id742 . -7) (undo-tree-id743 . -7) (t 26388 16167 220235 12000)) ((597 . 623) (#("tho" 0 3 (fontified nil)) . 597) (undo-tree-id744 . -3) (undo-tree-id745 . -1) (undo-tree-id746 . -2) (undo-tree-id747 . -1) (undo-tree-id748 . -3) (undo-tree-id749 . -2) (undo-tree-id750 . -3) (597 . 600)) (26388 16201 72309 773000) 0 nil])
([nil nil ((737 . 739) (716 . 737) (#(" " 0 1 (face markdown-header-delimiter-face markdown-heading-1-atx (668 717 nil nil nil nil nil nil 668 670 670 716 716 717 #<buffer 2024-10-18-proj4.markdown>) markdown-heading (668 717 nil nil nil nil nil nil 668 670 670 716 716 717 #<buffer 2024-10-18-proj4.markdown>) fontified t)) . -716) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) 717 (713 . 717) (#("i" 0 1 (face markdown-header-face-1 markdown-heading-1-atx (668 714 nil nil nil nil nil nil 668 670 670 714 714 714 #<buffer 2024-10-18-proj4.markdown>) markdown-heading (668 714 nil nil nil nil nil nil 668 670 670 714 714 714 #<buffer 2024-10-18-proj4.markdown>) fontified t)) . -713) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) 714 (705 . 714) (#(" " 0 1 (face markdown-header-delimiter-face markdown-heading-1-atx (668 706 nil nil nil nil nil nil 668 670 670 705 705 706 #<buffer 2024-10-18-proj4.markdown>) markdown-heading (668 706 nil nil nil nil nil nil 668 670 670 705 705 706 #<buffer 2024-10-18-proj4.markdown>) fontified t)) . -705) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) 706 (#("post-" 0 5 (face markdown-header-face-1 markdown-heading-1-atx (668 711 nil nil nil nil nil nil 668 670 670 711 711 711 #<buffer 2024-10-18-proj4.markdown>) markdown-heading (668 711 nil nil nil nil nil nil 668 670 670 711 711 711 #<buffer 2024-10-18-proj4.markdown>) fontified t)) . -706) (undo-tree-id926 . -5) (undo-tree-id927 . -1) (undo-tree-id928 . -2) (undo-tree-id929 . -1) (undo-tree-id930 . -3) (undo-tree-id931 . -2) (undo-tree-id932 . -4) (undo-tree-id933 . -3) (undo-tree-id934 . -5) (undo-tree-id935 . -4) (undo-tree-id936 . -5) (undo-tree-id937 . -5) (undo-tree-id938 . -5) (undo-tree-id939 . -5) (undo-tree-id940 . -5) (undo-tree-id941 . -5) (undo-tree-id942 . -5) (undo-tree-id943 . -5) (undo-tree-id944 . -5) (undo-tree-id945 . -5) (undo-tree-id946 . -5) (undo-tree-id947 . -5) (undo-tree-id948 . -5) (undo-tree-id949 . -5) (undo-tree-id950 . -5) (undo-tree-id951 . -5) (undo-tree-id952 . -5) (undo-tree-id953 . -5) (undo-tree-id954 . -5) (undo-tree-id955 . -5) (undo-tree-id956 . -5) (undo-tree-id957 . -5) (undo-tree-id958 . -5) (undo-tree-id959 . -5) (undo-tree-id960 . -5) (undo-tree-id961 . -5) (undo-tree-id962 . -5) (undo-tree-id963 . -5) (undo-tree-id964 . -5) (undo-tree-id965 . -5) (undo-tree-id966 . -5) (undo-tree-id967 . -5) 711 (#("projective" 0 10 (face markdown-header-face-1 markdown-heading-1-atx (668 721 nil nil nil nil nil nil 668 670 670 721 721 721 #<buffer 2024-10-18-proj4.markdown>) markdown-heading (668 721 nil nil nil nil nil nil 668 670 670 721 721 721 #<buffer 2024-10-18-proj4.markdown>) fontified t)) . -711) (undo-tree-id968 . -10) (undo-tree-id969 . -1) (undo-tree-id970 . -2) (undo-tree-id971 . -1) (undo-tree-id972 . -3) (undo-tree-id973 . -2) (undo-tree-id974 . -4) (undo-tree-id975 . -3) (undo-tree-id976 . -5) (undo-tree-id977 . -4) (undo-tree-id978 . -6) (undo-tree-id979 . -5) (undo-tree-id980 . -7) (undo-tree-id981 . -6) (undo-tree-id982 . -8) (undo-tree-id983 . -7) (undo-tree-id984 . -9) (undo-tree-id985 . -8) (undo-tree-id986 . -9) (undo-tree-id987 . -10) (undo-tree-id988 . -9) (undo-tree-id989 . -10) (undo-tree-id990 . -10) (undo-tree-id991 . -10) (undo-tree-id992 . -10) (undo-tree-id993 . -10) (undo-tree-id994 . -10) (undo-tree-id995 . -10) (undo-tree-id996 . -10) 721 (#(" " 0 1 (face markdown-header-delimiter-face markdown-heading-1-atx (668 722 nil nil nil nil nil nil 668 670 670 721 721 722 #<buffer 2024-10-18-proj4.markdown>) markdown-heading (668 722 nil nil nil nil nil nil 668 670 670 721 721 722 #<buffer 2024-10-18-proj4.markdown>) fontified t)) . -721) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) 722 (719 . 722) (698 . 719) (696 . 698) (#(" " 0 1 (face markdown-header-delimiter-face markdown-heading-1-atx (668 697 nil nil nil nil nil nil 668 670 670 696 696 697 #<buffer 2024-10-18-proj4.markdown>) markdown-heading (668 697 nil nil nil nil nil nil 668 670 670 696 696 697 #<buffer 2024-10-18-proj4.markdown>) fontified t)) . -696) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (#("a" 0 1 (face markdown-header-face-1 markdown-heading-1-atx (668 698 nil nil nil nil nil nil 668 670 670 698 698 698 #<buffer 2024-10-18-proj4.markdown>) markdown-heading (668 698 nil nil nil nil nil nil 668 670 670 698 698 698 #<buffer 2024-10-18-proj4.markdown>) fontified t)) . -697) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) 698 (696 . 698)) nil (26388 16260 484703 431000) 0 nil])
nil
([nil nil ((#(")" 0 1 (markdown-heading-1-atx (668 742 nil nil nil nil nil nil 668 670 670 742 742 742 #<buffer 2024-10-18-proj4.markdown>) markdown-heading (668 742 nil nil nil nil nil nil 668 670 670 742 742 742 #<buffer 2024-10-18-proj4.markdown>) fontified nil)) . -739) (739 . 740) (#(")" 0 1 (markdown-heading-1-atx (668 742 nil nil nil nil nil nil 668 670 670 742 742 742 #<buffer 2024-10-18-proj4.markdown>) markdown-heading (668 742 nil nil nil nil nil nil 668 670 670 742 742 742 #<buffer 2024-10-18-proj4.markdown>) face markdown-header-face-1 fontified nil)) . -739) (739 . 740) (738 . 740)) nil (26388 16260 477823 558000) 0 nil])
([nil nil ((739 . 749)) nil (26388 16260 477816 655000) 0 nil])
([nil nil ((792 . 794) (#("z" 0 1 (face markdown-header-face-1 markdown-heading-1-atx (668 793 nil nil nil nil nil nil 668 670 670 793 793 793 #<buffer 2024-10-18-proj4.markdown>) markdown-heading (668 793 nil nil nil nil nil nil 668 670 670 793 793 793 #<buffer 2024-10-18-proj4.markdown>) fontified t)) . -792) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) 793 (772 . 793) (751 . 772) (t 26388 16260 498178 380000)) nil (26388 16281 133790 889000) 0 nil])
([nil nil ((793 . 794)) nil (26388 16281 129340 438000) 0 nil])
([nil nil ((795 . 809)) nil (26388 16281 129338 795000) 0 nil])
([nil nil ((809 . 810)) nil (26388 16281 129330 500000) 0 nil])
([nil nil ((812 . 813) (810 . 812) (#("
" 0 1 (font-lock-multiline t fontified t)) . -810) (undo-tree-id1032 . 1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) 811 (t 26388 16281 146387 206000)) nil (26388 16298 971539 224000) 0 nil])
([nil nil ((#("	" 0 1 (face markdown-pre-face font-lock-multiline t markdown-pre (812 1002) fontified t)) . 812) (t 26388 16298 976567 531000)) nil (26388 16303 211790 849000) 0 nil])
([nil nil ((1009 . 1015) (#("wr" 0 2 (fontified t)) . -1009) (undo-tree-id1088 . -2) (undo-tree-id1089 . -1) (undo-tree-id1090 . -2) (undo-tree-id1091 . -1) (undo-tree-id1092 . -2) (undo-tree-id1093 . -2) 1011 (1004 . 1011) (#("	" 0 1 (fontified t)) . -1004) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) 1005 (1003 . 1005) (1002 . 1003) (1002 . 1003) (t 26388 16303 226610 514000)) nil (26388 16432 544218 937000) 0 nil])
([nil nil ((1025 . 1028) (1004 . 1025) (#("Q" 0 1 (fontified t)) . -1004) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) 1005 (1004 . 1005) (#("Now" 0 3 (fontified t)) . -1004) (undo-tree-id1056 . -3) (undo-tree-id1057 . -3) (undo-tree-id1058 . -3) (undo-tree-id1059 . -3) (undo-tree-id1060 . -3) (undo-tree-id1061 . -3) (undo-tree-id1062 . -3) (undo-tree-id1063 . -3) (undo-tree-id1064 . -3) (undo-tree-id1065 . -3) (undo-tree-id1066 . -3) (undo-tree-id1067 . -3) (undo-tree-id1068 . -3) (undo-tree-id1069 . -3) (undo-tree-id1070 . -3) 1007 (#(", " 0 2 (fontified t)) . -1007) (undo-tree-id1071 . -2) (undo-tree-id1072 . -2) (undo-tree-id1073 . -2) (undo-tree-id1074 . -2) (undo-tree-id1075 . -2) (undo-tree-id1076 . -2) (undo-tree-id1077 . -2) (undo-tree-id1078 . -2) (undo-tree-id1079 . -2) (undo-tree-id1080 . -2) (undo-tree-id1081 . -2) (undo-tree-id1082 . -2) 1009 (#("let's " 0 6 (fontified t)) . -1009) (undo-tree-id1083 . -6) (undo-tree-id1084 . -6) (undo-tree-id1085 . -5) (undo-tree-id1086 . -6) (undo-tree-id1087 . -6) 1015) nil (26388 16432 544202 836000) 0 nil])
([nil nil ((812 . 813) (#("#" 0 1 (fontified t)) . -812) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (#("$" 0 1 (fontified t)) . -813) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) 814 (812 . 814)) nil (26388 16432 544156 198000) 0 nil])
([nil nil ((1002 . 1003)) nil (26388 16432 540812 704000) 0 nil])
([nil nil ((1075 . 1078) (1054 . 1075) (#("the" 0 3 (fontified t)) . -1054) (undo-tree-id1133 . -3) (undo-tree-id1134 . -1) (undo-tree-id1135 . -2) (undo-tree-id1136 . -1) (undo-tree-id1137 . -3) (undo-tree-id1138 . -2) (undo-tree-id1139 . -3) (undo-tree-id1140 . -3) (undo-tree-id1141 . -3) (undo-tree-id1142 . -3) (undo-tree-id1143 . -3) (undo-tree-id1144 . -3) 1057 (#(" " 0 1 (fontified t)) . -1057) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) 1058 (1049 . 1058) (#("e" 0 1 (fontified t)) . -1049) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (#("d" 0 1 (fontified t)) . -1050) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) 1051 (1049 . 1051) (1030 . 1049) (t 26388 16432 557918 508000)) nil (26388 16459 361520 260000) 0 nil])
([nil nil ((1105 . 1106) (#("." 0 1 (fontified t)) . -1105) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) 1106 (1097 . 1106) (1076 . 1097) (#("$" 0 1 (fontified t)) . 1076) (undo-tree-id1100 . -1) (#("$" 0 1 (fontified t)) . -1076) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (#("a" 0 1 (fontified t)) . -1077) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (#("-" 0 1 (fontified t)) . -1078) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) 1079 (1077 . 1079)) nil (26388 16459 361405 382000) 0 nil])
([nil nil ((1108 . 1109) (t 26388 16459 378189 755000)) nil (26388 16464 500008 808000) 0 nil])
([nil nil ((1660 . 1661)) nil (26388 16464 499999 591000) 0 nil])
([nil nil ((1662 . 1663) (t 26388 16464 516241 719000) 1662) nil (26388 16473 575028 142000) 0 nil])
([nil nil ((1704 . 1710) (1683 . 1704) (1663 . 1683) (#("W" 0 1 (fontified t)) . -1663) (undo-tree-id1202 . -1) (#("e" 0 1 (fontified t)) . -1664) (undo-tree-id1203 . -1) 1665 (#(" " 0 1 (fontified t)) . -1665) (undo-tree-id1204 . -1) 1666 (#("can" 0 3 (fontified t)) . -1666) (undo-tree-id1205 . -3) 1669 (#(" " 0 1 (fontified t)) . -1669) (undo-tree-id1206 . -1) 1670 (#("stack" 0 5 (fontified t)) . -1670) (undo-tree-id1207 . -5) 1675 (#(" " 0 1 (fontified t)) . -1675) (undo-tree-id1208 . -1) 1676 (1663 . 1676) (#("Since" 0 5 (fontified t)) . -1663) (undo-tree-id1209 . -5) 1668 (#(" " 0 1 (fontified t)) . -1668) (undo-tree-id1210 . -1) 1669 (#("we" 0 2 (fontified t)) . -1669) (undo-tree-id1211 . -2) 1671 (#(" " 0 1 (fontified t)) . -1671) (undo-tree-id1212 . -1) 1672 (#("have" 0 4 (fontified t)) . -1672) (undo-tree-id1213 . -4) 1676 (#(" " 0 1 (fontified t)) . -1676) (undo-tree-id1214 . -1) 1677 (#("4" 0 1 (fontified t)) . -1677) (undo-tree-id1215 . -1) 1678 (#(" " 0 1 (fontified t)) . -1678) (undo-tree-id1216 . -1) 1679 (#("points," 0 7 (fontified t)) . -1679) (undo-tree-id1217 . -7) 1686 (#(" " 0 1 (fontified t)) . -1686) (undo-tree-id1218 . -1) 1687 (1679 . 1687) (#("f" 0 1 (fontified t)) . -1679) (undo-tree-id1219 . -1) 1680 (1663 . 1680) (t 26388 16473 588333 469000)) nil (26388 16520 307109 718000) 0 nil])
([nil nil ((1710 . 1714) (#("4" 0 1 (fontified t)) . -1710) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) 1711 (1710 . 1711) (1709 . 1711)) nil (26388 16520 307089 940000) 0 nil])
([nil nil ((1716 . 1717)) nil (26388 16520 307085 622000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -1720) (1720 . 1721) (#(")" 0 1 (fontified nil)) . -1720) (1720 . 1721) (1716 . 1721) (#("\\" 0 1 (face (markdown-markup-face) invisible markdown-markup fontified t)) . -1716) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (#("i" 0 1 (fontified t)) . -1717) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (#("m" 0 1 (fontified t)) . -1718) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) 1719 (1715 . 1719)) nil (26388 16520 307083 257000) 0 nil])
([nil nil ((1724 . 1726) (#("x" 0 1 (fontified t)) . -1724) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (#("'" 0 1 (fontified t)) . -1725) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) 1726 (1720 . 1726)) nil (26388 16520 304877 189000) 0 nil])
([nil nil ((1729 . 1730) 1725) nil (26388 16520 304849 616000) 0 nil])
([nil nil ((1715 . 1717) (#("m" 0 1 (fontified t)) . -1715) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (#(" " 0 1 (fontified t)) . -1716) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) 1717 (1715 . 1717) (#(" " 0 1 (fontified t)) . -1715) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (#("-" 0 1 (fontified t)) . -1716) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (#(">" 0 1 (fontified t)) . -1717) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (#(" " 0 1 (fontified t)) . -1718) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) 1719 (t 26388 16520 319806 89000)) nil (26388 16554 85459 471000) 0 nil])
([nil nil ((1783 . 1789) (1762 . 1783) (1751 . 1762) (#("matrix" 0 6 (fontified t)) . -1751) (undo-tree-id1220 . -6) (undo-tree-id1221 . -1) (undo-tree-id1222 . -2) (undo-tree-id1223 . -1) (undo-tree-id1224 . -3) (undo-tree-id1225 . -2) (undo-tree-id1226 . -4) (undo-tree-id1227 . -3) (undo-tree-id1228 . -5) (undo-tree-id1229 . -4) (undo-tree-id1230 . -5) (undo-tree-id1231 . -6) (undo-tree-id1232 . -5) (undo-tree-id1233 . -6) (undo-tree-id1234 . -6) (undo-tree-id1235 . -6) (undo-tree-id1236 . -6) (undo-tree-id1237 . -6) (undo-tree-id1238 . -6) (undo-tree-id1239 . -6) (undo-tree-id1240 . -6) (undo-tree-id1241 . -6) (undo-tree-id1242 . -6) (undo-tree-id1243 . -6) (undo-tree-id1244 . -6) (undo-tree-id1245 . -6) (undo-tree-id1246 . -6) (undo-tree-id1247 . -6) (undo-tree-id1248 . -6) (undo-tree-id1249 . -6) (undo-tree-id1250 . -6) (undo-tree-id1251 . -6) (undo-tree-id1252 . -6) (undo-tree-id1253 . -6) (undo-tree-id1254 . -6) (undo-tree-id1255 . -6) (undo-tree-id1256 . -6) (undo-tree-id1257 . -6) (undo-tree-id1258 . -6) (undo-tree-id1259 . -6) (undo-tree-id1260 . -6) 1757 (#(" " 0 1 (fontified t)) . -1757) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) 1758 (#("and" 0 3 (fontified t)) . -1758) (undo-tree-id1286 . -3) (undo-tree-id1287 . -1) (undo-tree-id1288 . -2) (undo-tree-id1289 . -1) (undo-tree-id1290 . -3) (undo-tree-id1291 . -2) (undo-tree-id1292 . -3) (undo-tree-id1293 . -3) (undo-tree-id1294 . -3) (undo-tree-id1295 . -3) (undo-tree-id1296 . -3) (undo-tree-id1297 . -3) (undo-tree-id1298 . -3) (undo-tree-id1299 . -3) (undo-tree-id1300 . -3) (undo-tree-id1301 . -3) (undo-tree-id1302 . -3) (undo-tree-id1303 . -3) (undo-tree-id1304 . -3) (undo-tree-id1305 . -3) 1761 (#(" " 0 1 (fontified t)) . -1761) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) 1762 (#("its" 0 3 (fontified t)) . -1762) (undo-tree-id1319 . -3) (undo-tree-id1320 . -1) (undo-tree-id1321 . -2) (undo-tree-id1322 . -1) (undo-tree-id1323 . -3) (undo-tree-id1324 . -2) (undo-tree-id1325 . -3) 1765 (1745 . 1765) (1727 . 1745)) nil (26388 16554 85400 429000) 0 nil])
([nil nil ((1890 . 1898) (1869 . 1890) (1848 . 1869) (#(" " 0 1 (fontified t)) . -1848) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) 1849 (#("simply" 0 6 (fontified t)) . -1849) (undo-tree-id1412 . -6) (undo-tree-id1413 . -1) (undo-tree-id1414 . -2) (undo-tree-id1415 . -1) (undo-tree-id1416 . -3) (undo-tree-id1417 . -2) (undo-tree-id1418 . -4) (undo-tree-id1419 . -3) (undo-tree-id1420 . -5) (undo-tree-id1421 . -4) (undo-tree-id1422 . -6) (undo-tree-id1423 . -5) (undo-tree-id1424 . -6) (undo-tree-id1425 . -6) (undo-tree-id1426 . -6) (undo-tree-id1427 . -6) (undo-tree-id1428 . -6) (undo-tree-id1429 . -6) (undo-tree-id1430 . -6) (undo-tree-id1431 . -6) (undo-tree-id1432 . -6) (undo-tree-id1433 . -6) (undo-tree-id1434 . -6) (undo-tree-id1435 . -6) (undo-tree-id1436 . -6) (undo-tree-id1437 . -6) (undo-tree-id1438 . -6) (undo-tree-id1439 . -6) (undo-tree-id1440 . -6) 1855 (#(" " 0 1 (fontified t)) . -1855) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) 1856 (#("use" 0 3 (fontified t)) . -1856) (undo-tree-id1455 . -3) (undo-tree-id1456 . -1) (undo-tree-id1457 . -2) (undo-tree-id1458 . -1) (undo-tree-id1459 . -3) (undo-tree-id1460 . -2) (undo-tree-id1461 . -3) 1859 (1838 . 1859) (1817 . 1838) (1810 . 1817) (1789 . 1810) (t 26388 16554 97147 696000)) nil (26388 16579 405053 823000) 0 nil])
([nil nil ((#("$" 0 1 (fontified t)) . 1660) (undo-tree-id1462 . -1) (t 26388 16579 418403 783000)) nil (26388 16629 419901 193000) 0 nil])
([nil nil ((#("$" 0 1 (fontified t)) . 1108)) nil (26388 16629 419885 443000) 0 nil])
([nil nil ((#("$" 0 1 (fontified t)) . 1002)) nil (26388 16629 419883 138000) 0 nil])
([nil nil ((#("$" 0 1 (fontified t)) . 812)) nil (26388 16629 419873 841000) 0 nil])
([nil nil ((1895 . 1896) (t 26388 16629 435909 636000) 1895) nil (26388 16687 609685 772000) 0 nil])
([nil nil ((2002 . 2004) (1991 . 2002) (#("v" 0 1 (fontified t)) . -1991) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (#("b" 0 1 (fontified t)) . -1992) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) 1993 (1984 . 1993) (1963 . 1984) (#("," 0 1 (fontified t)) . -1963) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) 1964 (1961 . 1964) (1940 . 1961) (1938 . 1940) (1917 . 1938) (1896 . 1917) (#("
" 0 1 (fontified t)) . -1896) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) 1897 (1896 . 1897) 1896) nil (26388 16687 609682 827000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2004 . 2005) (#("
" 0 1 (fontified nil)) . -2058) (2004 . 2059)) nil (26388 16687 609662 57000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2004) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1)) nil (26388 16687 609660 144000) 0 nil])
([nil nil ((2050 . 2055) (#("before" 0 6 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t)) . -2050) (undo-tree-id1463 . -6) (undo-tree-id1464 . -6) (undo-tree-id1465 . -6) (undo-tree-id1466 . -6) (undo-tree-id1467 . -6) (undo-tree-id1468 . -6) (undo-tree-id1469 . -6) 2056) nil (26388 16687 603578 42000) 0 nil])
([nil nil ((2056 . 2057) 2054) nil (26388 16687 603548 416000) 0 nil])
([nil nil ((2121 . 2125) (#("r" 0 1 (fontified t)) . -2121) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (#("o" 0 1 (fontified t)) . -2122) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) 2123 (2110 . 2123) (2109 . 2111) (2093 . 2109) (#("qwh" 0 3 (fontified t)) . -2093) (undo-tree-id1502 . -3) (undo-tree-id1503 . -1) (undo-tree-id1504 . -2) (undo-tree-id1505 . -3) (undo-tree-id1506 . -2) (undo-tree-id1507 . -3) 2096 (2090 . 2096) (2069 . 2090) (#("result" 0 6 (fontified t)) . -2069) (undo-tree-id1508 . -6) (undo-tree-id1509 . -1) (undo-tree-id1510 . -2) (undo-tree-id1511 . -1) (undo-tree-id1512 . -3) (undo-tree-id1513 . -2) (undo-tree-id1514 . -4) (undo-tree-id1515 . -3) (undo-tree-id1516 . -5) (undo-tree-id1517 . -4) (undo-tree-id1518 . -6) (undo-tree-id1519 . -5) (undo-tree-id1520 . -6) 2075 (2066 . 2075) (2058 . 2066) (#("Let's" 0 5 (fontified t)) . -2058) (undo-tree-id1521 . -5) (undo-tree-id1522 . -1) (undo-tree-id1523 . -2) (undo-tree-id1524 . -1) (undo-tree-id1525 . -3) (undo-tree-id1526 . -2) (undo-tree-id1527 . -4) (undo-tree-id1528 . -3) (undo-tree-id1529 . -5) (undo-tree-id1530 . -4) (undo-tree-id1531 . -5) (undo-tree-id1532 . -5) (undo-tree-id1533 . -5) (undo-tree-id1534 . -5) (undo-tree-id1535 . -5) (undo-tree-id1536 . -5) (undo-tree-id1537 . -5) (undo-tree-id1538 . -5) (undo-tree-id1539 . -5) (undo-tree-id1540 . -5) (undo-tree-id1541 . -5) (undo-tree-id1542 . -5) (undo-tree-id1543 . -5) (undo-tree-id1544 . -5) (undo-tree-id1545 . -5) 2063 (#(" " 0 1 (fontified t)) . -2063) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) 2064 (#("so" 0 2 (fontified t)) . -2064) (undo-tree-id1560 . -2) (undo-tree-id1561 . -1) (undo-tree-id1562 . -2) (undo-tree-id1563 . -1) (undo-tree-id1564 . -2) (undo-tree-id1565 . -2) (undo-tree-id1566 . -2) (undo-tree-id1567 . -2) (undo-tree-id1568 . -2) 2066 (#(" " 0 1 (fontified t)) . -2066) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) 2067 (2058 . 2067) (#("We" 0 2 (fontified t)) . -2058) (undo-tree-id1573 . -2) (undo-tree-id1574 . -1) (undo-tree-id1575 . -2) (undo-tree-id1576 . -1) (undo-tree-id1577 . -2) (undo-tree-id1578 . -2) (undo-tree-id1579 . -2) (undo-tree-id1580 . -2) (undo-tree-id1581 . -2) (undo-tree-id1582 . -2) (undo-tree-id1583 . -2) (undo-tree-id1584 . -2) (undo-tree-id1585 . -2) (undo-tree-id1586 . -2) (undo-tree-id1587 . -2) (undo-tree-id1588 . -2) (undo-tree-id1589 . -2) (undo-tree-id1590 . -2) (undo-tree-id1591 . -2) (undo-tree-id1592 . -2) 2060 (#(" " 0 1 (fontified t)) . -2060) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) 2061 (#("can" 0 3 (fontified t)) . -2061) (undo-tree-id1607 . -3) (undo-tree-id1608 . -1) (undo-tree-id1609 . -2) (undo-tree-id1610 . -1) (undo-tree-id1611 . -3) (undo-tree-id1612 . -2) (undo-tree-id1613 . -3) 2064 (2058 . 2064) (2057 . 2058) (t 26388 16687 622498 452000) 2057) nil (26388 16730 228142 314000) 0 nil])
([nil nil ((2126 . 2127)) nil (26388 16730 223574 421000) 0 nil])
([nil nil ((2127 . 2128) 2126) nil (26388 16730 223565 865000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2128 . 2129) (#("
" 0 1 (fontified nil)) . -2181) (2128 . 2182) (t 26388 16730 240929 773000)) nil (26388 16756 20134 948000) 0 nil])
([nil nil ((2172 . 2176) (2165 . 2172) (#("classical_" 0 10 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t)) . -2165) (undo-tree-id1614 . -10) (undo-tree-id1615 . -10) (undo-tree-id1616 . -10) (undo-tree-id1617 . -10) (undo-tree-id1618 . -10) (undo-tree-id1619 . -10) (undo-tree-id1620 . -10) (undo-tree-id1621 . -10) (undo-tree-id1622 . -10) 2175 (#("after" 0 5 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t)) . -2175) (undo-tree-id1623 . -5) (undo-tree-id1624 . -5) (undo-tree-id1625 . -5) (undo-tree-id1626 . -5) (undo-tree-id1627 . -5) (undo-tree-id1628 . -5) (undo-tree-id1629 . -5) 2180) nil (26388 16756 20131 902000) 0 nil])
([nil nil ((2177 . 2178) 2175) nil (26388 16756 19458 15000) 0 nil])
([nil nil ((2178 . 2179) (2177 . 2178) (t 26388 16756 35190 824000) 2175) nil (26388 16780 399321 240000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2178 . 2179) (#("
" 0 1 (fontified nil)) . -2227) (2178 . 2228)) nil (26388 16780 399319 156000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . 2102) (#("t" 0 1 (fontified t)) . 2102) (#(" " 0 1 (fontified t)) . 2102) (#("d" 0 1 (fontified t)) . 2102) (#("e" 0 1 (fontified t)) . 2102) (#("i" 0 1 (fontified t)) . 2102) (#("l" 0 1 (fontified t)) . 2102) (#("p" 0 1 (fontified t)) . 2102) (#("p" 0 1 (fontified t)) . 2102) (#("a" 0 1 (fontified t)) . 2102) (#(" " 0 1 (fontified t)) . 2102) (#("n" 0 1 (fontified t)) . 2102) (#("e" 0 1 (fontified t)) . 2102) (#("h" 0 1 (fontified t)) . 2102) (#("w" 0 1 (fontified t)) . 2102) (#(" " 0 1 (fontified t)) . 2102) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (2097 . 2102) (#("i" 0 1 (fontified t)) . -2097) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) 2098 (2094 . 2098) (#("scale" 0 5 (fontified t)) . -2094) (undo-tree-id1636 . -5) (undo-tree-id1637 . -1) (undo-tree-id1638 . -2) (undo-tree-id1639 . -1) (undo-tree-id1640 . -3) (undo-tree-id1641 . -2) (undo-tree-id1642 . -4) (undo-tree-id1643 . -3) (undo-tree-id1644 . -5) (undo-tree-id1645 . -4) (undo-tree-id1646 . -5) (undo-tree-id1647 . -5) (undo-tree-id1648 . -5) (undo-tree-id1649 . -5) (undo-tree-id1650 . -5) 2099 (#(" " 0 1 (fontified t)) . -2099) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) 2100 (2085 . 2100) (#("f" 0 1 (fontified t)) . -2085) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) 2086 (2065 . 2086) (#("r" 0 1 (fontified t)) . -2065) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (#("e" 0 1 (fontified t)) . -2066) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) 2067 (2065 . 2067) (#("the" 0 3 (fontified t)) . -2065) (undo-tree-id1670 . -3) (undo-tree-id1671 . -3) (undo-tree-id1672 . -3) (undo-tree-id1673 . -3) (undo-tree-id1674 . -3) (undo-tree-id1675 . -3) (undo-tree-id1676 . -3) (undo-tree-id1677 . -3) (undo-tree-id1678 . -3) (undo-tree-id1679 . -3) (undo-tree-id1680 . -3) (undo-tree-id1681 . -3) (undo-tree-id1682 . -3) (undo-tree-id1683 . -3) (undo-tree-id1684 . -3) (undo-tree-id1685 . -3) (undo-tree-id1686 . -3) (undo-tree-id1687 . -3) (undo-tree-id1688 . -3) (undo-tree-id1689 . -3) (undo-tree-id1690 . -3) (undo-tree-id1691 . -3) (undo-tree-id1692 . -3) (undo-tree-id1693 . -3) (undo-tree-id1694 . -3) (undo-tree-id1695 . -3) (undo-tree-id1696 . -3) (undo-tree-id1697 . -3) (undo-tree-id1698 . -3) (undo-tree-id1699 . -3) (undo-tree-id1700 . -3) 2068 (#(" " 0 1 (fontified t)) . -2068) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) 2069 (#("resulting" 0 9 (fontified t)) . -2069) (undo-tree-id1731 . -9) (undo-tree-id1732 . -9) (undo-tree-id1733 . -9) (undo-tree-id1734 . -9) (undo-tree-id1735 . -9) (undo-tree-id1736 . -9) (undo-tree-id1737 . -9) (undo-tree-id1738 . -9) (undo-tree-id1739 . -9) (undo-tree-id1740 . -9) (undo-tree-id1741 . -9) (undo-tree-id1742 . -9) (undo-tree-id1743 . -9) (undo-tree-id1744 . -9) (undo-tree-id1745 . -9) (undo-tree-id1746 . -9) (undo-tree-id1747 . -9) (undo-tree-id1748 . -9) (undo-tree-id1749 . -9) (undo-tree-id1750 . -9) (undo-tree-id1751 . -9) (undo-tree-id1752 . -9) (undo-tree-id1753 . -9) (undo-tree-id1754 . -9) (undo-tree-id1755 . -9) (undo-tree-id1756 . -9) (undo-tree-id1757 . -9) 2078 (#(" " 0 1 (fontified t)) . -2078) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) 2079 (#("rectification" 0 13 (fontified t)) . 2079) (undo-tree-id1784 . -2) (undo-tree-id1785 . -10) (undo-tree-id1786 . -2) (undo-tree-id1787 . -2) (undo-tree-id1788 . -2) (undo-tree-id1789 . -2) (undo-tree-id1790 . -2) (undo-tree-id1791 . -2) (undo-tree-id1792 . -2) (undo-tree-id1793 . -2) (undo-tree-id1794 . -2) (undo-tree-id1795 . -13) (undo-tree-id1796 . -12) (undo-tree-id1797 . -13) (undo-tree-id1798 . -11) (undo-tree-id1799 . -12) (undo-tree-id1800 . -10) (undo-tree-id1801 . -11) (undo-tree-id1802 . -10) (undo-tree-id1803 . -10) (undo-tree-id1804 . -10) 2089) nil (26388 16780 399298 357000) 0 nil])
([nil nil ((2209 . 2214) (#("ambassadors" 0 7 (fontified t face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face))) 7 11 (fontified t face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)))) . 2209) (undo-tree-id1805 . -7) (undo-tree-id1806 . -7) (undo-tree-id1807 . -7) (undo-tree-id1808 . -7) (undo-tree-id1809 . -7) 2216 (t 26388 16780 411437 524000)) nil (26388 16792 14390 465000) 0 nil])
([nil nil ((2170 . 2174) (t 26388 16792 28555 96000)) nil (26388 16795 275413 244000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2221 . 2222) (#("
" 0 1 (fontified nil font-lock-multiline t)) . -2246) (2221 . 2247) (t 26388 16795 288588 89000)) nil (26388 16837 507075 53000) 0 nil])
([nil nil ((2230 . 2231) (#("1" 0 1 (face markdown-header-face-2 markdown-heading-2-atx (2222 2246 nil nil nil nil nil nil 2222 2225 2225 2246 2246 2246 #<buffer 2024-10-18-proj4.markdown>) markdown-heading (2222 2246 nil nil nil nil nil nil 2222 2225 2225 2246 2246 2246 #<buffer 2024-10-18-proj4.markdown>) fontified t)) . -2230) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) 2231) nil (26388 16837 507072 719000) 0 nil])
([nil nil ((2234 . 2239) (#("a" 0 1 (font-lock-multiline t face markdown-header-face-2 markdown-heading-2-atx (2222 2235 nil nil nil nil nil nil 2222 2225 2225 2235 2235 2235 #<buffer 2024-10-18-proj4.markdown>) markdown-heading (2222 2235 nil nil nil nil nil nil 2222 2225 2225 2235 2235 2235 #<buffer 2024-10-18-proj4.markdown>) fontified t)) . -2234) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) 2235 (2233 . 2235) (#("Rectification" 0 12 (face markdown-header-face-2 markdown-heading-2-atx (2222 2246 nil nil nil nil nil nil 2222 2225 2225 2246 2246 2246 #<buffer 2024-10-18-proj4.markdown>) markdown-heading (2222 2246 nil nil nil nil nil nil 2222 2225 2225 2246 2246 2246 #<buffer 2024-10-18-proj4.markdown>) fontified t) 12 13 (font-lock-multiline t face markdown-header-face-2 markdown-heading-2-atx (2222 2246 nil nil nil nil nil nil 2222 2225 2225 2246 2246 2246 #<buffer 2024-10-18-proj4.markdown>) markdown-heading (2222 2246 nil nil nil nil nil nil 2222 2225 2225 2246 2246 2246 #<buffer 2024-10-18-proj4.markdown>) fontified t)) . 2233) (undo-tree-id1813 . -13) (undo-tree-id1814 . -13)) nil (26388 16837 507063 511000) 0 nil])
([nil nil ((2239 . 2240) 2238) nil (26388 16837 507027 794000) 0 nil])
([nil nil ((2335 . 2349) (2320 . 2335) (#("l" 0 1 (fontified t)) . -2320) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (#("d" 0 1 (fontified t)) . -2321) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) 2322 (2312 . 2322) (#("," 0 1 (fontified t)) . -2312) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) 2313 (2297 . 2313) (2283 . 2297) (2262 . 2283) (#("o" 0 1 (fontified t)) . -2262) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) 2263 (2253 . 2263) (2241 . 2253) (2240 . 2241) (2239 . 2240) (t 26388 16837 524015 533000) 2238) nil (26388 16881 749216 273000) 0 nil])
([nil nil ((2350 . 2351) (2349 . 2350) 2348) nil (26388 16881 749114 129000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2675 . 2676) (nil fontified nil 2351 . 2676) (2351 . 2676)) nil (26388 16881 749112 476000) 0 nil])
([nil nil ((#("W" 0 1 (face (markdown-table-face) fontified t)) . -2357) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) 2358 (2357 . 2358) (2354 . 2357) (#("K" 0 1 (face (markdown-table-face) fontified t)) . -2354) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (#("e" 0 1 (face (markdown-table-face) fontified t)) . -2355) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) 2356 (2353 . 2356) (#("George" 0 6 (face (markdown-table-face) fontified t)) . 2353)) nil (26388 16881 749108 709000) 0 nil])
([nil nil ((2407 . 2412) (#("Me" 0 2 (face (markdown-table-face) fontified t)) . 2407) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) 2408) nil (26388 16881 742714 987000) 0 nil])
([nil nil ((#("george_" 0 7 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t)) . -2606) (undo-tree-id1877 . -7) (undo-tree-id1878 . -7) (undo-tree-id1879 . -7) (undo-tree-id1880 . -7) (undo-tree-id1881 . -7) (undo-tree-id1882 . -7) (undo-tree-id1883 . -7) (undo-tree-id1884 . -7) (undo-tree-id1885 . -7) (undo-tree-id1886 . -7) (undo-tree-id1887 . -7) (undo-tree-id1888 . -7) 2613 (#("small." 0 6 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t)) . -2613) (undo-tree-id1889 . -6) (undo-tree-id1890 . -6) (undo-tree-id1891 . -6) (undo-tree-id1892 . -6) (undo-tree-id1893 . -6) (undo-tree-id1894 . -6) (undo-tree-id1895 . -6) (undo-tree-id1896 . -6) (undo-tree-id1897 . -6) (undo-tree-id1898 . -6) 2619 (#("jpg" 0 3 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t)) . -2619) (undo-tree-id1899 . -3) (undo-tree-id1900 . -3) (undo-tree-id1901 . -3) (undo-tree-id1902 . -3) (undo-tree-id1903 . -3) (undo-tree-id1904 . -3) (undo-tree-id1905 . -3) 2622 (t 26388 16881 761463 239000)) nil (26388 16917 954034 268000) 0 nil])
([nil nil ((2606 . 2611)) nil (26388 16917 954006 715000) 0 nil])
([nil nil ((2654 . 2656) (#("o" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t)) . -2654) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) 2655 (2651 . 2655) (#("lduong." 0 7 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t)) . -2651) (undo-tree-id1861 . -7) (undo-tree-id1862 . -7) (undo-tree-id1863 . -7) (undo-tree-id1864 . -7) (undo-tree-id1865 . -7) (undo-tree-id1866 . -7) (undo-tree-id1867 . -7) (undo-tree-id1868 . -7) (undo-tree-id1869 . -7) 2658 (#("jpg" 0 3 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t)) . -2658) (undo-tree-id1870 . -3) (undo-tree-id1871 . -3) (undo-tree-id1872 . -3) (undo-tree-id1873 . -3) (undo-tree-id1874 . -3) (undo-tree-id1875 . -3) (undo-tree-id1876 . -3) 2661) nil (26388 16917 953999 321000) 0 nil])
([nil nil ((2604 . 2605) (#("3" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t)) . -2604) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) 2605 (t 26388 16917 968829 677000)) nil (26388 16931 351894 933000) 0 nil])
([nil nil ((2649 . 2650) (#("3" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t)) . -2649) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) 2650) nil (26388 16931 351878 983000) 0 nil])
([nil nil ((2703 . 2708) (2682 . 2703) (2661 . 2682) (2660 . 2661) (2659 . 2660) (t 26388 16931 366965 273000) 2649) nil (26388 17306 654664 685000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3020 . 3021) (nil fontified nil 2711 . 3021) (2711 . 3021)) nil (26388 17306 654662 891000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2710) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1)) nil (26388 17306 654661 388000) 0 nil])
([nil nil ((2966 . 2968) (#("." 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t)) . -2966) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) 2967 (2966 . 2967) (#("." 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t)) . -2966) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) 2967 (#("jpg" 0 3 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t)) . 2967) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) 2968) nil (26388 17306 654653 373000) 0 nil])
([nil nil ((3009 . 3011) (#("." 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t)) . -3009) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) 3010 (#("jpg" 0 3 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t)) . 3010) (undo-tree-id1935 . -3) (undo-tree-id1936 . -3)) nil (26388 17306 654608 879000) 0 nil])
([nil nil ((#("This" 0 4 (fontified t)) . -3156) (undo-tree-id1961 . -4) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -2) (undo-tree-id1965 . -1) (undo-tree-id1966 . -3) (undo-tree-id1967 . -2) (undo-tree-id1968 . -4) (undo-tree-id1969 . -3) (undo-tree-id1970 . -4) (undo-tree-id1971 . -4) (undo-tree-id1972 . -4) (undo-tree-id1973 . -4) (undo-tree-id1974 . -4) (undo-tree-id1975 . -4) (undo-tree-id1976 . -4) (undo-tree-id1977 . -4) (undo-tree-id1978 . -4) (undo-tree-id1979 . -4) (undo-tree-id1980 . -4) (undo-tree-id1981 . -4) (undo-tree-id1982 . -4) (undo-tree-id1983 . -4) (undo-tree-id1984 . -4) (undo-tree-id1985 . -4) (undo-tree-id1986 . -4) (undo-tree-id1987 . -4) (undo-tree-id1988 . -4) (undo-tree-id1989 . -4) (undo-tree-id1990 . -4) (undo-tree-id1991 . -4) (undo-tree-id1992 . -4) (undo-tree-id1993 . -4) (undo-tree-id1994 . -4) (undo-tree-id1995 . -4) (undo-tree-id1996 . -4) (undo-tree-id1997 . -4) (undo-tree-id1998 . -4) (undo-tree-id1999 . -4) (undo-tree-id2000 . -4) (undo-tree-id2001 . -4) (undo-tree-id2002 . -4) (undo-tree-id2003 . -4) (undo-tree-id2004 . -4) (undo-tree-id2005 . -4) (undo-tree-id2006 . -4) (undo-tree-id2007 . -4) (undo-tree-id2008 . -4) 3160 (#(" " 0 1 (fontified t)) . -3160) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) 3161 (#("homography" 0 10 (fontified t)) . -3161) (undo-tree-id2047 . -10) (undo-tree-id2048 . -1) (undo-tree-id2049 . -2) (undo-tree-id2050 . -1) (undo-tree-id2051 . -3) (undo-tree-id2052 . -2) (undo-tree-id2053 . -4) (undo-tree-id2054 . -3) (undo-tree-id2055 . -5) (undo-tree-id2056 . -4) (undo-tree-id2057 . -5) (undo-tree-id2058 . -6) (undo-tree-id2059 . -5) (undo-tree-id2060 . -6) (undo-tree-id2061 . -7) (undo-tree-id2062 . -6) (undo-tree-id2063 . -7) (undo-tree-id2064 . -8) (undo-tree-id2065 . -7) (undo-tree-id2066 . -8) (undo-tree-id2067 . -9) (undo-tree-id2068 . -8) (undo-tree-id2069 . -9) (undo-tree-id2070 . -10) (undo-tree-id2071 . -9) (undo-tree-id2072 . -10) (undo-tree-id2073 . -10) (undo-tree-id2074 . -10) (undo-tree-id2075 . -10) (undo-tree-id2076 . -10) (undo-tree-id2077 . -10) (undo-tree-id2078 . -10) (undo-tree-id2079 . -10) 3171 (#(" " 0 1 (fontified t)) . -3171) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) 3172 (3157 . 3172) (3155 . 3157) (3134 . 3155) (3120 . 3134) (3099 . 3120) (#("the" 0 3 (fontified t)) . -3099) (undo-tree-id2085 . -3) (undo-tree-id2086 . -1) (undo-tree-id2087 . -2) (undo-tree-id2088 . -1) (undo-tree-id2089 . -3) (undo-tree-id2090 . -2) (undo-tree-id2091 . -3) 3102 (3099 . 3102) (#("in" 0 2 (fontified t)) . -3099) (undo-tree-id2092 . -2) (undo-tree-id2093 . -1) (undo-tree-id2094 . -2) (undo-tree-id2095 . -1) (undo-tree-id2096 . -2) (undo-tree-id2097 . -2) (undo-tree-id2098 . -2) (undo-tree-id2099 . -2) (undo-tree-id2100 . -2) (undo-tree-id2101 . -2) (undo-tree-id2102 . -2) (undo-tree-id2103 . -2) (undo-tree-id2104 . -2) (undo-tree-id2105 . -2) (undo-tree-id2106 . -2) (undo-tree-id2107 . -2) (undo-tree-id2108 . -2) (undo-tree-id2109 . -2) (undo-tree-id2110 . -2) (undo-tree-id2111 . -2) (undo-tree-id2112 . -2) (undo-tree-id2113 . -2) (undo-tree-id2114 . -2) (undo-tree-id2115 . -2) (undo-tree-id2116 . -2) (undo-tree-id2117 . -2) (undo-tree-id2118 . -2) (undo-tree-id2119 . -2) (undo-tree-id2120 . -2) (undo-tree-id2121 . -2) (undo-tree-id2122 . -2) 3101 (#(" " 0 1 (fontified t)) . -3101) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) 3102 (#("image" 0 5 (fontified t)) . -3102) (undo-tree-id2149 . -5) (undo-tree-id2150 . -1) (undo-tree-id2151 . -2) (undo-tree-id2152 . -1) (undo-tree-id2153 . -3) (undo-tree-id2154 . -2) (undo-tree-id2155 . -4) (undo-tree-id2156 . -3) (undo-tree-id2157 . -5) (undo-tree-id2158 . -4) (undo-tree-id2159 . -5) (undo-tree-id2160 . -5) (undo-tree-id2161 . -5) (undo-tree-id2162 . -5) (undo-tree-id2163 . -5) (undo-tree-id2164 . -5) (undo-tree-id2165 . -5) (undo-tree-id2166 . -5) (undo-tree-id2167 . -5) (undo-tree-id2168 . -5) (undo-tree-id2169 . -5) 3107 (#(" " 0 1 (fontified t)) . -3107) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) 3108 (#("2" 0 1 (fontified t)) . -3108) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) 3109 (3107 . 3109) (3086 . 3107) (3079 . 3086) (3058 . 3079) (3037 . 3058) (3016 . 3037) (3015 . 3016) (3014 . 3015) (t 26388 17306 669763 531000) 3010) nil (26388 17411 952385 6000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3463 . 3464) (nil fontified nil 3158 . 3464) (3158 . 3464) (t 26388 17411 965829 181000)) nil (26388 17789 137541 490000) 0 nil])
([nil nil ((3415 . 3416) (#("c" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t)) . -3415) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) 3416) nil (26388 17789 137538 674000) 0 nil])
([nil nil ((3458 . 3459) (#("c" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t)) . -3458) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) 3459) nil (26388 17789 137515 260000) 0 nil])
([nil nil ((3216 . 3217) (#("l" 0 1 (fontified t)) . -3216) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (#("e" 0 1 (fontified t)) . -3217) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) 3218 (3205 . 3218) (3184 . 3205) (3172 . 3184) (#("homography" 0 10 (fontified t)) . -3172) (undo-tree-id2213 . -10) (undo-tree-id2214 . -1) (undo-tree-id2215 . -2) (undo-tree-id2216 . -1) (undo-tree-id2217 . -3) (undo-tree-id2218 . -2) (undo-tree-id2219 . -4) (undo-tree-id2220 . -3) (undo-tree-id2221 . -5) (undo-tree-id2222 . -4) (undo-tree-id2223 . -5) (undo-tree-id2224 . -6) (undo-tree-id2225 . -5) (undo-tree-id2226 . -6) (undo-tree-id2227 . -7) (undo-tree-id2228 . -6) (undo-tree-id2229 . -7) (undo-tree-id2230 . -8) (undo-tree-id2231 . -7) (undo-tree-id2232 . -8) (undo-tree-id2233 . -9) (undo-tree-id2234 . -8) (undo-tree-id2235 . -9) (undo-tree-id2236 . -10) (undo-tree-id2237 . -9) (undo-tree-id2238 . -10) (undo-tree-id2239 . -10) (undo-tree-id2240 . -10) (undo-tree-id2241 . -10) (undo-tree-id2242 . -10) (undo-tree-id2243 . -10) (undo-tree-id2244 . -10) (undo-tree-id2245 . -10) (undo-tree-id2246 . -10) (undo-tree-id2247 . -10) (undo-tree-id2248 . -10) (undo-tree-id2249 . -10) (undo-tree-id2250 . -10) (undo-tree-id2251 . -10) (undo-tree-id2252 . -10) (undo-tree-id2253 . -10) (undo-tree-id2254 . -10) (undo-tree-id2255 . -10) (undo-tree-id2256 . -10) (undo-tree-id2257 . -10) (undo-tree-id2258 . -10) 3182 (#(" " 0 1 (fontified t)) . -3182) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) 3183 (#("appl" 0 4 (fontified t)) . -3183) (undo-tree-id2275 . -4) (undo-tree-id2276 . -1) (undo-tree-id2277 . -2) (undo-tree-id2278 . -1) (undo-tree-id2279 . -3) (undo-tree-id2280 . -2) (undo-tree-id2281 . -4) (undo-tree-id2282 . -3) (undo-tree-id2283 . -4) 3187 (3177 . 3187) (3156 . 3177) (t 26388 17789 153738 37000)) nil (26388 17832 630637 587000) 0 nil])
([nil nil ((3217 . 3218)) nil (26388 17832 621400 462000) 0 nil])
([nil nil ((3217 . 3218) (#("." 0 1 (fontified t)) . -3217) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) 3218 (t 26388 17832 644211 782000)) nil (26388 17834 837730 733000) 0 nil])
([nil nil ((3588 . 3590) (3567 . 3588) (3549 . 3567) (#("toble" 0 5 (fontified t)) . -3549) (undo-tree-id2289 . -5) (undo-tree-id2290 . -1) (undo-tree-id2291 . -2) (undo-tree-id2292 . -1) (undo-tree-id2293 . -3) (undo-tree-id2294 . -2) (undo-tree-id2295 . -4) (undo-tree-id2296 . -3) (undo-tree-id2297 . -5) (undo-tree-id2298 . -4) (undo-tree-id2299 . -5) 3554 (3548 . 3554) (3527 . 3548) (3526 . 3527) (t 26388 17834 853235 845000) 3526) nil (26388 18001 201515 454000) 0 nil])
([nil nil ((3590 . 3591) 3589) nil (26388 18001 197122 268000) 0 nil])
([nil nil ((3591 . 3592) (3590 . 3591) (t 26388 18001 215048 38000) 3589) nil (26388 18002 650342 317000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3631 . 3632) (nil fontified nil 3592 . 3632) (3592 . 3632) (t 26388 18002 663063 811000)) nil (26388 18392 459549 746000) 0 nil])
([nil nil ((3630 . 3631) (#("s" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t)) . -3630) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) 3631) nil (26388 18392 459289 883000) 0 nil])
([nil current ((3631 . 3636) (t 26388 18392 483310 155000)) nil (26388 19091 670711 691000) 0 nil])
nil
