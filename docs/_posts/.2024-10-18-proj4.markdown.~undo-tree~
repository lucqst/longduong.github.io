(undo-tree-save-format-version . 1)
"4c97c91e91895a0f86d9dce3a9ca24e98a981809"
[nil nil nil nil (26402 57574 40600 89000) 0 nil]
([nil nil ((#("." 0 1 (font-lock-multiline t face markdown-header-face-1 markdown-heading-1-atx (3639 3661 nil nil nil nil nil nil 3639 3641 3641 3661 3661 3661 #<buffer 2024-10-18-proj4.markdown>) markdown-heading (3639 3661 nil nil nil nil nil nil 3639 3641 3641 3661 3661 3661 #<buffer 2024-10-18-proj4.markdown>) wrap-prefix "  " fontified t)) . -3660) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) 3661 (3660 . 3661) (3639 . 3660) (#("Part" 0 4 (wrap-prefix "  " fontified t)) . -3639) (undo-tree-id5 . -4) (undo-tree-id6 . -1) (undo-tree-id7 . -2) (undo-tree-id8 . -1) (undo-tree-id9 . -3) (undo-tree-id10 . -2) (undo-tree-id11 . -4) (undo-tree-id12 . -3) (undo-tree-id13 . -4) 3643 (3639 . 3643) (3638 . 3639) (t 26388 19091 691690 208000) 3638) nil (26402 57574 40597 635000) 0 nil])
([nil nil ((3660 . 3661) 3659) nil (26402 57574 40550 425000) 0 nil])
([nil nil ((3661 . 3662) (3660 . 3661) (t 26402 57574 45768 192000) 3659) nil (26402 57926 103084 855000) 0 nil])
([nil nil ((3683 . 3688) (3662 . 3683)) nil (26402 57926 103083 823000) 0 nil])
([nil nil ((3683 . 3687) (#("i" 0 1 (wrap-prefix "  " fontified t)) . -3683) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) 3684 (3674 . 3684) (#("this" 0 4 (wrap-prefix "  " fontified t)) . 3674) (undo-tree-id465 . -1) (undo-tree-id466 . -2) (undo-tree-id467 . -1) (undo-tree-id468 . -3) (undo-tree-id469 . -2) (undo-tree-id470 . -4) (undo-tree-id471 . -3) (undo-tree-id472 . -4)) nil (26402 57926 103082 631000) 0 nil])
([nil nil ((3674 . 3678) (#("thethi" 0 6 (wrap-prefix "  " fontified t)) . -3674) (undo-tree-id291 . -6) (undo-tree-id292 . -1) (undo-tree-id293 . -2) (undo-tree-id294 . -1) (undo-tree-id295 . -3) (undo-tree-id296 . -2) (undo-tree-id297 . -3) (undo-tree-id298 . -3) (undo-tree-id299 . -3) (undo-tree-id300 . -3) (undo-tree-id301 . -3) (undo-tree-id302 . -3) (undo-tree-id303 . -3) (undo-tree-id304 . -3) (undo-tree-id305 . -3) (undo-tree-id306 . -3) (undo-tree-id307 . -3) (undo-tree-id308 . -3) (undo-tree-id309 . -3) (undo-tree-id310 . -3) (undo-tree-id311 . -3) (undo-tree-id312 . -3) (undo-tree-id313 . -3) (undo-tree-id314 . -3) (undo-tree-id315 . -3) (undo-tree-id316 . -3) (undo-tree-id317 . -3) (undo-tree-id318 . -3) (undo-tree-id319 . -3) (undo-tree-id320 . -3) (undo-tree-id321 . -3) (undo-tree-id322 . -3) (undo-tree-id323 . -3) (undo-tree-id324 . -3) (undo-tree-id325 . -3) (undo-tree-id326 . -3) (undo-tree-id327 . -3) (undo-tree-id328 . -3) (undo-tree-id329 . -3) (undo-tree-id330 . -3) (undo-tree-id331 . -3) (undo-tree-id332 . -3) (undo-tree-id333 . -3) (undo-tree-id334 . -3) (undo-tree-id335 . -3) (undo-tree-id336 . -3) (undo-tree-id337 . -3) (undo-tree-id338 . -3) (undo-tree-id339 . -3) (undo-tree-id340 . -3) (undo-tree-id341 . -3) (undo-tree-id342 . -3) (undo-tree-id343 . -3) (undo-tree-id344 . -3) (undo-tree-id345 . -3) (undo-tree-id346 . -3) (undo-tree-id347 . -3) (undo-tree-id348 . -3) (undo-tree-id349 . -4) (undo-tree-id350 . -3) (undo-tree-id351 . -5) (undo-tree-id352 . -4) (undo-tree-id353 . -6) (undo-tree-id354 . -5) (undo-tree-id355 . -6) 3680 (3677 . 3680) (#(" " 0 1 (wrap-prefix "  " fontified t)) . -3677) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) 3678 (#("th" 0 2 (wrap-prefix "  " fontified t)) . -3678) (undo-tree-id366 . -2) (undo-tree-id367 . -1) (undo-tree-id368 . -2) (undo-tree-id369 . -1) (undo-tree-id370 . -2) 3680 (3677 . 3680) (#(" " 0 1 (wrap-prefix "  " fontified t)) . -3677) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) 3678 (#("mosac-" 0 6 (wrap-prefix "  " fontified t)) . -3678) (undo-tree-id413 . -6) (undo-tree-id414 . -1) (undo-tree-id415 . -2) (undo-tree-id416 . -1) (undo-tree-id417 . -3) (undo-tree-id418 . -2) (undo-tree-id419 . -4) (undo-tree-id420 . -3) (undo-tree-id421 . -5) (undo-tree-id422 . -4) (undo-tree-id423 . -5) (undo-tree-id424 . -5) (undo-tree-id425 . -5) (undo-tree-id426 . -5) (undo-tree-id427 . -6) (undo-tree-id428 . -5) (undo-tree-id429 . -6) (undo-tree-id430 . -6) (undo-tree-id431 . -6) (undo-tree-id432 . -6) (undo-tree-id433 . -6) (undo-tree-id434 . -6) (undo-tree-id435 . -6) (undo-tree-id436 . -6) (undo-tree-id437 . -6) (undo-tree-id438 . -6) (undo-tree-id439 . -6) (undo-tree-id440 . -6) (undo-tree-id441 . -6) (undo-tree-id442 . -6) (undo-tree-id443 . -6) (undo-tree-id444 . -6) (undo-tree-id445 . -6) (undo-tree-id446 . -6) (undo-tree-id447 . -6) (undo-tree-id448 . -6) (undo-tree-id449 . -6) 3684 (#("ing" 0 3 (wrap-prefix "  " fontified t)) . 3684) (undo-tree-id450 . -1) (undo-tree-id451 . -2) (undo-tree-id452 . -1) (undo-tree-id453 . -3) (undo-tree-id454 . -2) (undo-tree-id455 . -2) (undo-tree-id456 . -2) (undo-tree-id457 . -2) (undo-tree-id458 . -2) (undo-tree-id459 . -2) (undo-tree-id460 . -2) (undo-tree-id461 . -2)) nil (26402 57926 103073 794000) 0 nil])
([nil nil ((3709 . 3729) (3688 . 3709)) nil (26402 57926 102998 231000) 0 nil])
([nil nil ((3795 . 3804) (#(" " 0 1 (wrap-prefix "  " fontified t)) . -3795) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (#("p" 0 1 (wrap-prefix "  " fontified t)) . -3796) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (#("i" 0 1 (wrap-prefix "  " fontified t)) . -3797) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) 3798 (3796 . 3798) (#("i" 0 1 (wrap-prefix "  " fontified t)) . -3796) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) 3797 (3783 . 3797) (3766 . 3783) (3752 . 3766) (#("d" 0 1 (wrap-prefix "  " fontified t)) . -3752) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) 3753 (3750 . 3753) (3729 . 3750)) nil (26402 57926 102996 678000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4110 . 4111) (nil fontified nil 3805 . 4111) (3805 . 4111)) nil (26402 57926 102981 419000) 0 nil])
([nil nil ((3804 . 3805) 3662) nil (26402 57926 102980 227000) 0 nil])
([nil nil ((3808 . 3818) (#("Uninte" 0 6 (face (markdown-table-face) wrap-prefix "  " fontified t)) . -3808) (undo-tree-id247 . -6) (undo-tree-id248 . -1) (undo-tree-id249 . -2) (undo-tree-id250 . -1) (undo-tree-id251 . -3) (undo-tree-id252 . -2) (undo-tree-id253 . -4) (undo-tree-id254 . -3) (undo-tree-id255 . -5) (undo-tree-id256 . -4) (undo-tree-id257 . -6) (undo-tree-id258 . -5) (undo-tree-id259 . -6) 3814 (3808 . 3814) (#("Left" 0 4 (wrap-prefix "  " face (markdown-table-face) fontified t)) . 3808)) nil (26402 57926 102979 115000) 0 nil])
([nil nil ((#("|:-----------------------------------------------------:|:-----------------------------------------------:|
" 0 107 (face (markdown-table-face) wrap-prefix "  " fontified nil) 107 108 (font-lock-multiline t face (markdown-table-face) wrap-prefix "  " fontified nil)) . 3982) (undo-tree-id164 . 108) (undo-tree-id165 . -108) (undo-tree-id166 . -108) (3894 . 3982) (#("| UnFeatured                                                | Featured Right                                              |
" 0 123 (face (markdown-table-face) wrap-prefix "  " fontified nil) 123 124 (font-lock-multiline t face (markdown-table-face) wrap-prefix "  " fontified nil)) . 3894) (undo-tree-id167 . -70) (undo-tree-id168 . 112) (undo-tree-id169 . -124) (undo-tree-id170 . -124) (undo-tree-id171 . -2) (undo-tree-id172 . -2) (undo-tree-id173 . -2) (undo-tree-id174 . -2) (undo-tree-id175 . -2) (undo-tree-id176 . -2) (undo-tree-id177 . -2) (undo-tree-id178 . -2) (undo-tree-id179 . -2) (undo-tree-id180 . -2) (undo-tree-id181 . -2) (undo-tree-id182 . -2) (undo-tree-id183 . -2) (undo-tree-id184 . -2) (undo-tree-id185 . -2) (undo-tree-id186 . -2) (undo-tree-id187 . -2) (undo-tree-id188 . -2) (undo-tree-id189 . -2) (undo-tree-id190 . -2) (undo-tree-id191 . -2) (undo-tree-id192 . -3) (undo-tree-id193 . -2) (undo-tree-id194 . -4) (undo-tree-id195 . -3) (undo-tree-id196 . -5) (undo-tree-id197 . -4) (undo-tree-id198 . -6) (undo-tree-id199 . -5) (undo-tree-id200 . -7) (undo-tree-id201 . -6) (undo-tree-id202 . -8) (undo-tree-id203 . -7) (undo-tree-id204 . -9) (undo-tree-id205 . -8) (undo-tree-id206 . -10) (undo-tree-id207 . -9) (undo-tree-id208 . -11) (undo-tree-id209 . -10) (undo-tree-id210 . -12) (undo-tree-id211 . -11) (undo-tree-id212 . -11) (undo-tree-id213 . -11) (undo-tree-id214 . -11) (undo-tree-id215 . -11) (undo-tree-id216 . -11) (undo-tree-id217 . -11) (undo-tree-id218 . -60) (undo-tree-id219 . -11) (undo-tree-id220 . -61) (undo-tree-id221 . -60) (undo-tree-id222 . -61) (undo-tree-id223 . -61) (undo-tree-id224 . -62) (undo-tree-id225 . -61) (undo-tree-id226 . -63) (undo-tree-id227 . -62) (undo-tree-id228 . -64) (undo-tree-id229 . -63) (undo-tree-id230 . -65) (undo-tree-id231 . -64) (undo-tree-id232 . -66) (undo-tree-id233 . -65) (undo-tree-id234 . -67) (undo-tree-id235 . -66) (undo-tree-id236 . -67) (undo-tree-id237 . -68) (undo-tree-id238 . -67) (undo-tree-id239 . -68) (undo-tree-id240 . -69) (undo-tree-id241 . -68) (undo-tree-id242 . -69) (undo-tree-id243 . -69) (undo-tree-id244 . -70) (undo-tree-id245 . -69) (undo-tree-id246 . -70) (3806 . 3894) 3876 (3872 . 3876) (3867 . 3872)) nil (26402 57926 102972 823000) 0 nil])
([nil nil ((4024 . 4030) (4020 . 4024) (#("1" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -4020) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (#("_" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -4021) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (#("s" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -4022) (undo-tree-id158 . -1) (undo-tree-id159 . 1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) 4023) nil (26402 57926 102930 413000) 0 nil])
([nil nil ((4070 . 4078) (#("2" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -4070) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (#("_" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -4071) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) 4072 (#("s" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -4072) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) 4073) nil (26402 57926 102900 696000) 0 nil])
([nil nil ((4106 . 4206) (#("|:----------------------------------------:|:----------------------------------------:|
" 0 87 (face (markdown-table-face) wrap-prefix "  " fontified nil) 87 88 (font-lock-multiline t face (markdown-table-face) wrap-prefix "  " fontified nil)) . 4006) (undo-tree-id14 . -88) (undo-tree-id15 . -88) (undo-tree-id16 . -88) (undo-tree-id17 . -88) (3906 . 4006) (#("| UnFeatured                               | Featured Right                           |
" 0 87 (face (markdown-table-face) wrap-prefix "  " fontified nil) 87 88 (font-lock-multiline t face (markdown-table-face) wrap-prefix "  " fontified nil)) . 3906) (undo-tree-id18 . -88) (undo-tree-id19 . -88) (undo-tree-id20 . -88) (undo-tree-id21 . -88) (undo-tree-id22 . -88) (undo-tree-id23 . -88) (undo-tree-id24 . -88) (undo-tree-id25 . -88) (undo-tree-id26 . -88) (undo-tree-id27 . -88) (undo-tree-id28 . -88) (undo-tree-id29 . -88) (undo-tree-id30 . -88) (undo-tree-id31 . -88) (undo-tree-id32 . -88) (undo-tree-id33 . -88) (undo-tree-id34 . -88) (undo-tree-id35 . -88) (undo-tree-id36 . -88) (undo-tree-id37 . -88) (undo-tree-id38 . -88) (undo-tree-id39 . -88) (undo-tree-id40 . -88) (undo-tree-id41 . -88) (undo-tree-id42 . -88) (undo-tree-id43 . -88) (undo-tree-id44 . -88) (undo-tree-id45 . -88) (undo-tree-id46 . -88) (undo-tree-id47 . -88) (undo-tree-id48 . -88) (undo-tree-id49 . -88) (undo-tree-id50 . -88) (undo-tree-id51 . -88) (undo-tree-id52 . -88) (undo-tree-id53 . -88) (undo-tree-id54 . -88) (undo-tree-id55 . -88) (undo-tree-id56 . -88) (undo-tree-id57 . -88) (undo-tree-id58 . -88) (undo-tree-id59 . -88) (undo-tree-id60 . -88) (undo-tree-id61 . -88) (undo-tree-id62 . -88) (undo-tree-id63 . -88) (undo-tree-id64 . -88) (undo-tree-id65 . -88) (undo-tree-id66 . -88) (undo-tree-id67 . -88) (undo-tree-id68 . -88) (undo-tree-id69 . -88) (undo-tree-id70 . -88) (undo-tree-id71 . -88) (undo-tree-id72 . -88) (undo-tree-id73 . -88) (undo-tree-id74 . -88) (undo-tree-id75 . -88) (undo-tree-id76 . -88) (undo-tree-id77 . -88) (undo-tree-id78 . -88) (undo-tree-id79 . -88) (undo-tree-id80 . -88) (undo-tree-id81 . -88) (undo-tree-id82 . -88) (undo-tree-id83 . -88) (undo-tree-id84 . -88) (undo-tree-id85 . -88) (undo-tree-id86 . -88) (undo-tree-id87 . -88) (undo-tree-id88 . -88) (undo-tree-id89 . -88) (undo-tree-id90 . -88) (undo-tree-id91 . -88) (undo-tree-id92 . -88) (undo-tree-id93 . -88) (undo-tree-id94 . -88) (undo-tree-id95 . -88) (3806 . 3906) 4079) nil (26402 57926 100286 276000) 0 nil])
([nil nil ((#("| UnFeatured                                      | Featured                                 |
" 0 94 (face (markdown-table-face) wrap-prefix "  " fontified nil) 94 95 (font-lock-multiline t face (markdown-table-face) wrap-prefix "  " fontified nil)) . 3906) (undo-tree-id473 . -61) (undo-tree-id474 . -95) (undo-tree-id475 . -95) (undo-tree-id476 . -95) (undo-tree-id477 . -95) (undo-tree-id478 . -95) (undo-tree-id479 . -95) (undo-tree-id480 . -95) (undo-tree-id481 . -95) (undo-tree-id482 . -95) (undo-tree-id483 . -95) (undo-tree-id484 . -95) (undo-tree-id485 . -95) (undo-tree-id486 . -95) (undo-tree-id487 . -95) (undo-tree-id488 . -95) (undo-tree-id489 . -95) (undo-tree-id490 . -95) (undo-tree-id491 . -95) (undo-tree-id492 . -95) (undo-tree-id493 . -95) (undo-tree-id494 . -95) (undo-tree-id495 . -95) (undo-tree-id496 . -95) (undo-tree-id497 . -95) (undo-tree-id498 . -95) (undo-tree-id499 . -95) (undo-tree-id500 . -95) (undo-tree-id501 . -95) (undo-tree-id502 . -95) (undo-tree-id503 . -95) (undo-tree-id504 . -95) (undo-tree-id505 . -95) (undo-tree-id506 . -95) (undo-tree-id507 . -95) (undo-tree-id508 . -95) (undo-tree-id509 . -95) (undo-tree-id510 . -95) (undo-tree-id511 . -95) (undo-tree-id512 . -95) (undo-tree-id513 . -95) (undo-tree-id514 . -95) (undo-tree-id515 . -95) (undo-tree-id516 . -95) (undo-tree-id517 . -95) (undo-tree-id518 . -95) (undo-tree-id519 . -95) (undo-tree-id520 . -95) (undo-tree-id521 . -95) (undo-tree-id522 . -95) (undo-tree-id523 . -95) (undo-tree-id524 . -95) (undo-tree-id525 . -95) (undo-tree-id526 . -95) (undo-tree-id527 . -95) (undo-tree-id528 . -95) (undo-tree-id529 . -95) (undo-tree-id530 . -95) (undo-tree-id531 . -95) (undo-tree-id532 . -95) (undo-tree-id533 . -95) (undo-tree-id534 . -95) (undo-tree-id535 . -95) (undo-tree-id536 . -95) (undo-tree-id537 . -95) (undo-tree-id538 . -95) (undo-tree-id539 . -95) (undo-tree-id540 . -95) (undo-tree-id541 . -95) (undo-tree-id542 . -95) (undo-tree-id543 . -95) (undo-tree-id544 . -95) (undo-tree-id545 . -95) (undo-tree-id546 . -95) (undo-tree-id547 . -95) (undo-tree-id548 . -95) (undo-tree-id549 . -95) (undo-tree-id550 . -95) (undo-tree-id551 . -95) (undo-tree-id552 . -1) (undo-tree-id553 . -93) (undo-tree-id554 . -1) (undo-tree-id555 . -61) (undo-tree-id556 . -93) (undo-tree-id557 . -52) (undo-tree-id558 . -61) (undo-tree-id559 . -50) (undo-tree-id560 . -52) (undo-tree-id561 . -2) (undo-tree-id562 . -50) (undo-tree-id563 . -50) (undo-tree-id564 . -2) (undo-tree-id565 . -52) (undo-tree-id566 . -50) (undo-tree-id567 . -61) (undo-tree-id568 . -52) (undo-tree-id569 . -93) (undo-tree-id570 . -61) (undo-tree-id571 . -95) (undo-tree-id572 . -93) (undo-tree-id573 . -93) (undo-tree-id574 . -95) (undo-tree-id575 . -61) (undo-tree-id576 . -93) (undo-tree-id577 . -61) (undo-tree-id578 . -61) (undo-tree-id579 . -61) (undo-tree-id580 . -61) (undo-tree-id581 . -61) (undo-tree-id582 . -61) (undo-tree-id583 . -61) (3806 . 3906) 3867 (#("Right" 0 5 (face (markdown-table-face) wrap-prefix "  " fontified t)) . 3867) (t 26402 57926 114836 125000)) nil (26402 57939 357454 491000) 0 nil])
([nil nil ((4363 . 4365) (4361 . 4363) (4340 . 4361) (4319 . 4340) (#("the" 0 3 (fontified t wrap-prefix "  ")) . -4319) (undo-tree-id627 . -3) (undo-tree-id628 . -1) (undo-tree-id629 . -2) (undo-tree-id630 . -1) (undo-tree-id631 . -3) (undo-tree-id632 . -2) (undo-tree-id633 . -3) (undo-tree-id634 . -3) (undo-tree-id635 . -3) (undo-tree-id636 . -3) (undo-tree-id637 . -3) (undo-tree-id638 . -3) (undo-tree-id639 . -3) (undo-tree-id640 . -3) (undo-tree-id641 . -3) (undo-tree-id642 . -3) (undo-tree-id643 . -3) (undo-tree-id644 . -3) (undo-tree-id645 . -3) (undo-tree-id646 . -3) (undo-tree-id647 . -3) (undo-tree-id648 . -3) (undo-tree-id649 . -3) (undo-tree-id650 . -3) (undo-tree-id651 . -3) (undo-tree-id652 . -3) (undo-tree-id653 . -3) (undo-tree-id654 . -3) (undo-tree-id655 . -3) (undo-tree-id656 . -3) (undo-tree-id657 . -3) 4322 (#(" " 0 1 (fontified t wrap-prefix "  ")) . -4322) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) 4323 (#("highest" 0 7 (fontified t wrap-prefix "  ")) . -4323) (undo-tree-id682 . -7) (undo-tree-id683 . -1) (undo-tree-id684 . -2) (undo-tree-id685 . -1) (undo-tree-id686 . -3) (undo-tree-id687 . -2) (undo-tree-id688 . -4) (undo-tree-id689 . -3) (undo-tree-id690 . -5) (undo-tree-id691 . -4) (undo-tree-id692 . -6) (undo-tree-id693 . -5) (undo-tree-id694 . -7) (undo-tree-id695 . -6) (undo-tree-id696 . -7) (undo-tree-id697 . -7) (undo-tree-id698 . -7) (undo-tree-id699 . -7) (undo-tree-id700 . -7) 4330 (#(" " 0 1 (fontified t wrap-prefix "  ")) . -4330) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) 4331 (4328 . 4331) (4307 . 4328) (4305 . 4307) (4284 . 4305) (4263 . 4284) (#("feasi" 0 5 (fontified t wrap-prefix "  ")) . -4263) (undo-tree-id705 . -5) (undo-tree-id706 . -1) (undo-tree-id707 . -2) (undo-tree-id708 . -1) (undo-tree-id709 . -3) (undo-tree-id710 . -2) (undo-tree-id711 . -4) (undo-tree-id712 . -3) (undo-tree-id713 . -4) (undo-tree-id714 . -4) (undo-tree-id715 . -5) (undo-tree-id716 . -4) (undo-tree-id717 . -5) 4268 (4261 . 4268) (4240 . 4261) (#(" " 0 1 (fontified t wrap-prefix "  ")) . -4240) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (#("," 0 1 (fontified t wrap-prefix "  ")) . -4241) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (#(" " 0 1 (fontified t wrap-prefix "  ")) . -4242) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) 4243 (4239 . 4243) (4224 . 4239) (#("w" 0 1 (fontified t wrap-prefix "  ")) . -4224) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (#("o" 0 1 (fontified t wrap-prefix "  ")) . -4225) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (#("o" 0 1 (fontified t wrap-prefix "  ")) . -4226) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (#(" " 0 1 (fontified t wrap-prefix "  ")) . -4227) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (#("m" 0 1 (fontified t wrap-prefix "  ")) . -4228) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (#("a" 0 1 (fontified t wrap-prefix "  ")) . -4229) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) 4230 (4228 . 4230) (4207 . 4228) (t 26402 57939 359028 69000)) nil (26402 58094 602733 579000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4365 . 4366) (#("
" 0 1 (fontified nil wrap-prefix "  ")) . -4411) (4365 . 4412)) nil (26402 58094 600068 984000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix "  " fontified t)) . 4365) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1)) nil (26402 58094 600068 42000) 0 nil])
([nil nil ((4401 . 4417) (#("1" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -4401) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (#("_" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -4402) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) 4403 (#("2_." 0 3 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -4403) (undo-tree-id608 . -3) (undo-tree-id609 . -3) (undo-tree-id610 . -3) (undo-tree-id611 . -3) (undo-tree-id612 . -3) (undo-tree-id613 . -3) (undo-tree-id614 . -3) (undo-tree-id615 . -3) (undo-tree-id616 . -3) 4406 (#("jpg" 0 3 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -4406) (undo-tree-id617 . -3) (undo-tree-id618 . -3) (undo-tree-id619 . -3) (undo-tree-id620 . -3) (undo-tree-id621 . -3) (undo-tree-id622 . -3) (undo-tree-id623 . -3) 4409) nil (26402 58094 600064 836000) 0 nil])
([nil nil ((4418 . 4419) 4417) nil (26402 58094 600032 294000) 0 nil])
([nil nil ((4319 . 4323) (t 26402 58094 635278 441000)) nil (26402 58107 263868 883000) 0 nil])
([nil nil ((4347 . 4354) (t 26402 58107 276461 647000)) nil (26402 58110 749597 296000) 0 nil])
([nil nil ((4503 . 4504) (4501 . 4503) (4480 . 4501) (4459 . 4480) (#("we'd" 0 4 (wrap-prefix "  " fontified t)) . -4459) (undo-tree-id838 . -4) (undo-tree-id839 . -1) (undo-tree-id840 . -2) (undo-tree-id841 . -1) (undo-tree-id842 . -3) (undo-tree-id843 . -2) (undo-tree-id844 . -4) (undo-tree-id845 . -3) (undo-tree-id846 . -4) (undo-tree-id847 . -4) (undo-tree-id848 . -4) (undo-tree-id849 . -4) (undo-tree-id850 . -4) (undo-tree-id851 . -4) (undo-tree-id852 . -4) (undo-tree-id853 . -4) (undo-tree-id854 . -4) 4463 (#(" " 0 1 (wrap-prefix "  " fontified t)) . -4463) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) 4464 (4453 . 4464) (#("b" 0 1 (wrap-prefix "  " fontified t)) . -4453) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) 4454 (4453 . 4454) (#("for" 0 3 (wrap-prefix "  " fontified t)) . -4453) (undo-tree-id862 . -3) (undo-tree-id863 . -1) (undo-tree-id864 . -2) (undo-tree-id865 . -1) (undo-tree-id866 . -3) (undo-tree-id867 . -2) (undo-tree-id868 . -3) (undo-tree-id869 . -3) (undo-tree-id870 . -3) (undo-tree-id871 . -3) (undo-tree-id872 . -3) (undo-tree-id873 . -3) (undo-tree-id874 . -3) (undo-tree-id875 . -3) (undo-tree-id876 . -3) (undo-tree-id877 . -3) (undo-tree-id878 . -3) (undo-tree-id879 . -3) (undo-tree-id880 . -3) (undo-tree-id881 . -3) (undo-tree-id882 . -3) (undo-tree-id883 . -3) (undo-tree-id884 . -3) (undo-tree-id885 . -3) (undo-tree-id886 . -3) (undo-tree-id887 . -3) (undo-tree-id888 . -3) (undo-tree-id889 . -3) (undo-tree-id890 . -3) (undo-tree-id891 . -3) (undo-tree-id892 . -3) (undo-tree-id893 . -3) (undo-tree-id894 . -3) (undo-tree-id895 . -3) (undo-tree-id896 . -3) (undo-tree-id897 . -3) (undo-tree-id898 . -3) (undo-tree-id899 . -3) (undo-tree-id900 . -3) (undo-tree-id901 . -3) (undo-tree-id902 . -3) (undo-tree-id903 . -3) (undo-tree-id904 . -3) 4456 (#(" " 0 1 (wrap-prefix "  " fontified t)) . -4456) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) 4457 (#("two" 0 3 (wrap-prefix "  " fontified t)) . -4457) (undo-tree-id941 . -3) (undo-tree-id942 . -1) (undo-tree-id943 . -2) (undo-tree-id944 . -1) (undo-tree-id945 . -2) (undo-tree-id946 . -2) (undo-tree-id947 . -2) (undo-tree-id948 . -2) (undo-tree-id949 . -3) (undo-tree-id950 . -2) (undo-tree-id951 . -3) (undo-tree-id952 . -3) (undo-tree-id953 . -3) (undo-tree-id954 . -3) (undo-tree-id955 . -3) (undo-tree-id956 . -3) (undo-tree-id957 . -3) (undo-tree-id958 . -3) (undo-tree-id959 . -3) (undo-tree-id960 . -3) (undo-tree-id961 . -3) (undo-tree-id962 . -3) (undo-tree-id963 . -3) (undo-tree-id964 . -3) (undo-tree-id965 . -3) (undo-tree-id966 . -3) (undo-tree-id967 . -3) (undo-tree-id968 . -3) (undo-tree-id969 . -3) (undo-tree-id970 . -3) (undo-tree-id971 . -3) 4460 (#(" " 0 1 (wrap-prefix "  " fontified t)) . -4460) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) 4461 (#("reasons" 0 7 (wrap-prefix "  " fontified t)) . -4461) (undo-tree-id992 . -7) (undo-tree-id993 . -1) (undo-tree-id994 . -2) (undo-tree-id995 . -1) (undo-tree-id996 . -3) (undo-tree-id997 . -2) (undo-tree-id998 . -4) (undo-tree-id999 . -3) (undo-tree-id1000 . -5) (undo-tree-id1001 . -4) (undo-tree-id1002 . -6) (undo-tree-id1003 . -5) (undo-tree-id1004 . -7) (undo-tree-id1005 . -6) (undo-tree-id1006 . -7) 4468 (4459 . 4468) (#("i" 0 1 (wrap-prefix "  " fontified t)) . -4459) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) 4460 (4453 . 4460) (#("sin" 0 3 (wrap-prefix "  " fontified t)) . -4453) (undo-tree-id1010 . -3) (undo-tree-id1011 . -1) (undo-tree-id1012 . -2) (undo-tree-id1013 . -1) (undo-tree-id1014 . -3) (undo-tree-id1015 . -2) (undo-tree-id1016 . -3) 4456 (4452 . 4456) (4431 . 4452) (4430 . 4431) (t 26402 58110 760512 140000) 4430) nil (26402 58239 482192 117000) 0 nil])
([nil nil ((4479 . 4486)) nil (26402 58239 478603 542000) 0 nil])
([nil nil ((4565 . 4576) (4544 . 4565) (4536 . 4544) (4515 . 4536) (#("not" 0 3 (wrap-prefix "  " fontified t)) . -4515) (undo-tree-id817 . -3) (undo-tree-id818 . -1) (undo-tree-id819 . -2) (undo-tree-id820 . -1) (undo-tree-id821 . -3) (undo-tree-id822 . -2) (undo-tree-id823 . -3) 4518 (4515 . 4518) (#("NOT" 0 3 (wrap-prefix "  " fontified t)) . -4515) (undo-tree-id824 . -3) (undo-tree-id825 . -1) (undo-tree-id826 . -2) (undo-tree-id827 . -1) (undo-tree-id828 . -3) (undo-tree-id829 . -2) (undo-tree-id830 . -3) 4518 (4511 . 4518) (#("not" 0 3 (wrap-prefix "  " fontified t)) . -4511) (undo-tree-id831 . -3) (undo-tree-id832 . -1) (undo-tree-id833 . -2) (undo-tree-id834 . -1) (undo-tree-id835 . -3) (undo-tree-id836 . -2) (undo-tree-id837 . -3) 4514 (4511 . 4514)) nil (26402 58239 478601 758000) 0 nil])
([nil nil ((4576 . 4577) 4575) nil (26402 58239 478572 924000) 0 nil])
([nil nil ((4679 . 4685) (4658 . 4679) (4655 . 4658) (4634 . 4655) (#("n" 0 1 (wrap-prefix "  " fontified t)) . -4634) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (#("o" 0 1 (wrap-prefix "  " fontified t)) . -4635) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) 4636 (4635 . 4636) (#("=" 0 1 (wrap-prefix "  " fontified nil)) . -4635) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) 4636 (4625 . 4636) (#("s" 0 1 (wrap-prefix "  " fontified t)) . -4625) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (#("u" 0 1 (wrap-prefix "  " fontified t)) . -4626) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) 4627 (4622 . 4627) (4603 . 4622) (#("Adaptive" 0 8 (wrap-prefix "  " fontified t)) . -4603) (undo-tree-id1043 . -8) (undo-tree-id1044 . -1) (undo-tree-id1045 . -2) (undo-tree-id1046 . -1) (undo-tree-id1047 . -3) (undo-tree-id1048 . -2) (undo-tree-id1049 . -4) (undo-tree-id1050 . -3) (undo-tree-id1051 . -5) (undo-tree-id1052 . -4) (undo-tree-id1053 . -6) (undo-tree-id1054 . -5) (undo-tree-id1055 . -7) (undo-tree-id1056 . -6) (undo-tree-id1057 . -8) (undo-tree-id1058 . -7) (undo-tree-id1059 . -8) 4611 (4599 . 4611) (4597 . 4599) (4576 . 4597) (t 26402 58239 495377 850000)) nil (26402 58273 789575 292000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4686 . 4687) (#("
" 0 1 (fontified nil wrap-prefix "  ")) . -4740) (4686 . 4741) (t 26402 58273 807875 132000)) nil (26402 58279 330834 929000) 0 nil])
([nil nil ((4723 . 4727) (#("highest_" 0 8 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -4723) (undo-tree-id1060 . -8) (undo-tree-id1061 . -8) (undo-tree-id1062 . -8) (undo-tree-id1063 . -8) (undo-tree-id1064 . -8) (undo-tree-id1065 . -8) (undo-tree-id1066 . -8) (undo-tree-id1067 . -8) (undo-tree-id1068 . -8) 4731 (#("response" 0 8 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -4731) (undo-tree-id1069 . -8) (undo-tree-id1070 . -8) (undo-tree-id1071 . -8) (undo-tree-id1072 . -8) (undo-tree-id1073 . -8) (undo-tree-id1074 . -8) (undo-tree-id1075 . -8) 4739) nil (26402 58279 330833 246000) 0 nil])
([nil nil ((4728 . 4729) 4726) nil (26402 58279 330801 426000) 0 nil])
([nil nil ((4716 . 4722) (#("=" 0 1 (wrap-prefix "  " fontified t)) . -4716) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) 4717 (4716 . 4717) (#("10" 0 2 (wrap-prefix "  " fontified t)) . -4716) (undo-tree-id1079 . -2) (undo-tree-id1080 . -1) (undo-tree-id1081 . -2) (undo-tree-id1082 . -1) (undo-tree-id1083 . -2) 4718 (4704 . 4718) (4684 . 4704) (#(":" 0 1 (wrap-prefix "  " fontified t)) . -4684) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) 4685 (t 26402 58279 340955 321000)) nil (26402 58319 783154 409000) 0 nil])
([nil nil ((4707 . 4712) (4704 . 4707)) nil (26402 58319 783123 210000) 0 nil])
([nil nil ((4833 . 4840) (4812 . 4833) (4796 . 4812) (4775 . 4796) (#("A" 0 1 (wrap-prefix "  " fontified t)) . -4775) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) 4776 (4775 . 4776) (4774 . 4775) (t 26402 58319 798541 663000) 4774) nil (26402 58681 605782 485000) 0 nil])
([nil nil ((4794 . 4799) (#("x" 0 1 (wrap-prefix "  " fontified t)) . -4794) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) 4795 (4791 . 4795) (#("the" 0 3 (wrap-prefix "  " fontified t)) . 4791) (undo-tree-id1399 . -1) (undo-tree-id1400 . -2) (undo-tree-id1401 . -1) (undo-tree-id1402 . -3) (undo-tree-id1403 . -2) (undo-tree-id1404 . -3)) nil (26402 58681 605767 56000) 0 nil])
([nil nil ((4873 . 4882) (4870 . 4873) (#("n" 0 1 (wrap-prefix "  " fontified t)) . -4870) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) 4871 (4866 . 4871) (4845 . 4866)) nil (26402 58681 605742 489000) 0 nil])
([nil nil ((4882 . 4887)) nil (26402 58681 605730 66000) 0 nil])
([nil nil ((4792 . 4793)) nil (26402 58681 605727 771000) 0 nil])
([nil nil ((#("and" 0 3 (wrap-prefix "  " fontified t)) . -4884) (undo-tree-id1368 . -3) (undo-tree-id1369 . -1) (undo-tree-id1370 . -2) (undo-tree-id1371 . -1) (undo-tree-id1372 . -3) (undo-tree-id1373 . -2) (undo-tree-id1374 . -3) (undo-tree-id1375 . -3) (undo-tree-id1376 . -3) (undo-tree-id1377 . -3) (undo-tree-id1378 . -3) (undo-tree-id1379 . -3) (undo-tree-id1380 . -3) (undo-tree-id1381 . -3) (undo-tree-id1382 . -3) (undo-tree-id1383 . -3) (undo-tree-id1384 . -3) 4887 (#(" " 0 1 (wrap-prefix "  " fontified t)) . -4887) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) 4888) nil (26402 58681 605722 762000) 0 nil])
([nil nil ((4863 . 4864) (#(")" 0 1 (fontified nil)) . -4862) (4862 . 4863) (#(")" 0 1 (wrap-prefix "  " fontified nil)) . -4862) (4862 . 4863) (4861 . 4863)) nil (26402 58681 605671 795000) 0 nil])
([nil nil ((4877 . 4880) (4862 . 4877)) nil (26402 58681 605667 948000) 0 nil])
([nil nil ((4947 . 4968) (#("variance " 0 9 (wrap-prefix "  " fontified t)) . -4947) (undo-tree-id1089 . -9) (undo-tree-id1090 . -1) (undo-tree-id1091 . -2) (undo-tree-id1092 . -1) (undo-tree-id1093 . -3) (undo-tree-id1094 . -2) (undo-tree-id1095 . -4) (undo-tree-id1096 . -3) (undo-tree-id1097 . -5) (undo-tree-id1098 . -4) (undo-tree-id1099 . -6) (undo-tree-id1100 . -5) (undo-tree-id1101 . -7) (undo-tree-id1102 . -6) (undo-tree-id1103 . -8) (undo-tree-id1104 . -7) (undo-tree-id1105 . -9) (undo-tree-id1106 . -8) (undo-tree-id1107 . -9) (undo-tree-id1108 . -9) (undo-tree-id1109 . -9) (undo-tree-id1110 . -9) (undo-tree-id1111 . -9) (undo-tree-id1112 . -9) (undo-tree-id1113 . -9) (undo-tree-id1114 . -9) (undo-tree-id1115 . -9) (undo-tree-id1116 . -9) (undo-tree-id1117 . -9) (undo-tree-id1118 . -9) (undo-tree-id1119 . -9) (undo-tree-id1120 . -9) (undo-tree-id1121 . -9) (undo-tree-id1122 . -9) (undo-tree-id1123 . -9) (undo-tree-id1124 . -9) (undo-tree-id1125 . -9) (undo-tree-id1126 . -9) (undo-tree-id1127 . -9) (undo-tree-id1128 . -9) (undo-tree-id1129 . -9) 4956 (#("of  " 0 4 (wrap-prefix "  " fontified t)) . -4956) (undo-tree-id1130 . -4) (undo-tree-id1131 . -1) (undo-tree-id1132 . -2) (undo-tree-id1133 . -1) (undo-tree-id1134 . -3) (undo-tree-id1135 . -2) (undo-tree-id1136 . -4) (undo-tree-id1137 . -3) (undo-tree-id1138 . -4) (undo-tree-id1139 . -4) (undo-tree-id1140 . -4) (undo-tree-id1141 . -4) (undo-tree-id1142 . -4) (undo-tree-id1143 . -4) (undo-tree-id1144 . -4) (undo-tree-id1145 . -4) (undo-tree-id1146 . -4) (undo-tree-id1147 . -4) (undo-tree-id1148 . -4) (undo-tree-id1149 . -4) 4960 (#("the " 0 4 (wrap-prefix "  " fontified t)) . -4960) (undo-tree-id1150 . -4) (undo-tree-id1151 . -1) (undo-tree-id1152 . -2) (undo-tree-id1153 . -1) (undo-tree-id1154 . -3) (undo-tree-id1155 . -2) (undo-tree-id1156 . -4) (undo-tree-id1157 . -3) (undo-tree-id1158 . -4) 4964 (4963 . 4964) (4942 . 4963) (#("f" 0 1 (wrap-prefix "  " fontified t)) . -4942) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) 4943 (4939 . 4943) (#("t" 0 1 (wrap-prefix "  " fontified t)) . -4939) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (#("d" 0 1 (wrap-prefix "  " fontified t)) . -4940) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) 4941 (4938 . 4941) (#("vari" 0 4 (wrap-prefix "  " fontified t)) . -4938) (undo-tree-id1172 . -4) (undo-tree-id1173 . -1) (undo-tree-id1174 . -2) (undo-tree-id1175 . -1) (undo-tree-id1176 . -3) (undo-tree-id1177 . -2) (undo-tree-id1178 . -4) (undo-tree-id1179 . -3) (undo-tree-id1180 . -4) 4942 (4940 . 4942) (4919 . 4940) (4904 . 4919) (#("," 0 1 (wrap-prefix "  " fontified t)) . -4904) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (#(" " 0 1 (wrap-prefix "  " fontified t)) . -4905) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) 4906 (#("then" 0 4 (wrap-prefix "  " fontified t)) . -4906) (undo-tree-id1263 . -4) (undo-tree-id1264 . -1) (undo-tree-id1265 . -2) (undo-tree-id1266 . -1) (undo-tree-id1267 . -3) (undo-tree-id1268 . -2) (undo-tree-id1269 . -4) (undo-tree-id1270 . -3) (undo-tree-id1271 . -4) (undo-tree-id1272 . -4) (undo-tree-id1273 . -4) (undo-tree-id1274 . -4) (undo-tree-id1275 . -4) (undo-tree-id1276 . -4) (undo-tree-id1277 . -4) (undo-tree-id1278 . -4) (undo-tree-id1279 . -4) (undo-tree-id1280 . -4) (undo-tree-id1281 . -4) (undo-tree-id1282 . -4) (undo-tree-id1283 . -4) (undo-tree-id1284 . -4) (undo-tree-id1285 . -4) (undo-tree-id1286 . -4) (undo-tree-id1287 . -4) (undo-tree-id1288 . -4) (undo-tree-id1289 . -4) (undo-tree-id1290 . -4) (undo-tree-id1291 . -4) (undo-tree-id1292 . -4) (undo-tree-id1293 . -4) (undo-tree-id1294 . -4) (undo-tree-id1295 . -4) (undo-tree-id1296 . -4) (undo-tree-id1297 . -4) 4910 (#(" " 0 1 (wrap-prefix "  " fontified t)) . -4910) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) 4911 (#("no" 0 2 (wrap-prefix "  " fontified t)) . -4911) (undo-tree-id1324 . -2) (undo-tree-id1325 . -1) (undo-tree-id1326 . -2) (undo-tree-id1327 . -1) (undo-tree-id1328 . -2) 4913 (4911 . 4913) (#("center" 0 6 (wrap-prefix "  " fontified t)) . -4911) (undo-tree-id1329 . -6) (undo-tree-id1330 . -1) (undo-tree-id1331 . -2) (undo-tree-id1332 . -1) (undo-tree-id1333 . -3) (undo-tree-id1334 . -2) (undo-tree-id1335 . -4) (undo-tree-id1336 . -3) (undo-tree-id1337 . -5) (undo-tree-id1338 . -4) (undo-tree-id1339 . -6) (undo-tree-id1340 . -5) (undo-tree-id1341 . -6) (undo-tree-id1342 . -6) (undo-tree-id1343 . -6) 4917 (4904 . 4917) (#(" " 0 1 (wrap-prefix "  " fontified t)) . -4904) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) 4905) nil (26402 58681 605591 513000) 0 nil])
([nil nil ((4968 . 4969)) nil (26402 58681 597365 680000) 0 nil])
([nil nil ((4969 . 4970) 4968) nil (26402 58681 597359 358000) 0 nil])
([nil nil ((5016 . 5033) (5011 . 5016) (4990 . 5011) (#("t" 0 1 (wrap-prefix "  " fontified t)) . -4990) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (#("r" 0 1 (wrap-prefix "  " fontified t)) . -4991) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (#("e" 0 1 (wrap-prefix "  " fontified t)) . -4992) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) 4993 (4978 . 4993) (4972 . 4978) (4970 . 4972) (#("Then," 0 5 (wrap-prefix "  " fontified t)) . -4970) (undo-tree-id1514 . -5) (undo-tree-id1515 . -1) (undo-tree-id1516 . -2) (undo-tree-id1517 . -1) (undo-tree-id1518 . -3) (undo-tree-id1519 . -2) (undo-tree-id1520 . -4) (undo-tree-id1521 . -3) (undo-tree-id1522 . -4) (undo-tree-id1523 . -4) (undo-tree-id1524 . -4) (undo-tree-id1525 . -4) (undo-tree-id1526 . -5) (undo-tree-id1527 . -4) (undo-tree-id1528 . -5) (undo-tree-id1529 . -5) (undo-tree-id1530 . -5) (undo-tree-id1531 . -5) (undo-tree-id1532 . -5) (undo-tree-id1533 . -5) (undo-tree-id1534 . -5) (undo-tree-id1535 . -5) (undo-tree-id1536 . -5) (undo-tree-id1537 . -5) (undo-tree-id1538 . -5) (undo-tree-id1539 . -5) (undo-tree-id1540 . -5) (undo-tree-id1541 . -5) (undo-tree-id1542 . -5) 4975 (#(" " 0 1 (wrap-prefix "  " fontified t)) . -4975) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) 4976 (#("we" 0 2 (wrap-prefix "  " fontified t)) . -4976) (undo-tree-id1557 . -2) (undo-tree-id1558 . -1) (undo-tree-id1559 . -2) (undo-tree-id1560 . -1) (undo-tree-id1561 . -2) (undo-tree-id1562 . -2) (undo-tree-id1563 . -2) (undo-tree-id1564 . -2) (undo-tree-id1565 . -2) 4978 (#(" " 0 1 (wrap-prefix "  " fontified t)) . -4978) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) 4979 (4974 . 4979) (#(" " 0 1 (wrap-prefix "  " fontified t)) . -4974) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) 4975 (4971 . 4975) (4969 . 4971) (t 26402 58681 610075 830000)) nil (26402 58798 198041 959000) 0 nil])
([nil nil ((5015 . 5016) (#(" " 0 1 (wrap-prefix "  " fontified t)) . -5015) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) 5016) nil (26402 58798 197988 828000) 0 nil])
([nil nil ((5116 . 5121) (5095 . 5116) (5094 . 5095) (5073 . 5094) (#("w" 0 1 (wrap-prefix "  " fontified t)) . -5073) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) 5074 (5054 . 5074) (5033 . 5054) (#(" " 0 1 (wrap-prefix "  " fontified t)) . -5033) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) 5034 (#("with" 0 4 (wrap-prefix "  " fontified t)) . -5034) (undo-tree-id1433 . -4) (undo-tree-id1434 . -1) (undo-tree-id1435 . -2) (undo-tree-id1436 . -1) (undo-tree-id1437 . -3) (undo-tree-id1438 . -2) (undo-tree-id1439 . -4) (undo-tree-id1440 . -3) (undo-tree-id1441 . -4) 5038 (5033 . 5038) (#("." 0 1 (wrap-prefix "  " fontified t)) . -5033) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (#(" " 0 1 (wrap-prefix "  " fontified t)) . -5034) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) 5035 (5033 . 5035)) nil (26402 58798 197972 217000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5122 . 5123) (#("
" 0 1 (fontified nil wrap-prefix "  ")) . -5164) (5122 . 5165)) nil (26402 58798 190539 786000) 0 nil])
([nil nil ((5159 . 5165) (#("anms" 0 4 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -5159) (undo-tree-id1408 . -4) (undo-tree-id1409 . -4) (undo-tree-id1410 . -4) (undo-tree-id1411 . -4) (undo-tree-id1412 . -4) (undo-tree-id1413 . -4) (undo-tree-id1414 . -4) 5163) nil (26402 58798 190538 444000) 0 nil])
([nil nil ((5166 . 5167) 5164) nil (26402 58798 190515 220000) 0 nil])
([nil nil ((5166 . 5167) (t 26402 58798 202867 885000) 5164) nil (26402 58956 436391 695000) 0 nil])
([nil nil ((5330 . 5335) (#("o" 0 1 (wrap-prefix "  " fontified t)) . -5330) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (#("i" 0 1 (wrap-prefix "  " fontified t)) . -5331) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (#("x" 0 1 (wrap-prefix "  " fontified t)) . -5332) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) 5333 (5329 . 5333) (5327 . 5330) (#("-" 0 1 (wrap-prefix "  " fontified t)) . -5327) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) 5328 (5317 . 5328) (#("i" 0 1 (wrap-prefix "  " fontified t)) . -5317) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) 5318 (5307 . 5318) (#("We" 0 2 (wrap-prefix "  " fontified t)) . -5307) (undo-tree-id1682 . -2) (undo-tree-id1683 . -1) (undo-tree-id1684 . -2) (undo-tree-id1685 . -1) (undo-tree-id1686 . -2) (undo-tree-id1687 . -2) (undo-tree-id1688 . -2) (undo-tree-id1689 . -2) (undo-tree-id1690 . -2) (undo-tree-id1691 . -2) (undo-tree-id1692 . -2) (undo-tree-id1693 . -2) (undo-tree-id1694 . -2) (undo-tree-id1695 . -2) (undo-tree-id1696 . -2) (undo-tree-id1697 . -2) (undo-tree-id1698 . -2) (undo-tree-id1699 . -2) (undo-tree-id1700 . -2) (undo-tree-id1701 . -2) (undo-tree-id1702 . -2) (undo-tree-id1703 . -2) (undo-tree-id1704 . -2) (undo-tree-id1705 . -2) (undo-tree-id1706 . -2) 5309 (#(" " 0 1 (wrap-prefix "  " fontified t)) . -5309) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) 5310 (#("count" 0 5 (wrap-prefix "  " fontified t)) . -5310) (undo-tree-id1727 . -5) (undo-tree-id1728 . -1) (undo-tree-id1729 . -2) (undo-tree-id1730 . -1) (undo-tree-id1731 . -3) (undo-tree-id1732 . -2) (undo-tree-id1733 . -4) (undo-tree-id1734 . -3) (undo-tree-id1735 . -5) (undo-tree-id1736 . -4) (undo-tree-id1737 . -5) (undo-tree-id1738 . -5) (undo-tree-id1739 . -5) (undo-tree-id1740 . -5) (undo-tree-id1741 . -5) 5315 (#(" " 0 1 (wrap-prefix "  " fontified t)) . -5315) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) 5316 (5305 . 5316) (#(":" 0 1 (wrap-prefix "  " fontified t)) . -5305) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) 5306 (5300 . 5306) (#("U" 0 1 (wrap-prefix "  " fontified t)) . -5300) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) 5301 (5299 . 5301) (#("ransac" 0 6 (wrap-prefix "  " fontified t)) . -5299) (undo-tree-id1776 . -6) (undo-tree-id1777 . -1) (undo-tree-id1778 . -2) (undo-tree-id1779 . -1) (undo-tree-id1780 . -3) (undo-tree-id1781 . -2) (undo-tree-id1782 . -4) (undo-tree-id1783 . -3) (undo-tree-id1784 . -5) (undo-tree-id1785 . -4) (undo-tree-id1786 . -6) (undo-tree-id1787 . -5) (undo-tree-id1788 . -6) 5305 (5289 . 5305) (5278 . 5289) (5257 . 5278) (5236 . 5257) (#("r" 0 1 (wrap-prefix "  " fontified t)) . -5236) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) 5237 (#(" " 0 1 (wrap-prefix "  " fontified t)) . -5237) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (#("t" 0 1 (wrap-prefix "  " fontified t)) . -5238) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (#("h" 0 1 (wrap-prefix "  " fontified t)) . -5239) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) 5240 (5226 . 5240) (5205 . 5226) (5198 . 5205) (5195 . 5198) (5174 . 5195) (5168 . 5174) (#("This" 0 4 (wrap-prefix "  " fontified t)) . -5168) (undo-tree-id1825 . -4) (undo-tree-id1826 . -1) (undo-tree-id1827 . -2) (undo-tree-id1828 . -1) (undo-tree-id1829 . -3) (undo-tree-id1830 . -2) (undo-tree-id1831 . -4) (undo-tree-id1832 . -3) (undo-tree-id1833 . -4) (undo-tree-id1834 . -4) (undo-tree-id1835 . -4) (undo-tree-id1836 . -4) (undo-tree-id1837 . -4) (undo-tree-id1838 . -4) (undo-tree-id1839 . -4) (undo-tree-id1840 . -4) (undo-tree-id1841 . -4) (undo-tree-id1842 . -4) (undo-tree-id1843 . -4) (undo-tree-id1844 . -4) (undo-tree-id1845 . -4) (undo-tree-id1846 . -4) (undo-tree-id1847 . -4) (undo-tree-id1848 . -4) (undo-tree-id1849 . -4) (undo-tree-id1850 . -4) (undo-tree-id1851 . -4) (undo-tree-id1852 . -4) (undo-tree-id1853 . -4) 5172 (#(" " 0 1 (wrap-prefix "  " fontified t)) . -5172) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) 5173 (#("had" 0 3 (wrap-prefix "  " fontified t)) . -5173) (undo-tree-id1872 . -3) (undo-tree-id1873 . -1) (undo-tree-id1874 . -2) (undo-tree-id1875 . -1) (undo-tree-id1876 . -3) (undo-tree-id1877 . -2) (undo-tree-id1878 . -3) (undo-tree-id1879 . -3) (undo-tree-id1880 . -3) (undo-tree-id1881 . -3) (undo-tree-id1882 . -3) 5176 (#(" " 0 1 (wrap-prefix "  " fontified t)) . -5176) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) 5177 (5168 . 5177) (#("Note" 0 4 (wrap-prefix "  " fontified t)) . -5168) (undo-tree-id1887 . -4) (undo-tree-id1888 . -1) (undo-tree-id1889 . -2) (undo-tree-id1890 . -1) (undo-tree-id1891 . -3) (undo-tree-id1892 . -2) (undo-tree-id1893 . -4) (undo-tree-id1894 . -3) (undo-tree-id1895 . -4) (undo-tree-id1896 . -4) (undo-tree-id1897 . -4) (undo-tree-id1898 . -4) (undo-tree-id1899 . -4) (undo-tree-id1900 . -4) (undo-tree-id1901 . -4) (undo-tree-id1902 . -4) (undo-tree-id1903 . -4) (undo-tree-id1904 . -4) (undo-tree-id1905 . -4) (undo-tree-id1906 . -4) (undo-tree-id1907 . -4) (undo-tree-id1908 . -4) (undo-tree-id1909 . -4) (undo-tree-id1910 . -4) (undo-tree-id1911 . -4) (undo-tree-id1912 . -4) (undo-tree-id1913 . -4) (undo-tree-id1914 . -4) (undo-tree-id1915 . -4) (undo-tree-id1916 . -4) (undo-tree-id1917 . -4) (undo-tree-id1918 . -4) (undo-tree-id1919 . -4) (undo-tree-id1920 . -4) (undo-tree-id1921 . -4) (undo-tree-id1922 . -4) (undo-tree-id1923 . -4) (undo-tree-id1924 . -4) (undo-tree-id1925 . -4) (undo-tree-id1926 . -4) (undo-tree-id1927 . -4) (undo-tree-id1928 . -4) (undo-tree-id1929 . -4) (undo-tree-id1930 . -4) (undo-tree-id1931 . -4) (undo-tree-id1932 . -4) (undo-tree-id1933 . -4) (undo-tree-id1934 . -4) (undo-tree-id1935 . -4) (undo-tree-id1936 . -4) (undo-tree-id1937 . -4) (undo-tree-id1938 . -4) (undo-tree-id1939 . -4) (undo-tree-id1940 . -4) (undo-tree-id1941 . -4) 5172 (#(" " 0 1 (wrap-prefix "  " fontified t)) . -5172) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) 5173 (#("that" 0 4 (wrap-prefix "  " fontified t)) . -5173) (undo-tree-id1988 . -4) (undo-tree-id1989 . -1) (undo-tree-id1990 . -2) (undo-tree-id1991 . -1) (undo-tree-id1992 . -3) (undo-tree-id1993 . -2) (undo-tree-id1994 . -4) (undo-tree-id1995 . -3) (undo-tree-id1996 . -4) (undo-tree-id1997 . -4) (undo-tree-id1998 . -4) (undo-tree-id1999 . -4) (undo-tree-id2000 . -4) (undo-tree-id2001 . -4) (undo-tree-id2002 . -4) (undo-tree-id2003 . -4) (undo-tree-id2004 . -4) (undo-tree-id2005 . -4) (undo-tree-id2006 . -4) (undo-tree-id2007 . -4) (undo-tree-id2008 . -4) (undo-tree-id2009 . -4) (undo-tree-id2010 . -4) (undo-tree-id2011 . -4) (undo-tree-id2012 . -4) (undo-tree-id2013 . -4) (undo-tree-id2014 . -4) (undo-tree-id2015 . -4) (undo-tree-id2016 . -4) (undo-tree-id2017 . -4) (undo-tree-id2018 . -4) (undo-tree-id2019 . -4) (undo-tree-id2020 . -4) (undo-tree-id2021 . -4) (undo-tree-id2022 . -4) (undo-tree-id2023 . -4) (undo-tree-id2024 . -4) (undo-tree-id2025 . -4) (undo-tree-id2026 . -4) (undo-tree-id2027 . -4) (undo-tree-id2028 . -4) 5177 (#(" " 0 1 (wrap-prefix "  " fontified t)) . -5177) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) 5178 (#("there" 0 5 (wrap-prefix "  " fontified t)) . -5178) (undo-tree-id2061 . -5) (undo-tree-id2062 . -1) (undo-tree-id2063 . -2) (undo-tree-id2064 . -1) (undo-tree-id2065 . -3) (undo-tree-id2066 . -2) (undo-tree-id2067 . -4) (undo-tree-id2068 . -3) (undo-tree-id2069 . -5) (undo-tree-id2070 . -4) (undo-tree-id2071 . -5) (undo-tree-id2072 . -5) (undo-tree-id2073 . -5) (undo-tree-id2074 . -5) (undo-tree-id2075 . -5) (undo-tree-id2076 . -5) (undo-tree-id2077 . -5) (undo-tree-id2078 . -5) (undo-tree-id2079 . -5) (undo-tree-id2080 . -5) (undo-tree-id2081 . -5) (undo-tree-id2082 . -5) (undo-tree-id2083 . -5) (undo-tree-id2084 . -5) (undo-tree-id2085 . -5) (undo-tree-id2086 . -5) (undo-tree-id2087 . -5) 5183 (#(" " 0 1 (wrap-prefix "  " fontified t)) . -5183) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) 5184 (#("are" 0 3 (wrap-prefix "  " fontified t)) . -5184) (undo-tree-id2104 . -3) (undo-tree-id2105 . -1) (undo-tree-id2106 . -2) (undo-tree-id2107 . -1) (undo-tree-id2108 . -3) (undo-tree-id2109 . -2) (undo-tree-id2110 . -3) (undo-tree-id2111 . -3) (undo-tree-id2112 . -3) (undo-tree-id2113 . -3) (undo-tree-id2114 . -3) 5187 (#(" " 0 1 (wrap-prefix "  " fontified t)) . -5187) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) 5188 (5168 . 5188) (#("
" 0 1 (wrap-prefix "  " fontified t)) . -5168) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (#("N" 0 1 (wrap-prefix "  " fontified t)) . -5169) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) 5170 (5169 . 5170) (5168 . 5169) 5168) nil (26402 58956 436376 135000) 0 nil])
([nil nil ((5399 . 5401) (5395 . 5399) (5374 . 5395) (#("find" 0 4 (wrap-prefix "  " fontified t)) . -5374) (undo-tree-id1592 . -4) (undo-tree-id1593 . -1) (undo-tree-id1594 . -2) (undo-tree-id1595 . -1) (undo-tree-id1596 . -3) (undo-tree-id1597 . -2) (undo-tree-id1598 . -4) (undo-tree-id1599 . -3) (undo-tree-id1600 . -4) (undo-tree-id1601 . -4) (undo-tree-id1602 . -4) (undo-tree-id1603 . -4) (undo-tree-id1604 . -4) (undo-tree-id1605 . -4) (undo-tree-id1606 . -4) (undo-tree-id1607 . -4) (undo-tree-id1608 . -4) (undo-tree-id1609 . -4) (undo-tree-id1610 . -4) (undo-tree-id1611 . -4) (undo-tree-id1612 . -4) (undo-tree-id1613 . -4) (undo-tree-id1614 . -4) 5378 (5359 . 5378) (5341 . 5359) (#("iterate" 0 7 (wrap-prefix "  " fontified t)) . -5341) (undo-tree-id1615 . -7) (undo-tree-id1616 . -1) (undo-tree-id1617 . -2) (undo-tree-id1618 . -1) (undo-tree-id1619 . -3) (undo-tree-id1620 . -2) (undo-tree-id1621 . -4) (undo-tree-id1622 . -3) (undo-tree-id1623 . -5) (undo-tree-id1624 . -4) (undo-tree-id1625 . -6) (undo-tree-id1626 . -5) (undo-tree-id1627 . -7) (undo-tree-id1628 . -6) (undo-tree-id1629 . -7) (undo-tree-id1630 . -7) (undo-tree-id1631 . -7) (undo-tree-id1632 . -7) (undo-tree-id1633 . -7) (undo-tree-id1634 . -7) (undo-tree-id1635 . -7) (undo-tree-id1636 . -7) (undo-tree-id1637 . -7) 5348 (#(" " 0 1 (wrap-prefix "  " fontified t)) . -5348) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) 5349 (#("f" 0 1 (wrap-prefix "  " fontified t)) . -5349) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) 5350 (5336 . 5350)) nil (26402 58956 421946 89000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5401 . 5402) (#("
" 0 1 (fontified nil wrap-prefix "  ")) . -5445) (5401 . 5446)) nil (26402 58956 421913 166000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix "  " fontified t)) . 5401) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1)) nil (26402 58956 421912 505000) 0 nil])
([nil nil ((5437 . 5443) (#("n" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -5437) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (#("n" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -5438) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) 5439) nil (26402 58956 421909 119000) 0 nil])
([nil nil ((5448 . 5449) 5442) nil (26402 58956 421883 640000) 0 nil])
([nil nil ((5493 . 5501) (#("m" 0 1 (wrap-prefix "  " fontified t)) . -5493) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (#("o" 0 1 (wrap-prefix "  " fontified t)) . -5494) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) 5495 (5491 . 5495) (5470 . 5491) (#("outliers" 0 8 (wrap-prefix "  " fontified t)) . -5470) (undo-tree-id2142 . -8) (undo-tree-id2143 . -1) (undo-tree-id2144 . -2) (undo-tree-id2145 . -1) (undo-tree-id2146 . -3) (undo-tree-id2147 . -2) (undo-tree-id2148 . -4) (undo-tree-id2149 . -3) (undo-tree-id2150 . -5) (undo-tree-id2151 . -4) (undo-tree-id2152 . -5) (undo-tree-id2153 . -6) (undo-tree-id2154 . -5) (undo-tree-id2155 . -6) (undo-tree-id2156 . -7) (undo-tree-id2157 . -6) (undo-tree-id2158 . -7) (undo-tree-id2159 . -8) (undo-tree-id2160 . -7) (undo-tree-id2161 . -8) (undo-tree-id2162 . -8) (undo-tree-id2163 . -8) (undo-tree-id2164 . -8) (undo-tree-id2165 . -8) (undo-tree-id2166 . -8) (undo-tree-id2167 . -8) (undo-tree-id2168 . -8) (undo-tree-id2169 . -8) (undo-tree-id2170 . -8) (undo-tree-id2171 . -8) (undo-tree-id2172 . -8) (undo-tree-id2173 . -8) (undo-tree-id2174 . -8) (undo-tree-id2175 . -8) (undo-tree-id2176 . -8) (undo-tree-id2177 . -8) (undo-tree-id2178 . -8) (undo-tree-id2179 . -8) 5478 (#(" " 0 1 (wrap-prefix "  " fontified t)) . -5478) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) 5479 (#("have" 0 4 (wrap-prefix "  " fontified t)) . -5479) (undo-tree-id2196 . -4) (undo-tree-id2197 . -1) (undo-tree-id2198 . -2) (undo-tree-id2199 . -1) (undo-tree-id2200 . -3) (undo-tree-id2201 . -2) (undo-tree-id2202 . -4) (undo-tree-id2203 . -3) (undo-tree-id2204 . -4) (undo-tree-id2205 . -4) (undo-tree-id2206 . -4) 5483 (5482 . 5483) (5470 . 5482) (#("u" 0 1 (wrap-prefix "  " fontified t)) . -5470) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) 5471 (5461 . 5471) (#("that " 0 5 (wrap-prefix "  " fontified t)) . -5461) (undo-tree-id2210 . -5) (undo-tree-id2211 . -1) (undo-tree-id2212 . -2) (undo-tree-id2213 . -1) (undo-tree-id2214 . -3) (undo-tree-id2215 . -2) (undo-tree-id2216 . -4) (undo-tree-id2217 . -3) (undo-tree-id2218 . -4) (undo-tree-id2219 . -4) (undo-tree-id2220 . -5) (undo-tree-id2221 . -4) (undo-tree-id2222 . -5) (undo-tree-id2223 . -5) (undo-tree-id2224 . -5) (undo-tree-id2225 . -5) (undo-tree-id2226 . -5) (undo-tree-id2227 . -5) (undo-tree-id2228 . -5) (undo-tree-id2229 . -5) (undo-tree-id2230 . -5) (undo-tree-id2231 . -5) (undo-tree-id2232 . -5) (undo-tree-id2233 . -5) (undo-tree-id2234 . -5) (undo-tree-id2235 . -5) (undo-tree-id2236 . -5) (undo-tree-id2237 . -5) (undo-tree-id2238 . -5) (undo-tree-id2239 . -5) (undo-tree-id2240 . -5) (undo-tree-id2241 . -5) (undo-tree-id2242 . -5) (undo-tree-id2243 . -5) (undo-tree-id2244 . -5) (undo-tree-id2245 . -5) (undo-tree-id2246 . -5) (undo-tree-id2247 . -5) (undo-tree-id2248 . -5) (undo-tree-id2249 . -5) (undo-tree-id2250 . -5) (undo-tree-id2251 . -5) (undo-tree-id2252 . -5) (undo-tree-id2253 . -5) (undo-tree-id2254 . -5) (undo-tree-id2255 . -5) (undo-tree-id2256 . -5) (undo-tree-id2257 . -5) (undo-tree-id2258 . -5) (undo-tree-id2259 . -5) (undo-tree-id2260 . -5) (undo-tree-id2261 . -5) (undo-tree-id2262 . -5) (undo-tree-id2263 . -5) (undo-tree-id2264 . -5) (undo-tree-id2265 . -5) (undo-tree-id2266 . -5) (undo-tree-id2267 . -5) (undo-tree-id2268 . -5) (undo-tree-id2269 . -5) (undo-tree-id2270 . -5) (undo-tree-id2271 . -5) (undo-tree-id2272 . -5) (undo-tree-id2273 . -5) (undo-tree-id2274 . -5) 5466 (#("the " 0 4 (wrap-prefix "  " fontified t)) . -5466) (undo-tree-id2275 . -4) (undo-tree-id2276 . -1) (undo-tree-id2277 . -2) (undo-tree-id2278 . -1) (undo-tree-id2279 . -3) (undo-tree-id2280 . -2) (undo-tree-id2281 . -4) (undo-tree-id2282 . -3) (undo-tree-id2283 . -4) (undo-tree-id2284 . -4) (undo-tree-id2285 . -4) (undo-tree-id2286 . -4) (undo-tree-id2287 . -4) (undo-tree-id2288 . -4) (undo-tree-id2289 . -4) (undo-tree-id2290 . -4) (undo-tree-id2291 . -4) (undo-tree-id2292 . -4) (undo-tree-id2293 . -4) (undo-tree-id2294 . -4) (undo-tree-id2295 . -4) (undo-tree-id2296 . -4) (undo-tree-id2297 . -4) (undo-tree-id2298 . -4) (undo-tree-id2299 . -4) (undo-tree-id2300 . -4) (undo-tree-id2301 . -4) (undo-tree-id2302 . -4) (undo-tree-id2303 . -4) (undo-tree-id2304 . -4) (undo-tree-id2305 . -4) (undo-tree-id2306 . -4) (undo-tree-id2307 . -4) (undo-tree-id2308 . -4) (undo-tree-id2309 . -4) (undo-tree-id2310 . -4) (undo-tree-id2311 . -4) (undo-tree-id2312 . -4) (undo-tree-id2313 . -4) (undo-tree-id2314 . -4) (undo-tree-id2315 . -4) (undo-tree-id2316 . -4) (undo-tree-id2317 . -4) (undo-tree-id2318 . -4) (undo-tree-id2319 . -4) (undo-tree-id2320 . -4) (undo-tree-id2321 . -4) (undo-tree-id2322 . -4) (undo-tree-id2323 . -4) (undo-tree-id2324 . -4) 5470 (#("matches " 0 8 (wrap-prefix "  " fontified t)) . -5470) (undo-tree-id2325 . -8) (undo-tree-id2326 . -1) (undo-tree-id2327 . -2) (undo-tree-id2328 . -1) (undo-tree-id2329 . -3) (undo-tree-id2330 . -2) (undo-tree-id2331 . -4) (undo-tree-id2332 . -3) (undo-tree-id2333 . -5) (undo-tree-id2334 . -4) (undo-tree-id2335 . -5) (undo-tree-id2336 . -6) (undo-tree-id2337 . -5) (undo-tree-id2338 . -6) (undo-tree-id2339 . -6) (undo-tree-id2340 . -7) (undo-tree-id2341 . -6) (undo-tree-id2342 . -8) (undo-tree-id2343 . -7) (undo-tree-id2344 . -8) (undo-tree-id2345 . -8) (undo-tree-id2346 . -8) (undo-tree-id2347 . -8) (undo-tree-id2348 . -8) (undo-tree-id2349 . -8) (undo-tree-id2350 . -8) (undo-tree-id2351 . -8) (undo-tree-id2352 . -8) (undo-tree-id2353 . -8) (undo-tree-id2354 . -8) (undo-tree-id2355 . -8) (undo-tree-id2356 . -8) (undo-tree-id2357 . -8) (undo-tree-id2358 . -8) (undo-tree-id2359 . -8) (undo-tree-id2360 . -8) (undo-tree-id2361 . -8) (undo-tree-id2362 . -8) (undo-tree-id2363 . -8) 5478 (#("are " 0 4 (wrap-prefix "  " fontified t)) . -5478) (undo-tree-id2364 . -4) (undo-tree-id2365 . -1) (undo-tree-id2366 . -2) (undo-tree-id2367 . -1) (undo-tree-id2368 . -2) (undo-tree-id2369 . -2) (undo-tree-id2370 . -2) (undo-tree-id2371 . -2) (undo-tree-id2372 . -2) (undo-tree-id2373 . -2) (undo-tree-id2374 . -2) (undo-tree-id2375 . -2) (undo-tree-id2376 . -3) (undo-tree-id2377 . -2) (undo-tree-id2378 . -4) (undo-tree-id2379 . -3) (undo-tree-id2380 . -4) 5482 (5480 . 5482) (#(" " 0 1 (wrap-prefix "  " fontified t)) . -5480) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (#("e" 0 1 (wrap-prefix "  " fontified t)) . -5481) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) 5482 (5471 . 5482) (5450 . 5471) (5449 . 5450) (#("o" 0 1 (wrap-prefix "  " fontified t)) . -5449) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) 5450 (5449 . 5450) (5448 . 5449) (t 26402 58956 447300 170000) 5442) nil (26402 58995 922185 292000) 0 nil])
([nil nil ((5591 . 5593) (5590 . 5591) (5569 . 5590) (5548 . 5569) (5544 . 5548) (#(" " 0 1 (wrap-prefix "  " fontified t)) . -5544) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) 5545 (5528 . 5545) (5507 . 5528) (#("t" 0 1 (wrap-prefix "  " fontified t)) . -5507) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) 5508 (5501 . 5508) (t 26402 58995 932907 79000)) nil (26402 60120 569814 355000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5593 . 5594) (#("
" 0 1 (fontified nil wrap-prefix "  ")) . -5641) (5593 . 5642) (t 26402 60120 579045 466000)) nil (26402 60126 878101 604000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix "  " fontified t)) . 5593) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1)) nil (26402 60126 878099 60000) 0 nil])
([nil nil ((5629 . 5632) (#("ransac_" 0 7 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -5629) (undo-tree-id2401 . -7) (undo-tree-id2402 . -7) (undo-tree-id2403 . -7) (undo-tree-id2404 . -7) (undo-tree-id2405 . -7) (undo-tree-id2406 . -7) (undo-tree-id2407 . -7) (undo-tree-id2408 . -7) (undo-tree-id2409 . -7) 5636 (#("cor" 0 3 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -5636) (undo-tree-id2410 . -3) (undo-tree-id2411 . -3) (undo-tree-id2412 . -3) (undo-tree-id2413 . -3) (undo-tree-id2414 . -3) (undo-tree-id2415 . -3) (undo-tree-id2416 . -3) 5639) nil (26402 60126 878088 810000) 0 nil])
([nil nil ((5719 . 5720) (5718 . 5719) (5709 . 5718) (5700 . 5709) (5679 . 5700) (5661 . 5679) (#("s" 0 1 (wrap-prefix "  " fontified t)) . -5661) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) 5662 (5643 . 5662) (#("remark" 0 6 (wrap-prefix "  " fontified t)) . -5643) (undo-tree-id2605 . -6) (undo-tree-id2606 . -1) (undo-tree-id2607 . -2) (undo-tree-id2608 . -1) (undo-tree-id2609 . -3) (undo-tree-id2610 . -2) (undo-tree-id2611 . -4) (undo-tree-id2612 . -3) (undo-tree-id2613 . -5) (undo-tree-id2614 . -4) (undo-tree-id2615 . -6) (undo-tree-id2616 . -5) (undo-tree-id2617 . -6) 5649 (5635 . 5649) (5633 . 5635) (t 26402 60126 881142 257000)) nil (26402 60274 939780 656000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5721 . 5722) (#("
" 0 1 (fontified nil wrap-prefix "  ")) . -5762) (5721 . 5763)) nil (26402 60274 939771 709000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix "  " fontified t)) . 5721) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1)) nil (26402 60274 939770 526000) 0 nil])
([nil nil ((#("us:

![dx]({{site.baseurl}}/assets/proj4/1_2)

This i" 0 4 (wrap-prefix "  " fontified t) 4 5 (wrap-prefix "  " fontified t) 5 6 (face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup fontified t wrap-prefix "  ") 6 7 (face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup fontified t wrap-prefix "  ") 7 9 (face markdown-link-face help-echo "{{site.baseurl}}/assets/proj4/1_2" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ") 9 10 (face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup fontified t wrap-prefix "  ") 10 11 (face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup fontified t wrap-prefix "  ") 11 44 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ") 44 45 (face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup fontified t wrap-prefix "  ") 45 46 (wrap-prefix "  " fontified t) 46 47 (wrap-prefix "  " fontified t) 47 53 (wrap-prefix "  " fontified t)) . 5588) (undo-tree-id2476 . -52) (undo-tree-id2477 . -52) (undo-tree-id2478 . -5) (undo-tree-id2479 . -5) (undo-tree-id2480 . -5) (undo-tree-id2481 . -41) (undo-tree-id2482 . -41) (undo-tree-id2483 . -41) (undo-tree-id2484 . -41) (undo-tree-id2485 . -41) (undo-tree-id2486 . -41) (undo-tree-id2487 . -41) (undo-tree-id2488 . -43) (undo-tree-id2489 . -43) (undo-tree-id2490 . -43) (undo-tree-id2491 . -43) (undo-tree-id2492 . -43) (undo-tree-id2493 . -43) (undo-tree-id2494 . -44) (undo-tree-id2495 . -43) (undo-tree-id2496 . -44) (undo-tree-id2497 . -44) (undo-tree-id2498 . -44) (undo-tree-id2499 . -44) (undo-tree-id2500 . -44) (undo-tree-id2501 . -44) (undo-tree-id2502 . -44) (undo-tree-id2503 . -44) (undo-tree-id2504 . -44) (undo-tree-id2505 . -44) (undo-tree-id2506 . -44) (undo-tree-id2507 . -44) (undo-tree-id2508 . -44) (undo-tree-id2509 . -44) (undo-tree-id2510 . -5) (undo-tree-id2511 . -7) (undo-tree-id2512 . -5) (undo-tree-id2513 . -9) (undo-tree-id2514 . -7) (undo-tree-id2515 . -13) (undo-tree-id2516 . -9) (undo-tree-id2517 . -17) (undo-tree-id2518 . -13) (undo-tree-id2519 . -18) (undo-tree-id2520 . -17) (undo-tree-id2521 . -25) (undo-tree-id2522 . -18) (undo-tree-id2523 . -28) (undo-tree-id2524 . -25) (undo-tree-id2525 . -34) (undo-tree-id2526 . -28) (undo-tree-id2527 . -35) (undo-tree-id2528 . -34) (undo-tree-id2529 . -40) (undo-tree-id2530 . -35) (undo-tree-id2531 . -41) (undo-tree-id2532 . -40) (undo-tree-id2533 . -44) (undo-tree-id2534 . -41) (undo-tree-id2535 . -45) (undo-tree-id2536 . -44) (undo-tree-id2537 . -45) (undo-tree-id2538 . -45) (undo-tree-id2539 . -46) (undo-tree-id2540 . -45) (undo-tree-id2541 . -46) (undo-tree-id2542 . -47) (undo-tree-id2543 . -46) (undo-tree-id2544 . -48) (undo-tree-id2545 . -47) (undo-tree-id2546 . -49) (undo-tree-id2547 . -48) (undo-tree-id2548 . -50) (undo-tree-id2549 . -49) (undo-tree-id2550 . -51) (undo-tree-id2551 . -50) (undo-tree-id2552 . -52) (undo-tree-id2553 . -51) (undo-tree-id2554 . -53) (undo-tree-id2555 . -52) (undo-tree-id2556 . -53) (undo-tree-id2557 . -47) (undo-tree-id2558 . -46) (undo-tree-id2559 . -47) (undo-tree-id2560 . -5) (undo-tree-id2561 . -46) (undo-tree-id2562 . -5) (undo-tree-id2563 . -5) (undo-tree-id2564 . -5) (undo-tree-id2565 . -5) (undo-tree-id2566 . -5) (undo-tree-id2567 . -5) (undo-tree-id2568 . -46) (undo-tree-id2569 . -5) (undo-tree-id2570 . -47) (undo-tree-id2571 . -46) (undo-tree-id2572 . -47) (undo-tree-id2573 . -47) (undo-tree-id2574 . -46) (undo-tree-id2575 . -47) (undo-tree-id2576 . -5) (undo-tree-id2577 . -46) (undo-tree-id2578 . -46) (undo-tree-id2579 . -5) (undo-tree-id2580 . -47) (undo-tree-id2581 . -46) (undo-tree-id2582 . -52) (undo-tree-id2583 . -47) (undo-tree-id2584 . -52) (undo-tree-id2585 . -52) (undo-tree-id2586 . -52) (undo-tree-id2587 . -52) (undo-tree-id2588 . -46) (undo-tree-id2589 . -52) (undo-tree-id2590 . -10) (undo-tree-id2591 . -46) (undo-tree-id2592 . -4) (undo-tree-id2593 . -10) (undo-tree-id2594 . -4) (undo-tree-id2595 . -4) (undo-tree-id2596 . -2) (undo-tree-id2597 . -4) (undo-tree-id2598 . -2)) nil (26402 60274 939764 645000) 0 nil])
([nil nil ((5588 . 5603)) nil (26402 60274 933860 280000) 0 nil])
([nil nil ((5723 . 5724) 5683) nil (26402 60274 933859 779000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6124 . 6125) (nil fontified nil 5724 . 6125) (5724 . 6125)) nil (26402 60274 933859 268000) 0 nil])
([nil nil ((#("![dx]({{site.baseurl}}/assets/proj4/1_2)
" 0 1 (face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup fontified t wrap-prefix "  ") 1 2 (face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup fontified t wrap-prefix "  ") 2 4 (face markdown-link-face help-echo "{{site.baseurl}}/assets/proj4/1_2" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ") 4 5 (face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup fontified t wrap-prefix "  ") 5 6 (face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup fontified t wrap-prefix "  ") 6 39 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ") 39 40 (face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup fontified t wrap-prefix "  ") 40 41 (wrap-prefix "  " fontified t)) . 5683) (undo-tree-id2459 . -41) (undo-tree-id2460 . -41) (undo-tree-id2461 . -39) (undo-tree-id2462 . -39) (undo-tree-id2463 . -41) (undo-tree-id2464 . -41) (undo-tree-id2465 . -41) (undo-tree-id2466 . -41) (undo-tree-id2467 . -41) (undo-tree-id2468 . -41) (undo-tree-id2469 . -41) (undo-tree-id2470 . -41) (undo-tree-id2471 . -41) (undo-tree-id2472 . -41) (undo-tree-id2473 . -41) (undo-tree-id2474 . -41) (undo-tree-id2475 . -41)) nil (26402 60274 933858 276000) 0 nil])
([nil nil ((#("| Manual                                      | Featured                                      |
" 0 95 (face (markdown-table-face) wrap-prefix "  " fontified nil) 95 96 (font-lock-multiline t face (markdown-table-face) wrap-prefix "  " fontified nil)) . 5783) (undo-tree-id2435 . -8) (undo-tree-id2436 . -96) (undo-tree-id2437 . -96) (undo-tree-id2438 . -95) (undo-tree-id2439 . -2) (undo-tree-id2440 . -2) (undo-tree-id2441 . -2) (undo-tree-id2442 . -2) (undo-tree-id2443 . -2) (undo-tree-id2444 . -2) (undo-tree-id2445 . -2) (undo-tree-id2446 . -3) (undo-tree-id2447 . -2) (undo-tree-id2448 . -4) (undo-tree-id2449 . -3) (undo-tree-id2450 . -5) (undo-tree-id2451 . -4) (undo-tree-id2452 . -6) (undo-tree-id2453 . -5) (undo-tree-id2454 . -7) (undo-tree-id2455 . -6) (undo-tree-id2456 . -8) (undo-tree-id2457 . -7) (undo-tree-id2458 . -8) (5683 . 5783) 5691 (5685 . 5691) (#("UnFeatured" 0 10 (face (markdown-table-face) wrap-prefix "  " fontified t)) . 5685)) nil (26402 60274 933842 316000) 0 nil])
([nil nil ((5735 . 5744) (#("Featured" 0 8 (face (markdown-table-face) wrap-prefix "  " fontified t)) . 5735) (undo-tree-id2434 . 8)) nil (26402 60274 933824 682000) 0 nil])
([nil nil ((#("s" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -5926) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) 5927 (5924 . 5927) (#("s" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -5924) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) 5925 (5922 . 5925) (#("unfeatured" 0 10 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . 5922)) nil (26402 60274 933822 348000) 0 nil])
([nil nil ((5926 . 5930)) nil (26402 60274 933812 419000) 0 nil])
([nil nil ((5970 . 5973) (#("featured" 0 8 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -5970) (undo-tree-id2421 . -8) (undo-tree-id2422 . -8) (undo-tree-id2423 . -8) (undo-tree-id2424 . -8) (undo-tree-id2425 . -8) (undo-tree-id2426 . -8) (undo-tree-id2427 . -8) 5978) nil (26402 60274 933807 530000) 0 nil])
([nil nil ((5978 . 5982) (#("_" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -5978) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) 5979 (5973 . 5979) (t 26402 60274 952416 354000)) nil (26402 60341 9146 205000) 0 nil])
([nil nil ((#("." 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -5978) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) 5979 (#("jpg" 0 3 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -5979) (undo-tree-id2641 . -2) (undo-tree-id2642 . -2) (undo-tree-id2643 . -2) (undo-tree-id2644 . -2) (undo-tree-id2645 . -2) (undo-tree-id2646 . -2) (undo-tree-id2647 . -2) (undo-tree-id2648 . -2) (undo-tree-id2649 . -2) (undo-tree-id2650 . -2) (undo-tree-id2651 . -3) (undo-tree-id2652 . -3) (undo-tree-id2653 . -3) (undo-tree-id2654 . -3) (undo-tree-id2655 . -3) (undo-tree-id2656 . -3) (undo-tree-id2657 . -3) 5982 (t 26402 60341 16430 973000)) nil (26402 61049 328155 982000) 0 nil])
([nil nil ((5979 . 5982) (#("p" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -5979) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) 5980 (5978 . 5980) (#("-" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -5978) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (#("j" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -5979) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (#("p" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -5980) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (#("g" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -5981) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) 5982 (5978 . 5982) (t 26402 61049 342309 566000)) nil (26402 61078 967087 382000) 0 nil])
([nil nil ((6103 . 6111) (#("mosaics" 0 7 (fontified t wrap-prefix "  ")) . -6103) (undo-tree-id2744 . -7) (undo-tree-id2745 . -1) (undo-tree-id2746 . -2) (undo-tree-id2747 . -1) (undo-tree-id2748 . -3) (undo-tree-id2749 . -2) (undo-tree-id2750 . -4) (undo-tree-id2751 . -3) (undo-tree-id2752 . -5) (undo-tree-id2753 . -4) (undo-tree-id2754 . -6) (undo-tree-id2755 . -5) (undo-tree-id2756 . -6) (undo-tree-id2757 . -6) (undo-tree-id2758 . -7) (undo-tree-id2759 . -6) (undo-tree-id2760 . -7) 6110 (6095 . 6110) (#(" " 0 1 (fontified t wrap-prefix "  ")) . -6095) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (undo-tree-id2771 . -1) (undo-tree-id2772 . -1) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (undo-tree-id2792 . -1) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) (undo-tree-id2802 . -1) (undo-tree-id2803 . -1) (undo-tree-id2804 . -1) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1) (undo-tree-id2807 . -1) (undo-tree-id2808 . -1) (undo-tree-id2809 . -1) (undo-tree-id2810 . -1) (undo-tree-id2811 . -1) (undo-tree-id2812 . -1) (undo-tree-id2813 . -1) (undo-tree-id2814 . -1) (undo-tree-id2815 . -1) (undo-tree-id2816 . -1) (undo-tree-id2817 . -1) (undo-tree-id2818 . -1) (undo-tree-id2819 . -1) (undo-tree-id2820 . -1) (undo-tree-id2821 . -1) (undo-tree-id2822 . -1) (undo-tree-id2823 . -1) (undo-tree-id2824 . -1) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (undo-tree-id2830 . -1) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) (undo-tree-id2834 . -1) (undo-tree-id2835 . -1) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (undo-tree-id2845 . -1) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) (undo-tree-id2848 . -1) (undo-tree-id2849 . -1) (undo-tree-id2850 . -1) (undo-tree-id2851 . -1) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) (undo-tree-id2854 . -1) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) 6096 (#("some" 0 4 (fontified t wrap-prefix "  ")) . -6096) (undo-tree-id2866 . -4) (undo-tree-id2867 . -1) (undo-tree-id2868 . -2) (undo-tree-id2869 . -1) (undo-tree-id2870 . -3) (undo-tree-id2871 . -2) (undo-tree-id2872 . -4) (undo-tree-id2873 . -3) (undo-tree-id2874 . -4) (undo-tree-id2875 . -4) (undo-tree-id2876 . -4) (undo-tree-id2877 . -4) (undo-tree-id2878 . -4) (undo-tree-id2879 . -4) (undo-tree-id2880 . -4) (undo-tree-id2881 . -4) (undo-tree-id2882 . -4) (undo-tree-id2883 . -4) (undo-tree-id2884 . -4) (undo-tree-id2885 . -4) (undo-tree-id2886 . -4) (undo-tree-id2887 . -4) (undo-tree-id2888 . -4) (undo-tree-id2889 . -4) (undo-tree-id2890 . -4) (undo-tree-id2891 . -4) (undo-tree-id2892 . -4) (undo-tree-id2893 . -4) (undo-tree-id2894 . -4) (undo-tree-id2895 . -4) (undo-tree-id2896 . -4) (undo-tree-id2897 . -4) (undo-tree-id2898 . -4) (undo-tree-id2899 . -4) (undo-tree-id2900 . -4) (undo-tree-id2901 . -4) (undo-tree-id2902 . -4) (undo-tree-id2903 . -4) (undo-tree-id2904 . -4) (undo-tree-id2905 . -4) (undo-tree-id2906 . -4) (undo-tree-id2907 . -4) (undo-tree-id2908 . -4) (undo-tree-id2909 . -4) (undo-tree-id2910 . -4) (undo-tree-id2911 . -4) (undo-tree-id2912 . -4) (undo-tree-id2913 . -4) (undo-tree-id2914 . -4) (undo-tree-id2915 . -4) (undo-tree-id2916 . -4) (undo-tree-id2917 . -4) (undo-tree-id2918 . -4) (undo-tree-id2919 . -4) (undo-tree-id2920 . -4) (undo-tree-id2921 . -4) (undo-tree-id2922 . -4) (undo-tree-id2923 . -4) (undo-tree-id2924 . -4) (undo-tree-id2925 . -4) (undo-tree-id2926 . -4) (undo-tree-id2927 . -4) (undo-tree-id2928 . -4) (undo-tree-id2929 . -4) (undo-tree-id2930 . -4) (undo-tree-id2931 . -4) (undo-tree-id2932 . -4) (undo-tree-id2933 . -4) (undo-tree-id2934 . -4) (undo-tree-id2935 . -4) (undo-tree-id2936 . -4) (undo-tree-id2937 . -4) (undo-tree-id2938 . -4) (undo-tree-id2939 . -4) (undo-tree-id2940 . -4) (undo-tree-id2941 . -4) (undo-tree-id2942 . -4) (undo-tree-id2943 . -4) (undo-tree-id2944 . -4) (undo-tree-id2945 . -4) (undo-tree-id2946 . -4) (undo-tree-id2947 . -4) (undo-tree-id2948 . -4) (undo-tree-id2949 . -4) (undo-tree-id2950 . -4) (undo-tree-id2951 . -4) (undo-tree-id2952 . -4) (undo-tree-id2953 . -4) (undo-tree-id2954 . -4) (undo-tree-id2955 . -4) (undo-tree-id2956 . -4) (undo-tree-id2957 . -4) (undo-tree-id2958 . -4) (undo-tree-id2959 . -4) (undo-tree-id2960 . -4) (undo-tree-id2961 . -4) (undo-tree-id2962 . -4) (undo-tree-id2963 . -4) (undo-tree-id2964 . -4) (undo-tree-id2965 . -4) 6100 (#(" " 0 1 (fontified t wrap-prefix "  ")) . -6100) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) (undo-tree-id3000 . -1) (undo-tree-id3001 . -1) (undo-tree-id3002 . -1) (undo-tree-id3003 . -1) (undo-tree-id3004 . -1) (undo-tree-id3005 . -1) (undo-tree-id3006 . -1) (undo-tree-id3007 . -1) (undo-tree-id3008 . -1) (undo-tree-id3009 . -1) (undo-tree-id3010 . -1) (undo-tree-id3011 . -1) (undo-tree-id3012 . -1) (undo-tree-id3013 . -1) (undo-tree-id3014 . -1) (undo-tree-id3015 . -1) (undo-tree-id3016 . -1) (undo-tree-id3017 . -1) (undo-tree-id3018 . -1) (undo-tree-id3019 . -1) (undo-tree-id3020 . -1) (undo-tree-id3021 . -1) (undo-tree-id3022 . -1) (undo-tree-id3023 . -1) (undo-tree-id3024 . -1) (undo-tree-id3025 . -1) (undo-tree-id3026 . -1) (undo-tree-id3027 . -1) (undo-tree-id3028 . -1) (undo-tree-id3029 . -1) (undo-tree-id3030 . -1) (undo-tree-id3031 . -1) (undo-tree-id3032 . -1) (undo-tree-id3033 . -1) (undo-tree-id3034 . -1) (undo-tree-id3035 . -1) (undo-tree-id3036 . -1) (undo-tree-id3037 . -1) (undo-tree-id3038 . -1) (undo-tree-id3039 . -1) (undo-tree-id3040 . -1) (undo-tree-id3041 . -1) (undo-tree-id3042 . -1) (undo-tree-id3043 . -1) (undo-tree-id3044 . -1) (undo-tree-id3045 . -1) (undo-tree-id3046 . -1) (undo-tree-id3047 . -1) (undo-tree-id3048 . -1) (undo-tree-id3049 . -1) (undo-tree-id3050 . -1) (undo-tree-id3051 . -1) (undo-tree-id3052 . -1) (undo-tree-id3053 . -1) (undo-tree-id3054 . -1) (undo-tree-id3055 . -1) (undo-tree-id3056 . -1) 6101 (#("more" 0 4 (fontified t wrap-prefix "  ")) . -6101) (undo-tree-id3057 . -4) (undo-tree-id3058 . -1) (undo-tree-id3059 . -2) (undo-tree-id3060 . -1) (undo-tree-id3061 . -3) (undo-tree-id3062 . -2) (undo-tree-id3063 . -4) (undo-tree-id3064 . -3) (undo-tree-id3065 . -4) (undo-tree-id3066 . -4) (undo-tree-id3067 . -4) (undo-tree-id3068 . -4) (undo-tree-id3069 . -4) (undo-tree-id3070 . -4) (undo-tree-id3071 . -4) (undo-tree-id3072 . -4) (undo-tree-id3073 . -4) (undo-tree-id3074 . -4) (undo-tree-id3075 . -4) (undo-tree-id3076 . -4) (undo-tree-id3077 . -4) (undo-tree-id3078 . -4) (undo-tree-id3079 . -4) (undo-tree-id3080 . -4) (undo-tree-id3081 . -4) (undo-tree-id3082 . -4) (undo-tree-id3083 . -4) (undo-tree-id3084 . -4) (undo-tree-id3085 . -4) (undo-tree-id3086 . -4) (undo-tree-id3087 . -4) (undo-tree-id3088 . -4) (undo-tree-id3089 . -4) (undo-tree-id3090 . -4) (undo-tree-id3091 . -4) (undo-tree-id3092 . -4) (undo-tree-id3093 . -4) (undo-tree-id3094 . -4) (undo-tree-id3095 . -4) (undo-tree-id3096 . -4) (undo-tree-id3097 . -4) (undo-tree-id3098 . -4) (undo-tree-id3099 . -4) (undo-tree-id3100 . -4) (undo-tree-id3101 . -4) (undo-tree-id3102 . -4) (undo-tree-id3103 . -4) (undo-tree-id3104 . -4) (undo-tree-id3105 . -4) (undo-tree-id3106 . -4) (undo-tree-id3107 . -4) (undo-tree-id3108 . -4) (undo-tree-id3109 . -4) (undo-tree-id3110 . -4) (undo-tree-id3111 . -4) (undo-tree-id3112 . -4) (undo-tree-id3113 . -4) (undo-tree-id3114 . -4) (undo-tree-id3115 . -4) (undo-tree-id3116 . -4) (undo-tree-id3117 . -4) (undo-tree-id3118 . -4) (undo-tree-id3119 . -4) (undo-tree-id3120 . -4) (undo-tree-id3121 . -4) (undo-tree-id3122 . -4) (undo-tree-id3123 . -4) (undo-tree-id3124 . -4) (undo-tree-id3125 . -4) (undo-tree-id3126 . -4) (undo-tree-id3127 . -4) (undo-tree-id3128 . -4) (undo-tree-id3129 . -4) (undo-tree-id3130 . -4) (undo-tree-id3131 . -4) (undo-tree-id3132 . -4) (undo-tree-id3133 . -4) (undo-tree-id3134 . -4) (undo-tree-id3135 . -4) (undo-tree-id3136 . -4) (undo-tree-id3137 . -4) (undo-tree-id3138 . -4) (undo-tree-id3139 . -4) (undo-tree-id3140 . -4) (undo-tree-id3141 . -4) (undo-tree-id3142 . -4) 6105 (#(" " 0 1 (fontified t wrap-prefix "  ")) . -6105) (undo-tree-id3143 . -1) (undo-tree-id3144 . -1) (undo-tree-id3145 . -1) (undo-tree-id3146 . -1) (undo-tree-id3147 . -1) (undo-tree-id3148 . -1) (undo-tree-id3149 . -1) (undo-tree-id3150 . -1) (undo-tree-id3151 . -1) (undo-tree-id3152 . -1) (undo-tree-id3153 . -1) (undo-tree-id3154 . -1) (undo-tree-id3155 . -1) (undo-tree-id3156 . -1) (undo-tree-id3157 . -1) (undo-tree-id3158 . -1) (undo-tree-id3159 . -1) (undo-tree-id3160 . -1) (undo-tree-id3161 . -1) (undo-tree-id3162 . -1) (undo-tree-id3163 . -1) (undo-tree-id3164 . -1) (undo-tree-id3165 . -1) (undo-tree-id3166 . -1) (undo-tree-id3167 . -1) (undo-tree-id3168 . -1) (undo-tree-id3169 . -1) (undo-tree-id3170 . -1) (undo-tree-id3171 . -1) (undo-tree-id3172 . -1) (undo-tree-id3173 . -1) (undo-tree-id3174 . -1) (undo-tree-id3175 . -1) (undo-tree-id3176 . -1) (undo-tree-id3177 . -1) (undo-tree-id3178 . -1) (undo-tree-id3179 . -1) (undo-tree-id3180 . -1) (undo-tree-id3181 . -1) (undo-tree-id3182 . -1) (undo-tree-id3183 . -1) (undo-tree-id3184 . -1) (undo-tree-id3185 . -1) (undo-tree-id3186 . -1) (undo-tree-id3187 . -1) (undo-tree-id3188 . -1) (undo-tree-id3189 . -1) (undo-tree-id3190 . -1) (undo-tree-id3191 . -1) (undo-tree-id3192 . -1) (undo-tree-id3193 . -1) (undo-tree-id3194 . -1) (undo-tree-id3195 . -1) (undo-tree-id3196 . -1) (undo-tree-id3197 . -1) (undo-tree-id3198 . -1) (undo-tree-id3199 . -1) (undo-tree-id3200 . -1) (undo-tree-id3201 . -1) (undo-tree-id3202 . -1) (undo-tree-id3203 . -1) (undo-tree-id3204 . -1) (undo-tree-id3205 . -1) (undo-tree-id3206 . -1) (undo-tree-id3207 . -1) (undo-tree-id3208 . -1) (undo-tree-id3209 . -1) (undo-tree-id3210 . -1) (undo-tree-id3211 . -1) (undo-tree-id3212 . -1) (undo-tree-id3213 . -1) (undo-tree-id3214 . -1) (undo-tree-id3215 . -1) (undo-tree-id3216 . -1) (undo-tree-id3217 . -1) (undo-tree-id3218 . -1) (undo-tree-id3219 . -1) 6106 (#("mosaic" 0 6 (fontified t wrap-prefix "  ")) . -6106) (undo-tree-id3220 . -6) (undo-tree-id3221 . -1) (undo-tree-id3222 . -2) (undo-tree-id3223 . -1) (undo-tree-id3224 . -3) (undo-tree-id3225 . -2) (undo-tree-id3226 . -4) (undo-tree-id3227 . -3) (undo-tree-id3228 . -5) (undo-tree-id3229 . -4) (undo-tree-id3230 . -5) (undo-tree-id3231 . -6) (undo-tree-id3232 . -5) (undo-tree-id3233 . -6) (undo-tree-id3234 . -6) (undo-tree-id3235 . -6) (undo-tree-id3236 . -6) (undo-tree-id3237 . -6) (undo-tree-id3238 . -6) (undo-tree-id3239 . -6) (undo-tree-id3240 . -6) (undo-tree-id3241 . -6) (undo-tree-id3242 . -6) (undo-tree-id3243 . -6) (undo-tree-id3244 . -6) (undo-tree-id3245 . -6) (undo-tree-id3246 . -6) (undo-tree-id3247 . -6) (undo-tree-id3248 . -6) (undo-tree-id3249 . -6) (undo-tree-id3250 . -6) (undo-tree-id3251 . -6) (undo-tree-id3252 . -6) (undo-tree-id3253 . -6) (undo-tree-id3254 . -6) (undo-tree-id3255 . -6) (undo-tree-id3256 . -6) (undo-tree-id3257 . -6) (undo-tree-id3258 . -6) (undo-tree-id3259 . -6) (undo-tree-id3260 . -6) (undo-tree-id3261 . -6) (undo-tree-id3262 . -6) (undo-tree-id3263 . -6) (undo-tree-id3264 . -6) (undo-tree-id3265 . -6) (undo-tree-id3266 . -6) (undo-tree-id3267 . -6) (undo-tree-id3268 . -6) (undo-tree-id3269 . -6) (undo-tree-id3270 . -6) (undo-tree-id3271 . -6) (undo-tree-id3272 . -6) (undo-tree-id3273 . -6) (undo-tree-id3274 . -6) (undo-tree-id3275 . -6) (undo-tree-id3276 . -6) (undo-tree-id3277 . -6) (undo-tree-id3278 . -6) (undo-tree-id3279 . -6) (undo-tree-id3280 . -6) (undo-tree-id3281 . -6) (undo-tree-id3282 . -6) (undo-tree-id3283 . -6) (undo-tree-id3284 . -6) (undo-tree-id3285 . -6) (undo-tree-id3286 . -6) (undo-tree-id3287 . -6) (undo-tree-id3288 . -6) (undo-tree-id3289 . -6) (undo-tree-id3290 . -6) (undo-tree-id3291 . -6) 6112 (#(" " 0 1 (fontified t wrap-prefix "  ")) . -6112) (undo-tree-id3292 . -1) (undo-tree-id3293 . -1) (undo-tree-id3294 . -1) (undo-tree-id3295 . -1) (undo-tree-id3296 . -1) (undo-tree-id3297 . -1) (undo-tree-id3298 . -1) (undo-tree-id3299 . -1) (undo-tree-id3300 . -1) (undo-tree-id3301 . -1) (undo-tree-id3302 . -1) (undo-tree-id3303 . -1) (undo-tree-id3304 . -1) (undo-tree-id3305 . -1) (undo-tree-id3306 . -1) (undo-tree-id3307 . -1) (undo-tree-id3308 . -1) (undo-tree-id3309 . -1) (undo-tree-id3310 . -1) (undo-tree-id3311 . -1) (undo-tree-id3312 . -1) (undo-tree-id3313 . -1) (undo-tree-id3314 . -1) (undo-tree-id3315 . -1) (undo-tree-id3316 . -1) (undo-tree-id3317 . -1) (undo-tree-id3318 . -1) (undo-tree-id3319 . -1) (undo-tree-id3320 . -1) (undo-tree-id3321 . -1) (undo-tree-id3322 . -1) (undo-tree-id3323 . -1) (undo-tree-id3324 . -1) (undo-tree-id3325 . -1) (undo-tree-id3326 . -1) (undo-tree-id3327 . -1) (undo-tree-id3328 . -1) (undo-tree-id3329 . -1) (undo-tree-id3330 . -1) (undo-tree-id3331 . -1) (undo-tree-id3332 . -1) (undo-tree-id3333 . -1) (undo-tree-id3334 . -1) (undo-tree-id3335 . -1) (undo-tree-id3336 . -1) (undo-tree-id3337 . -1) (undo-tree-id3338 . -1) (undo-tree-id3339 . -1) (undo-tree-id3340 . -1) (undo-tree-id3341 . -1) (undo-tree-id3342 . -1) (undo-tree-id3343 . -1) (undo-tree-id3344 . -1) (undo-tree-id3345 . -1) (undo-tree-id3346 . -1) (undo-tree-id3347 . -1) 6113 (#("frmo" 0 4 (fontified t wrap-prefix "  ")) . -6113) (undo-tree-id3348 . -4) (undo-tree-id3349 . -1) (undo-tree-id3350 . -2) (undo-tree-id3351 . -1) (undo-tree-id3352 . -3) (undo-tree-id3353 . -2) (undo-tree-id3354 . -4) (undo-tree-id3355 . -3) (undo-tree-id3356 . -4) (undo-tree-id3357 . -4) (undo-tree-id3358 . -4) (undo-tree-id3359 . -4) (undo-tree-id3360 . -4) (undo-tree-id3361 . -4) (undo-tree-id3362 . -4) (undo-tree-id3363 . -4) (undo-tree-id3364 . -4) (undo-tree-id3365 . -4) (undo-tree-id3366 . -4) (undo-tree-id3367 . -4) (undo-tree-id3368 . -4) (undo-tree-id3369 . -4) (undo-tree-id3370 . -4) (undo-tree-id3371 . -4) (undo-tree-id3372 . -4) (undo-tree-id3373 . -4) (undo-tree-id3374 . -4) (undo-tree-id3375 . -4) (undo-tree-id3376 . -4) (undo-tree-id3377 . -4) (undo-tree-id3378 . -4) (undo-tree-id3379 . -4) (undo-tree-id3380 . -4) (undo-tree-id3381 . -4) (undo-tree-id3382 . -4) (undo-tree-id3383 . -4) (undo-tree-id3384 . -4) (undo-tree-id3385 . -4) (undo-tree-id3386 . -4) (undo-tree-id3387 . -4) (undo-tree-id3388 . -4) (undo-tree-id3389 . -4) (undo-tree-id3390 . -4) (undo-tree-id3391 . -4) (undo-tree-id3392 . -4) (undo-tree-id3393 . -4) (undo-tree-id3394 . -4) (undo-tree-id3395 . -4) (undo-tree-id3396 . -4) (undo-tree-id3397 . -4) (undo-tree-id3398 . -4) 6117 (#(" " 0 1 (fontified t wrap-prefix "  ")) . -6117) (undo-tree-id3399 . -1) (undo-tree-id3400 . -1) (undo-tree-id3401 . -1) (undo-tree-id3402 . -1) (undo-tree-id3403 . -1) (undo-tree-id3404 . -1) (undo-tree-id3405 . -1) (undo-tree-id3406 . -1) (undo-tree-id3407 . -1) (undo-tree-id3408 . -1) (undo-tree-id3409 . -1) (undo-tree-id3410 . -1) (undo-tree-id3411 . -1) (undo-tree-id3412 . -1) (undo-tree-id3413 . -1) (undo-tree-id3414 . -1) (undo-tree-id3415 . -1) (undo-tree-id3416 . -1) (undo-tree-id3417 . -1) (undo-tree-id3418 . -1) (undo-tree-id3419 . -1) (undo-tree-id3420 . -1) (undo-tree-id3421 . -1) (undo-tree-id3422 . -1) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (undo-tree-id3433 . -1) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) (undo-tree-id3436 . -1) (undo-tree-id3437 . -1) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) (undo-tree-id3440 . -1) 6118 (#("the" 0 3 (fontified t wrap-prefix "  ")) . -6118) (undo-tree-id3441 . -3) (undo-tree-id3442 . -1) (undo-tree-id3443 . -2) (undo-tree-id3444 . -1) (undo-tree-id3445 . -3) (undo-tree-id3446 . -2) (undo-tree-id3447 . -3) (undo-tree-id3448 . -3) (undo-tree-id3449 . -3) (undo-tree-id3450 . -3) (undo-tree-id3451 . -3) (undo-tree-id3452 . -3) (undo-tree-id3453 . -3) (undo-tree-id3454 . -3) (undo-tree-id3455 . -3) (undo-tree-id3456 . -3) (undo-tree-id3457 . -3) (undo-tree-id3458 . -3) (undo-tree-id3459 . -3) (undo-tree-id3460 . -3) (undo-tree-id3461 . -3) (undo-tree-id3462 . -3) (undo-tree-id3463 . -3) (undo-tree-id3464 . -3) (undo-tree-id3465 . -3) (undo-tree-id3466 . -3) (undo-tree-id3467 . -3) (undo-tree-id3468 . -3) (undo-tree-id3469 . -3) (undo-tree-id3470 . -3) (undo-tree-id3471 . -3) (undo-tree-id3472 . -3) (undo-tree-id3473 . -3) (undo-tree-id3474 . -3) (undo-tree-id3475 . -3) (undo-tree-id3476 . -3) (undo-tree-id3477 . -3) 6121 (#(" " 0 1 (fontified t wrap-prefix "  ")) . -6121) (undo-tree-id3478 . -1) (undo-tree-id3479 . -1) (undo-tree-id3480 . -1) (undo-tree-id3481 . -1) (undo-tree-id3482 . -1) (undo-tree-id3483 . -1) (undo-tree-id3484 . -1) (undo-tree-id3485 . -1) (undo-tree-id3486 . -1) (undo-tree-id3487 . -1) (undo-tree-id3488 . -1) (undo-tree-id3489 . -1) (undo-tree-id3490 . -1) (undo-tree-id3491 . -1) (undo-tree-id3492 . -1) (undo-tree-id3493 . -1) (undo-tree-id3494 . -1) (undo-tree-id3495 . -1) (undo-tree-id3496 . -1) (undo-tree-id3497 . -1) (undo-tree-id3498 . -1) (undo-tree-id3499 . -1) (undo-tree-id3500 . -1) (undo-tree-id3501 . -1) (undo-tree-id3502 . -1) (undo-tree-id3503 . -1) (undo-tree-id3504 . -1) (undo-tree-id3505 . -1) (undo-tree-id3506 . -1) (undo-tree-id3507 . -1) 6122 (#("same" 0 4 (fontified t wrap-prefix "  ")) . -6122) (undo-tree-id3508 . -4) (undo-tree-id3509 . -1) (undo-tree-id3510 . -2) (undo-tree-id3511 . -1) (undo-tree-id3512 . -3) (undo-tree-id3513 . -2) (undo-tree-id3514 . -4) (undo-tree-id3515 . -3) (undo-tree-id3516 . -4) (undo-tree-id3517 . -4) (undo-tree-id3518 . -4) (undo-tree-id3519 . -4) (undo-tree-id3520 . -4) (undo-tree-id3521 . -4) (undo-tree-id3522 . -4) (undo-tree-id3523 . -4) (undo-tree-id3524 . -4) (undo-tree-id3525 . -4) (undo-tree-id3526 . -4) (undo-tree-id3527 . -4) (undo-tree-id3528 . -4) (undo-tree-id3529 . -4) (undo-tree-id3530 . -4) (undo-tree-id3531 . -4) (undo-tree-id3532 . -4) 6126 (#(" " 0 1 (fontified t wrap-prefix "  ")) . -6126) (undo-tree-id3533 . -1) (undo-tree-id3534 . -1) (undo-tree-id3535 . -1) (undo-tree-id3536 . -1) (undo-tree-id3537 . -1) (undo-tree-id3538 . -1) (undo-tree-id3539 . -1) (undo-tree-id3540 . -1) (undo-tree-id3541 . -1) (undo-tree-id3542 . -1) (undo-tree-id3543 . -1) (undo-tree-id3544 . -1) (undo-tree-id3545 . -1) (undo-tree-id3546 . -1) (undo-tree-id3547 . -1) (undo-tree-id3548 . -1) 6127 (#("scene" 0 5 (fontified t wrap-prefix "  ")) . -6127) (undo-tree-id3549 . -5) (undo-tree-id3550 . -1) (undo-tree-id3551 . -2) (undo-tree-id3552 . -1) (undo-tree-id3553 . -3) (undo-tree-id3554 . -2) (undo-tree-id3555 . -4) (undo-tree-id3556 . -3) (undo-tree-id3557 . -5) (undo-tree-id3558 . -4) (undo-tree-id3559 . -5) 6132 (6129 . 6132) (6108 . 6129) (6087 . 6108) (t 26402 61078 979764 742000)) nil (26402 61158 104402 525000) 0 nil])
([nil nil ((6112 . 6113) (6111 . 6112) 6110) nil (26402 61158 100079 826000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6113 . 6114) (#("
" 0 1 (fontified nil wrap-prefix "  ")) . -6161) (6113 . 6162)) nil (26402 61158 100078 904000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix "  " fontified t)) . 6113) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1)) nil (26402 61158 100078 303000) 0 nil])
([nil nil ((#("ransac_" 0 7 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -6149) (undo-tree-id2725 . -7) (undo-tree-id2726 . -7) (undo-tree-id2727 . -7) (undo-tree-id2728 . -7) (undo-tree-id2729 . -7) (undo-tree-id2730 . -7) (undo-tree-id2731 . -7) (undo-tree-id2732 . -7) (undo-tree-id2733 . -7) 6156 (#("cor" 0 3 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -6156) (undo-tree-id2734 . -3) (undo-tree-id2735 . -3) (undo-tree-id2736 . -3) (undo-tree-id2737 . -3) (undo-tree-id2738 . -3) (undo-tree-id2739 . -3) (undo-tree-id2740 . -3) 6159) nil (26402 61158 100075 909000) 0 nil])
([nil nil ((6149 . 6152)) nil (26402 61158 100064 417000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6153 . 6154) (#("
" 0 1 (fontified nil)) . -6194) (6153 . 6195) 6151) nil (26402 61158 100063 655000) 0 nil])
([nil nil ((6190 . 6193) (#("2" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -6190) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (#("_" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -6191) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (#("3" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -6192) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) 6193) nil (26402 61158 100061 642000) 0 nil])
([nil nil ((6194 . 6195) 6192) nil (26402 61158 100023 720000) 0 nil])
([nil nil ((6152 . 6161) (t 26402 61158 116980 158000)) nil (26402 62242 345436 215000) 0 nil])
([nil nil ((6203 . 6211) (#("z" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -6203) (undo-tree-id3560 . -1) (undo-tree-id3561 . -1) (undo-tree-id3562 . -1) (undo-tree-id3563 . -1) (undo-tree-id3564 . -1) (undo-tree-id3565 . -1) (undo-tree-id3566 . -1) (#("u" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -6204) (undo-tree-id3567 . -1) (undo-tree-id3568 . -1) (undo-tree-id3569 . -1) 6205 (6202 . 6205)) nil (26402 62242 345430 524000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6515 . 6516) (nil fontified nil 6112 . 6516) (6112 . 6516) (t 26402 62242 360697 585000)) nil (26402 62278 894163 550000) 0 nil])
([nil nil ((6111 . 6112) 6087) nil (26402 62278 894161 957000) 0 nil])
([nil nil ((6115 . 6116) (#("A" 0 1 (face (markdown-table-face) fontified t wrap-prefix "  ")) . -6115) (undo-tree-id3634 . -1) (undo-tree-id3635 . -1) (undo-tree-id3636 . -1) 6116 (6115 . 6116) (#("Manual" 0 6 (face (markdown-table-face) fontified t wrap-prefix "  ")) . 6115)) nil (26402 62278 894160 214000) 0 nil])
([nil nil ((6160 . 6161) (#("Automatic" 0 9 (face (markdown-table-face) fontified t wrap-prefix "  ")) . 6160)) nil (26402 62278 894154 233000) 0 nil])
([nil nil ((6339 . 6342) (#("1" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -6339) (undo-tree-id3607 . -1) (undo-tree-id3608 . -1) (undo-tree-id3609 . -1) (undo-tree-id3610 . -1) (undo-tree-id3611 . -1) (undo-tree-id3612 . -1) (undo-tree-id3613 . -1) (undo-tree-id3614 . -1) (undo-tree-id3615 . -1) (undo-tree-id3616 . -1) (undo-tree-id3617 . -1) (#("_" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -6340) (undo-tree-id3618 . -1) (undo-tree-id3619 . -1) (undo-tree-id3620 . -1) (undo-tree-id3621 . -1) (undo-tree-id3622 . -1) (undo-tree-id3623 . -1) (undo-tree-id3624 . -1) (undo-tree-id3625 . -1) (undo-tree-id3626 . -1) (#("2" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -6341) (undo-tree-id3627 . -1) (undo-tree-id3628 . -1) (undo-tree-id3629 . -1) (undo-tree-id3630 . -1) (undo-tree-id3631 . -1) (undo-tree-id3632 . -1) (undo-tree-id3633 . -1) 6342) nil (26402 62278 894152 69000) 0 nil])
([nil nil ((6343 . 6347) (#("u" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -6343) (undo-tree-id3604 . -1) (undo-tree-id3605 . -1) (undo-tree-id3606 . -1) 6344 (6343 . 6344)) nil (26402 62278 894132 31000) 0 nil])
([nil nil ((6392 . 6394) (#("-" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -6392) (undo-tree-id3570 . -1) (undo-tree-id3571 . -1) (undo-tree-id3572 . -1) 6393 (6391 . 6393) (#("1" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -6391) (undo-tree-id3573 . -1) (undo-tree-id3574 . -1) (undo-tree-id3575 . -1) (undo-tree-id3576 . -1) (undo-tree-id3577 . -1) (undo-tree-id3578 . -1) (undo-tree-id3579 . -1) (undo-tree-id3580 . -1) (undo-tree-id3581 . -1) (undo-tree-id3582 . -1) (undo-tree-id3583 . -1) (undo-tree-id3584 . -1) (undo-tree-id3585 . -1) (#("_" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -6392) (undo-tree-id3586 . -1) (undo-tree-id3587 . -1) (undo-tree-id3588 . -1) (undo-tree-id3589 . -1) (undo-tree-id3590 . -1) (undo-tree-id3591 . -1) (undo-tree-id3592 . -1) (undo-tree-id3593 . -1) (undo-tree-id3594 . -1) (undo-tree-id3595 . -1) (undo-tree-id3596 . -1) (#("2" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -6393) (undo-tree-id3597 . -1) (undo-tree-id3598 . -1) (undo-tree-id3599 . -1) (undo-tree-id3600 . -1) (undo-tree-id3601 . -1) (undo-tree-id3602 . -1) (undo-tree-id3603 . -1) 6394) nil (26402 62278 894121 711000) 0 nil])
([nil nil ((#("
![dx]({{site.baseurl}}/assets/proj4/2_3_auto.jpg)
![dx]({{site.baseurl}}/assets/proj4/3_4_auto.jpg)
" 0 1 (fontified t wrap-prefix "  ") 1 2 (face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup fontified t wrap-prefix "  ") 2 3 (face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup fontified t wrap-prefix "  ") 3 5 (fontified t face markdown-link-face help-echo "{{site.baseurl}}/assets/proj4/2_3_auto.jpg" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) wrap-prefix "  ") 5 6 (fontified t face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup wrap-prefix "  ") 6 7 (fontified t face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup wrap-prefix "  ") 7 49 (fontified t face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) wrap-prefix "  ") 49 50 (fontified t face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup wrap-prefix "  ") 50 51 (fontified t wrap-prefix "  ") 51 52 (face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup fontified t wrap-prefix "  ") 52 53 (face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup fontified t wrap-prefix "  ") 53 55 (fontified t face markdown-link-face help-echo "{{site.baseurl}}/assets/proj4/3_4_auto.jpg" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) wrap-prefix "  ") 55 56 (fontified t face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup wrap-prefix "  ") 56 57 (fontified t face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup wrap-prefix "  ") 57 99 (fontified t face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) wrap-prefix "  ") 99 100 (fontified t face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup wrap-prefix "  ") 100 101 (fontified t wrap-prefix "  ")) . 6508) (undo-tree-id3637 . -101) (undo-tree-id3638 . -101) (undo-tree-id3639 . -49) (undo-tree-id3640 . -99) (undo-tree-id3641 . -49) (undo-tree-id3642 . -101) (undo-tree-id3643 . -99) (undo-tree-id3644 . -101) (undo-tree-id3645 . -101) (undo-tree-id3646 . -101) (undo-tree-id3647 . -101) (undo-tree-id3648 . -51) (undo-tree-id3649 . -101) (undo-tree-id3650 . -1) (undo-tree-id3651 . -51) (undo-tree-id3652 . -1) (t 26402 62278 908266 360000)) nil (26402 62290 183440 236000) 0 nil])
([nil nil ((6136 . 6156) (#("y" 0 1 (fontified t wrap-prefix "  ")) . -6136) (undo-tree-id3696 . -1) (undo-tree-id3697 . -1) (undo-tree-id3698 . -1) 6137 (6130 . 6137) (#("o" 0 1 (fontified t wrap-prefix "  ")) . -6130) (undo-tree-id3699 . -1) (undo-tree-id3700 . -1) (undo-tree-id3701 . -1) (undo-tree-id3702 . -1) (undo-tree-id3703 . -1) (undo-tree-id3704 . -1) (undo-tree-id3705 . -1) (undo-tree-id3706 . -1) (undo-tree-id3707 . -1) (undo-tree-id3708 . -1) (undo-tree-id3709 . -1) (#("u" 0 1 (fontified t wrap-prefix "  ")) . -6131) (undo-tree-id3710 . -1) (undo-tree-id3711 . -1) (undo-tree-id3712 . -1) (undo-tree-id3713 . -1) (undo-tree-id3714 . -1) (undo-tree-id3715 . -1) (undo-tree-id3716 . -1) (#("t" 0 1 (fontified t wrap-prefix "  ")) . -6132) (undo-tree-id3717 . -1) (undo-tree-id3718 . -1) (undo-tree-id3719 . -1) 6133 (6131 . 6133) (6110 . 6131) (t 26402 62283 490337 668000)) nil (26402 62322 591430 988000) 0 nil] [nil nil ((#("|                                                 |                                               |
" 0 99 (face (markdown-table-face) fontified nil wrap-prefix "  ") 99 100 (font-lock-multiline t face (markdown-table-face) fontified t wrap-prefix "  ")) . 6537) (undo-tree-id3667 . 100) (undo-tree-id3668 . -100) (undo-tree-id3669 . -100) (undo-tree-id3670 . -100) (undo-tree-id3671 . -1) (undo-tree-id3672 . -1) (undo-tree-id3673 . -1) (undo-tree-id3674 . -1) (undo-tree-id3675 . -1) (undo-tree-id3676 . -1) (undo-tree-id3677 . -1) (undo-tree-id3678 . -100) (undo-tree-id3679 . -100) (6431 . 6537) (#("|:-----------------------------------------------:|:---------------------------------------------:|
" 0 99 (face (markdown-table-face) fontified nil wrap-prefix "  ") 99 100 (font-lock-multiline t face (markdown-table-face) fontified nil wrap-prefix "  ")) . 6325) (undo-tree-id3680 . -1) (undo-tree-id3681 . -1) (6219 . 6325) (#("| 1                                          | 2                                      |
" 0 87 (face (markdown-table-face) fontified nil wrap-prefix "  ") 87 88 (font-lock-multiline t face (markdown-table-face) fontified nil wrap-prefix "  ")) . 6219) (undo-tree-id3682 . -3) (undo-tree-id3683 . -1) (undo-tree-id3684 . -2) (undo-tree-id3685 . -1) (undo-tree-id3686 . -3) (undo-tree-id3687 . -2) (undo-tree-id3688 . -3) (undo-tree-id3689 . -3) (undo-tree-id3690 . -3) (6113 . 6219) 6116 (t 26402 62283 490337 668000)) ((#("| 1                                                 | 2                                                 |
" 0 105 (face (markdown-table-face) wrap-prefix "  " fontified nil) 105 106 (font-lock-multiline t face (markdown-table-face) wrap-prefix "  " fontified nil)) . 6113) (undo-tree-id3691 . 52) (undo-tree-id3692 . -54) (undo-tree-id3693 . -54) (undo-tree-id3694 . -54) (undo-tree-id3695 . -54) (6219 . 6307) (#("|:-------------------------------------------------:|:-------------------------------------------------:|
" 0 105 (face (markdown-table-face) wrap-prefix "  " fontified nil) 105 106 (font-lock-multiline t face (markdown-table-face) wrap-prefix "  " fontified nil)) . 6219) (6325 . 6425) (#("|                                                   |                                                   |
" 0 105 (wrap-prefix "  " face (markdown-table-face) fontified nil) 105 106 (wrap-prefix "  " font-lock-multiline t face (markdown-table-face) fontified nil)) . 6431) (6537 . 6637)) (26402 62290 181958 168000) 0 nil] [nil nil ((#("|                                                 |                                               |
" 0 99 (face (markdown-table-face) fontified nil wrap-prefix "  ") 99 100 (font-lock-multiline t face (markdown-table-face) fontified t wrap-prefix "  ")) . 6537) (undo-tree-id3653 . -100) (undo-tree-id3654 . -1) (undo-tree-id3655 . -100) (undo-tree-id3656 . -100) (undo-tree-id3657 . -1) (undo-tree-id3658 . -1) (undo-tree-id3659 . -1) (undo-tree-id3660 . -1) (undo-tree-id3661 . -100) (6431 . 6537) (#("|:-----------------------------------------------:|:---------------------------------------------:|
" 0 99 (face (markdown-table-face) fontified nil wrap-prefix "  ") 99 100 (font-lock-multiline t face (markdown-table-face) fontified nil wrap-prefix "  ")) . 6325) (6219 . 6325) (#("| 1                                          | 2                                      |
" 0 87 (face (markdown-table-face) fontified nil wrap-prefix "  ") 87 88 (font-lock-multiline t face (markdown-table-face) fontified nil wrap-prefix "  ")) . 6219) (6113 . 6219) 6408 (t 26402 62283 490337 668000)) ((#("| 1                                                 | 2                                                 |
" 0 105 (face (markdown-table-face) wrap-prefix "  " fontified nil) 105 106 (font-lock-multiline t face (markdown-table-face) wrap-prefix "  " fontified nil)) . 6113) (6219 . 6307) (#("|:-------------------------------------------------:|:-------------------------------------------------:|
" 0 105 (face (markdown-table-face) wrap-prefix "  " fontified nil) 105 106 (font-lock-multiline t face (markdown-table-face) wrap-prefix "  " fontified nil)) . 6219) (6325 . 6425) (#("|                                                   |                                                   |
" 0 105 (wrap-prefix "  " face (markdown-table-face) fontified nil) 105 106 (wrap-prefix "  " font-lock-multiline t face (markdown-table-face) fontified nil)) . 6431) (undo-tree-id3662 . 52) (undo-tree-id3663 . -53) (undo-tree-id3664 . -53) (undo-tree-id3665 . -53) (undo-tree-id3666 . -53) (6537 . 6637)) (26402 62286 795464 35000) 0 nil])
([nil nil ((6572 . 6574) (6555 . 6572) (#("#" 0 1 (fontified t wrap-prefix "  ")) . -6555) (undo-tree-id3720 . -1) (undo-tree-id3721 . -1) (undo-tree-id3722 . -1) 6556 (6554 . 6556) (t 26402 62322 603946 373000)) nil (26402 62538 989994 262000) 0 nil])
nil
nil
([nil nil ((6845 . 6857) (#("m" 0 1 (fontified t wrap-prefix "  ")) . -6845) (undo-tree-id3723 . -1) (undo-tree-id3724 . -1) (undo-tree-id3725 . -1) 6846 (6825 . 6846) (6805 . 6825) (#("w" 0 1 (fontified t wrap-prefix "  ")) . -6805) (undo-tree-id3726 . -1) (undo-tree-id3727 . -1) (undo-tree-id3728 . -1) 6806 (6785 . 6806) (6766 . 6785) (6745 . 6766) (6732 . 6745) (#(" " 0 1 (fontified t wrap-prefix "  ")) . -6732) (undo-tree-id3729 . -1) (undo-tree-id3730 . -1) (undo-tree-id3731 . -1) (undo-tree-id3732 . -1) 6733 (6731 . 6733) (6725 . 6731) (6704 . 6725) (#("mnua" 0 4 (fontified t wrap-prefix "  ")) . -6704) (undo-tree-id3733 . -4) (undo-tree-id3734 . -1) (undo-tree-id3735 . -2) (undo-tree-id3736 . -1) (undo-tree-id3737 . -3) (undo-tree-id3738 . -2) (undo-tree-id3739 . -4) (undo-tree-id3740 . -3) (undo-tree-id3741 . -4) 6708 (6703 . 6708) (6682 . 6703) (6677 . 6682) (6656 . 6677) (#("found" 0 5 (fontified t wrap-prefix "  ")) . -6656) (undo-tree-id3742 . -5) (undo-tree-id3743 . -1) (undo-tree-id3744 . -2) (undo-tree-id3745 . -1) (undo-tree-id3746 . -3) (undo-tree-id3747 . -2) (undo-tree-id3748 . -4) (undo-tree-id3749 . -3) (undo-tree-id3750 . -5) (undo-tree-id3751 . -4) (undo-tree-id3752 . -5) (undo-tree-id3753 . -5) (undo-tree-id3754 . -5) 6661 (6650 . 6661) (6638 . 6650) (#("RANSAC," 0 7 (fontified t wrap-prefix "  ")) . -6638) (undo-tree-id3755 . -7) (undo-tree-id3756 . -1) (undo-tree-id3757 . -2) (undo-tree-id3758 . -1) (undo-tree-id3759 . -3) (undo-tree-id3760 . -2) (undo-tree-id3761 . -4) (undo-tree-id3762 . -3) (undo-tree-id3763 . -4) (undo-tree-id3764 . -5) (undo-tree-id3765 . -4) (undo-tree-id3766 . -5) (undo-tree-id3767 . -6) (undo-tree-id3768 . -5) (undo-tree-id3769 . -6) (undo-tree-id3770 . -6) (undo-tree-id3771 . -7) (undo-tree-id3772 . -6) (undo-tree-id3773 . -7) (undo-tree-id3774 . -7) (undo-tree-id3775 . -7) (undo-tree-id3776 . -7) (undo-tree-id3777 . -7) 6645 (#(" " 0 1 (fontified t wrap-prefix "  ")) . -6645) (undo-tree-id3778 . -1) (undo-tree-id3779 . -1) (undo-tree-id3780 . -1) (undo-tree-id3781 . -1) 6646 (6632 . 6646) (#("It" 0 2 (fontified t wrap-prefix "  ")) . -6632) (undo-tree-id3782 . -2) (undo-tree-id3783 . -1) (undo-tree-id3784 . -2) (undo-tree-id3785 . -1) (undo-tree-id3786 . -2) 6634 (6632 . 6634) (6628 . 6632) (6607 . 6628) (6595 . 6607) (6574 . 6595) (t 26402 62539 6314 131000)) nil (26402 62640 614871 796000) 0 nil])
([nil current ((6857 . 6858) 6856) nil (26402 62640 614812 33000) 0 nil])
nil
