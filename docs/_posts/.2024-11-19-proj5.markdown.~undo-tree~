(undo-tree-save-format-version . 1)
"7b57101988b4c9759a4de300a2fe95a3a38f4ff0"
[nil nil nil nil (26429 20846 660443 716000) 0 nil]
([nil nil ((nil rear-nonsticky nil 190 . 191) (nil fontified nil 1 . 191) (1 . 191) (t . -1)) nil (26429 20846 660436 703000) 0 nil])
([nil nil ((35 . 36) (#("4" 0 1 (wrap-prefix "  " face markdown-metadata-value-face markdown-metadata-value (18 45 18 23 23 26 26 45 #<buffer 2024-11-19-proj5.markdown>) markdown-yaml-metadata-section (5 106) fontified t)) . -35) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) 36 (t 26429 20846 685720 113000)) nil (26429 20908 610840 987000) 0 nil])
([nil nil ((38 . 56) (#("Mosaic" 0 6 (face markdown-metadata-value-face markdown-metadata-value (18 45 18 23 23 26 26 45 #<buffer 2024-11-19-proj5.markdown>) markdown-yaml-metadata-section (5 106) wrap-prefix "  " fontified t)) . 38) (undo-tree-id0 . -6) (undo-tree-id1 . -6)) nil (26429 20908 610828 473000) 0 nil])
([nil nil ((211 . 212) (#("1:" 0 1 (face markdown-header-face-2 markdown-heading-2-atx (203 213 nil nil nil nil nil nil 203 206 206 213 213 213 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (203 213 nil nil nil nil nil nil 203 206 206 213 213 213 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ") 1 2 (font-lock-multiline t face markdown-header-face-2 markdown-heading-2-atx (203 213 nil nil nil nil nil nil 203 206 206 213 213 213 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (203 213 nil nil nil nil nil nil 203 206 206 213 213 213 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ")) . -211) (undo-tree-id9 . -2) (undo-tree-id10 . -1) (undo-tree-id11 . -2) (undo-tree-id12 . -1) (undo-tree-id13 . -2) (undo-tree-id14 . -2) (undo-tree-id15 . -2) (undo-tree-id16 . -2) (undo-tree-id17 . -2) (undo-tree-id18 . -2) (undo-tree-id19 . -2) (undo-tree-id20 . -2) (undo-tree-id21 . -2) (undo-tree-id22 . -2) (undo-tree-id23 . -2) (undo-tree-id24 . -2) (undo-tree-id25 . -2) (undo-tree-id26 . -2) (undo-tree-id27 . -2) (undo-tree-id28 . -2) (undo-tree-id29 . -2) (undo-tree-id30 . -2) (undo-tree-id31 . -2) (undo-tree-id32 . -2) (undo-tree-id33 . -2) (undo-tree-id34 . -2) (undo-tree-id35 . -2) 213 (#(" " 0 1 (font-lock-multiline t face markdown-header-delimiter-face markdown-heading-2-atx (203 214 nil nil nil nil nil nil 203 206 206 213 213 214 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (203 214 nil nil nil nil nil nil 203 206 206 213 213 214 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ")) . -213) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) 214 (#("Sampling" 0 1 (face markdown-header-face-2 markdown-heading-2-atx (203 222 nil nil nil nil nil nil 203 206 206 222 222 222 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (203 222 nil nil nil nil nil nil 203 206 206 222 222 222 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ") 1 2 (face markdown-header-face-2 markdown-heading-2-atx (203 222 nil nil nil nil nil nil 203 206 206 222 222 222 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (203 222 nil nil nil nil nil nil 203 206 206 222 222 222 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ") 2 3 (face markdown-header-face-2 markdown-heading-2-atx (203 222 nil nil nil nil nil nil 203 206 206 222 222 222 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (203 222 nil nil nil nil nil nil 203 206 206 222 222 222 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ") 3 4 (face markdown-header-face-2 markdown-heading-2-atx (203 222 nil nil nil nil nil nil 203 206 206 222 222 222 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (203 222 nil nil nil nil nil nil 203 206 206 222 222 222 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ") 4 5 (face markdown-header-face-2 markdown-heading-2-atx (203 222 nil nil nil nil nil nil 203 206 206 222 222 222 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (203 222 nil nil nil nil nil nil 203 206 206 222 222 222 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ") 5 6 (face markdown-header-face-2 markdown-heading-2-atx (203 222 nil nil nil nil nil nil 203 206 206 222 222 222 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (203 222 nil nil nil nil nil nil 203 206 206 222 222 222 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ") 6 7 (face markdown-header-face-2 markdown-heading-2-atx (203 222 nil nil nil nil nil nil 203 206 206 222 222 222 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (203 222 nil nil nil nil nil nil 203 206 206 222 222 222 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ") 7 8 (font-lock-multiline t face markdown-header-face-2 markdown-heading-2-atx (203 222 nil nil nil nil nil nil 203 206 206 222 222 222 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (203 222 nil nil nil nil nil nil 203 206 206 222 222 222 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ")) . -214) (undo-tree-id58 . -8) (undo-tree-id59 . -1) (undo-tree-id60 . -2) (undo-tree-id61 . -1) (undo-tree-id62 . -3) (undo-tree-id63 . -2) (undo-tree-id64 . -4) (undo-tree-id65 . -3) (undo-tree-id66 . -5) (undo-tree-id67 . -4) (undo-tree-id68 . -6) (undo-tree-id69 . -5) (undo-tree-id70 . -7) (undo-tree-id71 . -6) (undo-tree-id72 . -8) (undo-tree-id73 . -7) (undo-tree-id74 . -8) 222 (204 . 222) (#(" " 0 1 (font-lock-multiline t face markdown-header-delimiter-face markdown-heading-1-atx (203 205 nil nil nil nil nil nil 203 205 205 205 205 205 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (203 205 nil nil nil nil nil nil 203 205 205 205 205 205 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ")) . -204) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) 205 (203 . 205) (t 26429 20908 628658 245000)) nil (26429 21055 995641 646000) 0 nil])
([nil nil ((205 . 206)) nil (26429 21055 995590 899000) 0 nil])
([nil nil ((213 . 215)) nil (26429 21055 995590 649000) 0 nil])
([nil nil ((230 . 233) (215 . 230)) nil (26429 21055 995590 338000) 0 nil])
([nil nil ((233 . 234)) nil (26429 21055 995589 787000) 0 nil])
([nil nil ((234 . 235) 233) nil (26429 21055 995583 285000) 0 nil])
([nil nil ((289 . 302) (268 . 289) (#(" " 0 1 (font-lock-multiline t face markdown-header-delimiter-face markdown-heading-1-atx (263 269 nil nil nil nil nil nil 263 265 265 268 268 269 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (263 269 nil nil nil nil nil nil 263 265 265 268 268 269 #<buffer 2024-11-19-proj5.markdown>) wrap-prefix "  " fontified t)) . -268) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) 269 (265 . 269) (#("P" 0 1 (font-lock-multiline t face markdown-header-face-1 markdown-heading-1-atx (263 266 nil nil nil nil nil nil 263 265 265 266 266 266 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (263 266 nil nil nil nil nil nil 263 265 265 266 266 266 #<buffer 2024-11-19-proj5.markdown>) wrap-prefix "  " fontified t)) . -265) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) 266 (263 . 266) (262 . 263) (261 . 262) (247 . 261) (#("Sapli" 0 1 (face markdown-header-face-2 markdown-heading-2-atx (236 252 nil nil nil nil nil nil 236 239 239 252 252 252 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (236 252 nil nil nil nil nil nil 236 239 239 252 252 252 #<buffer 2024-11-19-proj5.markdown>) wrap-prefix "  " fontified t) 1 2 (face markdown-header-face-2 markdown-heading-2-atx (236 252 nil nil nil nil nil nil 236 239 239 252 252 252 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (236 252 nil nil nil nil nil nil 236 239 239 252 252 252 #<buffer 2024-11-19-proj5.markdown>) wrap-prefix "  " fontified t) 2 3 (face markdown-header-face-2 markdown-heading-2-atx (236 252 nil nil nil nil nil nil 236 239 239 252 252 252 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (236 252 nil nil nil nil nil nil 236 239 239 252 252 252 #<buffer 2024-11-19-proj5.markdown>) wrap-prefix "  " fontified t) 3 4 (face markdown-header-face-2 markdown-heading-2-atx (236 252 nil nil nil nil nil nil 236 239 239 252 252 252 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (236 252 nil nil nil nil nil nil 236 239 239 252 252 252 #<buffer 2024-11-19-proj5.markdown>) wrap-prefix "  " fontified t) 4 5 (font-lock-multiline t face markdown-header-face-2 markdown-heading-2-atx (236 252 nil nil nil nil nil nil 236 239 239 252 252 252 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (236 252 nil nil nil nil nil nil 236 239 239 252 252 252 #<buffer 2024-11-19-proj5.markdown>) wrap-prefix "  " fontified t)) . -247) (undo-tree-id84 . -5) (undo-tree-id85 . -1) (undo-tree-id86 . -2) (undo-tree-id87 . -1) (undo-tree-id88 . -3) (undo-tree-id89 . -2) (undo-tree-id90 . -4) (undo-tree-id91 . -3) (undo-tree-id92 . -5) (undo-tree-id93 . -4) (undo-tree-id94 . -5) 252 (236 . 252) (235 . 236) (t 26429 21056 14890 421000) 235) nil (26429 21094 212223 577000) 0 nil])
([nil nil ((302 . 303) 301) nil (26429 21094 210036 3000) 0 nil])
([nil nil ((349 . 368) (328 . 349) (325 . 328) (304 . 325) (#("The " 0 4 (wrap-prefix "  " fontified t)) . -304) (undo-tree-id1616 . -4) (undo-tree-id1617 . -1) (undo-tree-id1618 . -2) (undo-tree-id1619 . -1) (undo-tree-id1620 . -3) (undo-tree-id1621 . -2) (undo-tree-id1622 . -4) (undo-tree-id1623 . -3) (undo-tree-id1624 . -4) (undo-tree-id1625 . -4) (undo-tree-id1626 . -4) (undo-tree-id1627 . -4) (undo-tree-id1628 . -4) (undo-tree-id1629 . -4) (undo-tree-id1630 . -4) (undo-tree-id1631 . -4) (undo-tree-id1632 . -4) (undo-tree-id1633 . -4) (undo-tree-id1634 . -4) (undo-tree-id1635 . -4) (undo-tree-id1636 . -4) (undo-tree-id1637 . -4) (undo-tree-id1638 . -4) (undo-tree-id1639 . -4) (undo-tree-id1640 . -4) (undo-tree-id1641 . -4) (undo-tree-id1642 . -4) (undo-tree-id1643 . -4) (undo-tree-id1644 . -4) (undo-tree-id1645 . -4) (undo-tree-id1646 . -4) (undo-tree-id1647 . -4) (undo-tree-id1648 . -4) (undo-tree-id1649 . -4) (undo-tree-id1650 . -4) (undo-tree-id1651 . -4) (undo-tree-id1652 . -4) (undo-tree-id1653 . -4) (undo-tree-id1654 . -4) (undo-tree-id1655 . -4) (undo-tree-id1656 . -4) (undo-tree-id1657 . -4) (undo-tree-id1658 . -4) (undo-tree-id1659 . -4) (undo-tree-id1660 . -4) (undo-tree-id1661 . -4) (undo-tree-id1662 . -4) (undo-tree-id1663 . -4) (undo-tree-id1664 . -4) (undo-tree-id1665 . -4) (undo-tree-id1666 . -4) (undo-tree-id1667 . -4) (undo-tree-id1668 . -4) (undo-tree-id1669 . -4) (undo-tree-id1670 . -4) (undo-tree-id1671 . -4) (undo-tree-id1672 . -4) (undo-tree-id1673 . -4) (undo-tree-id1674 . -4) (undo-tree-id1675 . -4) (undo-tree-id1676 . -4) (undo-tree-id1677 . -4) (undo-tree-id1678 . -4) (undo-tree-id1679 . -4) (undo-tree-id1680 . -4) (undo-tree-id1681 . -4) (undo-tree-id1682 . -4) (undo-tree-id1683 . -4) (undo-tree-id1684 . -4) (undo-tree-id1685 . -4) (undo-tree-id1686 . -4) (undo-tree-id1687 . -4) (undo-tree-id1688 . -4) (undo-tree-id1689 . -4) (undo-tree-id1690 . -4) (undo-tree-id1691 . -4) (undo-tree-id1692 . -4) (undo-tree-id1693 . -4) (undo-tree-id1694 . -4) (undo-tree-id1695 . -4) (undo-tree-id1696 . -4) 308 (#("forward " 0 8 (wrap-prefix "  " fontified t)) . -308) (undo-tree-id1697 . -8) (undo-tree-id1698 . -1) (undo-tree-id1699 . -2) (undo-tree-id1700 . -1) (undo-tree-id1701 . -3) (undo-tree-id1702 . -2) (undo-tree-id1703 . -4) (undo-tree-id1704 . -3) (undo-tree-id1705 . -5) (undo-tree-id1706 . -4) (undo-tree-id1707 . -6) (undo-tree-id1708 . -5) (undo-tree-id1709 . -7) (undo-tree-id1710 . -6) (undo-tree-id1711 . -7) (undo-tree-id1712 . -7) (undo-tree-id1713 . -8) (undo-tree-id1714 . -7) (undo-tree-id1715 . -8) (undo-tree-id1716 . -8) (undo-tree-id1717 . -8) (undo-tree-id1718 . -8) (undo-tree-id1719 . -8) (undo-tree-id1720 . -8) (undo-tree-id1721 . -8) (undo-tree-id1722 . -8) (undo-tree-id1723 . -8) (undo-tree-id1724 . -8) (undo-tree-id1725 . -8) (undo-tree-id1726 . -8) (undo-tree-id1727 . -8) (undo-tree-id1728 . -8) (undo-tree-id1729 . -8) (undo-tree-id1730 . -8) (undo-tree-id1731 . -8) (undo-tree-id1732 . -8) (undo-tree-id1733 . -8) (undo-tree-id1734 . -8) (undo-tree-id1735 . -8) (undo-tree-id1736 . -8) (undo-tree-id1737 . -8) (undo-tree-id1738 . -8) (undo-tree-id1739 . -8) (undo-tree-id1740 . -8) (undo-tree-id1741 . -8) (undo-tree-id1742 . -8) (undo-tree-id1743 . -8) (undo-tree-id1744 . -8) (undo-tree-id1745 . -8) (undo-tree-id1746 . -8) (undo-tree-id1747 . -8) (undo-tree-id1748 . -8) (undo-tree-id1749 . -8) (undo-tree-id1750 . -8) (undo-tree-id1751 . -8) (undo-tree-id1752 . -8) (undo-tree-id1753 . -8) (undo-tree-id1754 . -8) (undo-tree-id1755 . -8) (undo-tree-id1756 . -8) (undo-tree-id1757 . -8) (undo-tree-id1758 . -8) (undo-tree-id1759 . -8) (undo-tree-id1760 . -8) (undo-tree-id1761 . -8) (undo-tree-id1762 . -8) (undo-tree-id1763 . -8) (undo-tree-id1764 . -8) (undo-tree-id1765 . -8) (undo-tree-id1766 . -8) 316 (#("process " 0 8 (wrap-prefix "  " fontified t)) . -316) (undo-tree-id1767 . -8) (undo-tree-id1768 . -1) (undo-tree-id1769 . -2) (undo-tree-id1770 . -1) (undo-tree-id1771 . -3) (undo-tree-id1772 . -2) (undo-tree-id1773 . -4) (undo-tree-id1774 . -3) (undo-tree-id1775 . -5) (undo-tree-id1776 . -4) (undo-tree-id1777 . -6) (undo-tree-id1778 . -5) (undo-tree-id1779 . -7) (undo-tree-id1780 . -6) (undo-tree-id1781 . -8) (undo-tree-id1782 . -7) (undo-tree-id1783 . -8) (undo-tree-id1784 . -8) (undo-tree-id1785 . -8) (undo-tree-id1786 . -8) (undo-tree-id1787 . -8) (undo-tree-id1788 . -8) (undo-tree-id1789 . -8) (undo-tree-id1790 . -8) (undo-tree-id1791 . -8) (undo-tree-id1792 . -8) (undo-tree-id1793 . -8) (undo-tree-id1794 . -8) (undo-tree-id1795 . -8) (undo-tree-id1796 . -8) (undo-tree-id1797 . -8) (undo-tree-id1798 . -8) (undo-tree-id1799 . -8) (undo-tree-id1800 . -8) (undo-tree-id1801 . -8) (undo-tree-id1802 . -8) (undo-tree-id1803 . -8) (undo-tree-id1804 . -8) (undo-tree-id1805 . -8) (undo-tree-id1806 . -8) (undo-tree-id1807 . -8) (undo-tree-id1808 . -8) (undo-tree-id1809 . -8) (undo-tree-id1810 . -8) (undo-tree-id1811 . -8) (undo-tree-id1812 . -8) (undo-tree-id1813 . -8) (undo-tree-id1814 . -8) (undo-tree-id1815 . -8) 324 (#("of " 0 3 (wrap-prefix "  " fontified t)) . -324) (undo-tree-id1816 . -3) (undo-tree-id1817 . -1) (undo-tree-id1818 . -2) (undo-tree-id1819 . -1) (undo-tree-id1820 . -3) (undo-tree-id1821 . -2) (undo-tree-id1822 . -3) (undo-tree-id1823 . -3) (undo-tree-id1824 . -3) (undo-tree-id1825 . -3) (undo-tree-id1826 . -3) (undo-tree-id1827 . -3) (undo-tree-id1828 . -3) (undo-tree-id1829 . -3) (undo-tree-id1830 . -3) (undo-tree-id1831 . -3) (undo-tree-id1832 . -3) (undo-tree-id1833 . -3) (undo-tree-id1834 . -3) (undo-tree-id1835 . -3) (undo-tree-id1836 . -3) (undo-tree-id1837 . -3) (undo-tree-id1838 . -3) (undo-tree-id1839 . -3) (undo-tree-id1840 . -3) (undo-tree-id1841 . -3) (undo-tree-id1842 . -3) (undo-tree-id1843 . -3) (undo-tree-id1844 . -3) (undo-tree-id1845 . -3) 327 (#("diffusion " 0 10 (wrap-prefix "  " fontified t)) . -327) (undo-tree-id1846 . -10) (undo-tree-id1847 . -1) (undo-tree-id1848 . -2) (undo-tree-id1849 . -1) (undo-tree-id1850 . -3) (undo-tree-id1851 . -2) (undo-tree-id1852 . -4) (undo-tree-id1853 . -3) (undo-tree-id1854 . -5) (undo-tree-id1855 . -4) (undo-tree-id1856 . -6) (undo-tree-id1857 . -5) (undo-tree-id1858 . -7) (undo-tree-id1859 . -6) (undo-tree-id1860 . -8) (undo-tree-id1861 . -7) (undo-tree-id1862 . -9) (undo-tree-id1863 . -8) (undo-tree-id1864 . -10) (undo-tree-id1865 . -9) (undo-tree-id1866 . -10) 337 (329 . 337) (308 . 329) (304 . 308) (#("Before " 0 7 (wrap-prefix "  " fontified t)) . -304) (undo-tree-id1867 . -7) (undo-tree-id1868 . -1) (undo-tree-id1869 . -2) (undo-tree-id1870 . -1) (undo-tree-id1871 . -3) (undo-tree-id1872 . -2) (undo-tree-id1873 . -4) (undo-tree-id1874 . -3) (undo-tree-id1875 . -4) (undo-tree-id1876 . -5) (undo-tree-id1877 . -4) (undo-tree-id1878 . -5) (undo-tree-id1879 . -6) (undo-tree-id1880 . -5) (undo-tree-id1881 . -6) (undo-tree-id1882 . -6) (undo-tree-id1883 . -7) (undo-tree-id1884 . -6) (undo-tree-id1885 . -7) (undo-tree-id1886 . -7) (undo-tree-id1887 . -7) (undo-tree-id1888 . -7) (undo-tree-id1889 . -7) (undo-tree-id1890 . -7) (undo-tree-id1891 . -7) (undo-tree-id1892 . -7) (undo-tree-id1893 . -7) (undo-tree-id1894 . -7) (undo-tree-id1895 . -7) (undo-tree-id1896 . -7) (undo-tree-id1897 . -7) (undo-tree-id1898 . -7) (undo-tree-id1899 . -7) (undo-tree-id1900 . -7) (undo-tree-id1901 . -7) (undo-tree-id1902 . -7) (undo-tree-id1903 . -7) (undo-tree-id1904 . -7) (undo-tree-id1905 . -7) (undo-tree-id1906 . -7) (undo-tree-id1907 . -7) (undo-tree-id1908 . -7) (undo-tree-id1909 . -7) (undo-tree-id1910 . -7) (undo-tree-id1911 . -7) (undo-tree-id1912 . -7) (undo-tree-id1913 . -7) (undo-tree-id1914 . -7) (undo-tree-id1915 . -7) (undo-tree-id1916 . -7) (undo-tree-id1917 . -7) (undo-tree-id1918 . -7) (undo-tree-id1919 . -7) (undo-tree-id1920 . -7) (undo-tree-id1921 . -7) (undo-tree-id1922 . -7) (undo-tree-id1923 . -7) (undo-tree-id1924 . -7) (undo-tree-id1925 . -7) (undo-tree-id1926 . -7) (undo-tree-id1927 . -7) (undo-tree-id1928 . -7) (undo-tree-id1929 . -7) (undo-tree-id1930 . -7) (undo-tree-id1931 . -7) (undo-tree-id1932 . -7) 311 (#("using " 0 6 (wrap-prefix "  " fontified t)) . -311) (undo-tree-id1933 . -6) (undo-tree-id1934 . -1) (undo-tree-id1935 . -2) (undo-tree-id1936 . -1) (undo-tree-id1937 . -3) (undo-tree-id1938 . -2) (undo-tree-id1939 . -4) (undo-tree-id1940 . -3) (undo-tree-id1941 . -5) (undo-tree-id1942 . -4) (undo-tree-id1943 . -6) (undo-tree-id1944 . -5) (undo-tree-id1945 . -6) (undo-tree-id1946 . -6) (undo-tree-id1947 . -6) (undo-tree-id1948 . -6) (undo-tree-id1949 . -6) (undo-tree-id1950 . -6) (undo-tree-id1951 . -6) (undo-tree-id1952 . -6) (undo-tree-id1953 . -6) (undo-tree-id1954 . -6) (undo-tree-id1955 . -6) (undo-tree-id1956 . -6) (undo-tree-id1957 . -6) (undo-tree-id1958 . -6) (undo-tree-id1959 . -6) (undo-tree-id1960 . -6) (undo-tree-id1961 . -6) (undo-tree-id1962 . -6) (undo-tree-id1963 . -6) (undo-tree-id1964 . -6) (undo-tree-id1965 . -6) (undo-tree-id1966 . -6) (undo-tree-id1967 . -6) (undo-tree-id1968 . -6) (undo-tree-id1969 . -6) (undo-tree-id1970 . -6) (undo-tree-id1971 . -6) (undo-tree-id1972 . -6) (undo-tree-id1973 . -6) (undo-tree-id1974 . -6) (undo-tree-id1975 . -6) (undo-tree-id1976 . -6) (undo-tree-id1977 . -6) 317 (#("diffusion " 0 10 (wrap-prefix "  " fontified t)) . -317) (undo-tree-id1978 . -10) (undo-tree-id1979 . -1) (undo-tree-id1980 . -2) (undo-tree-id1981 . -1) (undo-tree-id1982 . -3) (undo-tree-id1983 . -2) (undo-tree-id1984 . -4) (undo-tree-id1985 . -3) (undo-tree-id1986 . -5) (undo-tree-id1987 . -4) (undo-tree-id1988 . -6) (undo-tree-id1989 . -5) (undo-tree-id1990 . -7) (undo-tree-id1991 . -6) (undo-tree-id1992 . -8) (undo-tree-id1993 . -7) (undo-tree-id1994 . -9) (undo-tree-id1995 . -8) (undo-tree-id1996 . -10) (undo-tree-id1997 . -9) (undo-tree-id1998 . -10) (undo-tree-id1999 . -10) (undo-tree-id2000 . -10) (undo-tree-id2001 . -10) (undo-tree-id2002 . -10) (undo-tree-id2003 . -10) (undo-tree-id2004 . -10) (undo-tree-id2005 . -10) (undo-tree-id2006 . -10) (undo-tree-id2007 . -10) 327 (#("to " 0 3 (wrap-prefix "  " fontified t)) . -327) (undo-tree-id2008 . -3) (undo-tree-id2009 . -1) (undo-tree-id2010 . -2) (undo-tree-id2011 . -1) (undo-tree-id2012 . -3) (undo-tree-id2013 . -2) (undo-tree-id2014 . -3) 330 (325 . 330) (304 . 325) (303 . 304) (t 26429 21094 227469 148000) 303) nil (26429 21493 96197 898000) 0 nil])
([nil nil ((368 . 382)) nil (26429 21493 96068 493000) 0 nil])
([nil nil ((#("
Diffusion generally means going from an ordered state to a less ordered state." 0 1 (wrap-prefix "  " fontified t) 1 79 (wrap-prefix "  " fontified t)) . 303) (undo-tree-id1279 . -78) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -2) (undo-tree-id1435 . -1) (undo-tree-id1436 . -3) (undo-tree-id1437 . -2) (undo-tree-id1438 . -4) (undo-tree-id1439 . -3) (undo-tree-id1440 . -5) (undo-tree-id1441 . -4) (undo-tree-id1442 . -6) (undo-tree-id1443 . -5) (undo-tree-id1444 . -6) (undo-tree-id1445 . -7) (undo-tree-id1446 . -6) (undo-tree-id1447 . -7) (undo-tree-id1448 . -8) (undo-tree-id1449 . -7) (undo-tree-id1450 . -8) (undo-tree-id1451 . -9) (undo-tree-id1452 . -8) (undo-tree-id1453 . -9) (undo-tree-id1454 . -10) (undo-tree-id1455 . -9) (undo-tree-id1456 . -10) (undo-tree-id1457 . -10) (undo-tree-id1458 . -11) (undo-tree-id1459 . -10) (undo-tree-id1460 . -12) (undo-tree-id1461 . -11) (undo-tree-id1462 . -13) (undo-tree-id1463 . -12) (undo-tree-id1464 . -14) (undo-tree-id1465 . -13) (undo-tree-id1466 . -15) (undo-tree-id1467 . -14) (undo-tree-id1468 . -16) (undo-tree-id1469 . -15) (undo-tree-id1470 . -17) (undo-tree-id1471 . -16) (undo-tree-id1472 . -18) (undo-tree-id1473 . -17) (undo-tree-id1474 . -19) (undo-tree-id1475 . -18) (undo-tree-id1476 . -20) (undo-tree-id1477 . -19) (undo-tree-id1478 . -21) (undo-tree-id1479 . -20) (undo-tree-id1480 . -22) (undo-tree-id1481 . -21) (undo-tree-id1482 . -23) (undo-tree-id1483 . -22) (undo-tree-id1484 . -24) (undo-tree-id1485 . -23) (undo-tree-id1486 . -25) (undo-tree-id1487 . -24) (undo-tree-id1488 . -26) (undo-tree-id1489 . -25) (undo-tree-id1490 . -27) (undo-tree-id1491 . -26) (undo-tree-id1492 . -28) (undo-tree-id1493 . -27) (undo-tree-id1494 . -29) (undo-tree-id1495 . -28) (undo-tree-id1496 . -30) (undo-tree-id1497 . -29) (undo-tree-id1498 . -31) (undo-tree-id1499 . -30) (undo-tree-id1500 . -32) (undo-tree-id1501 . -31) (undo-tree-id1502 . -33) (undo-tree-id1503 . -32) (undo-tree-id1504 . -34) (undo-tree-id1505 . -33) (undo-tree-id1506 . -35) (undo-tree-id1507 . -34) (undo-tree-id1508 . -36) (undo-tree-id1509 . -35) (undo-tree-id1510 . -37) (undo-tree-id1511 . -36) (undo-tree-id1512 . -38) (undo-tree-id1513 . -37) (undo-tree-id1514 . -39) (undo-tree-id1515 . -38) (undo-tree-id1516 . -40) (undo-tree-id1517 . -39) (undo-tree-id1518 . -41) (undo-tree-id1519 . -40) (undo-tree-id1520 . -42) (undo-tree-id1521 . -41) (undo-tree-id1522 . -43) (undo-tree-id1523 . -42) (undo-tree-id1524 . -44) (undo-tree-id1525 . -43) (undo-tree-id1526 . -45) (undo-tree-id1527 . -44) (undo-tree-id1528 . -46) (undo-tree-id1529 . -45) (undo-tree-id1530 . -47) (undo-tree-id1531 . -46) (undo-tree-id1532 . -48) (undo-tree-id1533 . -47) (undo-tree-id1534 . -49) (undo-tree-id1535 . -48) (undo-tree-id1536 . -50) (undo-tree-id1537 . -49) (undo-tree-id1538 . -51) (undo-tree-id1539 . -50) (undo-tree-id1540 . -52) (undo-tree-id1541 . -51) (undo-tree-id1542 . -53) (undo-tree-id1543 . -52) (undo-tree-id1544 . -54) (undo-tree-id1545 . -53) (undo-tree-id1546 . -55) (undo-tree-id1547 . -54) (undo-tree-id1548 . -56) (undo-tree-id1549 . -55) (undo-tree-id1550 . -57) (undo-tree-id1551 . -56) (undo-tree-id1552 . -58) (undo-tree-id1553 . -57) (undo-tree-id1554 . -59) (undo-tree-id1555 . -58) (undo-tree-id1556 . -60) (undo-tree-id1557 . -59) (undo-tree-id1558 . -61) (undo-tree-id1559 . -60) (undo-tree-id1560 . -62) (undo-tree-id1561 . -61) (undo-tree-id1562 . -63) (undo-tree-id1563 . -62) (undo-tree-id1564 . -64) (undo-tree-id1565 . -63) (undo-tree-id1566 . -65) (undo-tree-id1567 . -64) (undo-tree-id1568 . -64) (undo-tree-id1569 . -64) (undo-tree-id1570 . -64) (undo-tree-id1571 . -64) (undo-tree-id1572 . -64) (undo-tree-id1573 . -64) (undo-tree-id1574 . -65) (undo-tree-id1575 . -64) (undo-tree-id1576 . -65) (undo-tree-id1577 . -65) (undo-tree-id1578 . -66) (undo-tree-id1579 . -65) (undo-tree-id1580 . -67) (undo-tree-id1581 . -66) (undo-tree-id1582 . -68) (undo-tree-id1583 . -67) (undo-tree-id1584 . -69) (undo-tree-id1585 . -68) (undo-tree-id1586 . -70) (undo-tree-id1587 . -69) (undo-tree-id1588 . -71) (undo-tree-id1589 . -70) (undo-tree-id1590 . -72) (undo-tree-id1591 . -71) (undo-tree-id1592 . -73) (undo-tree-id1593 . -72) (undo-tree-id1594 . -74) (undo-tree-id1595 . -73) (undo-tree-id1596 . -75) (undo-tree-id1597 . -74) (undo-tree-id1598 . -76) (undo-tree-id1599 . -75) (undo-tree-id1600 . -77) (undo-tree-id1601 . -76) (undo-tree-id1602 . -78) (undo-tree-id1603 . -77) (undo-tree-id1604 . -79) (undo-tree-id1605 . -78) (undo-tree-id1606 . -78) (undo-tree-id1607 . -78) (undo-tree-id1608 . -1) (undo-tree-id1609 . -78) (undo-tree-id1610 . -78) (undo-tree-id1611 . -78) (undo-tree-id1612 . -78) (undo-tree-id1613 . -78) (undo-tree-id1614 . -78) (undo-tree-id1615 . -78) 381) nil (26429 21493 96064 706000) 0 nil])
([nil nil ((325 . 326) (322 . 325) (#("diccu" 0 5 (wrap-prefix "  " fontified t)) . -322) (undo-tree-id1258 . -5) (undo-tree-id1259 . -1) (undo-tree-id1260 . -2) (undo-tree-id1261 . -1) (undo-tree-id1262 . -3) (undo-tree-id1263 . -2) (undo-tree-id1264 . -4) (undo-tree-id1265 . -3) (undo-tree-id1266 . -5) (undo-tree-id1267 . -4) (undo-tree-id1268 . -5) 327 (325 . 327) (304 . 325) (#("T" 0 1 (wrap-prefix "  " fontified t)) . -304) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (#("o" 0 1 (wrap-prefix "  " fontified t)) . -305) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) 306 (304 . 306) (303 . 304) 303) nil (26429 21493 95935 71000) 0 nil])
([nil nil ((374 . 387) (353 . 374) (352 . 353) (339 . 353) (318 . 339) (#("the" 0 3 (wrap-prefix "  " fontified t)) . -318) (undo-tree-id1127 . -1) (undo-tree-id1128 . -2) (undo-tree-id1129 . -1) (undo-tree-id1130 . -3) (undo-tree-id1131 . -2) (undo-tree-id1132 . -3) (undo-tree-id1133 . -3) (undo-tree-id1134 . -3) (undo-tree-id1135 . -3) (undo-tree-id1136 . -3) (undo-tree-id1137 . -3) (undo-tree-id1138 . -3) (undo-tree-id1139 . -3) (undo-tree-id1140 . -3) (undo-tree-id1141 . -3) (undo-tree-id1142 . -3) (undo-tree-id1143 . -3) (undo-tree-id1144 . -3) (undo-tree-id1145 . -3) (undo-tree-id1146 . -3) (undo-tree-id1147 . -3) (undo-tree-id1148 . -3) (undo-tree-id1149 . -3) (undo-tree-id1150 . -3) (undo-tree-id1151 . -3) (undo-tree-id1152 . -3) (undo-tree-id1153 . -3) (undo-tree-id1154 . -3) (undo-tree-id1155 . -3) (undo-tree-id1156 . -3) (undo-tree-id1157 . -3) (undo-tree-id1158 . -3) (undo-tree-id1159 . -3) (undo-tree-id1160 . -3) (undo-tree-id1161 . -3) (undo-tree-id1162 . -3) (undo-tree-id1163 . -3) (undo-tree-id1164 . -3) (undo-tree-id1165 . -3) (undo-tree-id1166 . -3) (undo-tree-id1167 . -3) (undo-tree-id1168 . -3) (undo-tree-id1169 . -3) (undo-tree-id1170 . -3) (undo-tree-id1171 . -3) (undo-tree-id1172 . -3) (undo-tree-id1173 . -3) (undo-tree-id1174 . -3) (undo-tree-id1175 . -3) (undo-tree-id1176 . -3) (undo-tree-id1177 . -3) (undo-tree-id1178 . -3) (undo-tree-id1179 . -3) (undo-tree-id1180 . -3) 321 (#(" " 0 1 (wrap-prefix "  " fontified t)) . -321) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) 322 (#("diff" 0 4 (wrap-prefix "  " fontified t)) . -322) (undo-tree-id1228 . -1) (undo-tree-id1229 . -2) (undo-tree-id1230 . -1) (undo-tree-id1231 . -3) (undo-tree-id1232 . -2) (undo-tree-id1233 . -4) (undo-tree-id1234 . -3) (undo-tree-id1235 . -4) (undo-tree-id1236 . -4) (undo-tree-id1237 . -4) (undo-tree-id1238 . -4) (undo-tree-id1239 . -4) (undo-tree-id1240 . -4) (undo-tree-id1241 . -4) (undo-tree-id1242 . -4) (undo-tree-id1243 . -4) (undo-tree-id1244 . -4) (undo-tree-id1245 . -4) (undo-tree-id1246 . -4) (undo-tree-id1247 . -3) (undo-tree-id1248 . -3) (undo-tree-id1249 . -3) (undo-tree-id1250 . -3) (undo-tree-id1251 . -3) (undo-tree-id1252 . -3) (undo-tree-id1253 . -4) (undo-tree-id1254 . -3) (undo-tree-id1255 . -4) (undo-tree-id1256 . -4) (undo-tree-id1257 . -4) 326) nil (26429 21493 95926 564000) 0 nil])
([nil nil ((#("." 0 1 (wrap-prefix "  " fontified t)) . -386) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) 387) nil (26429 21493 95860 209000) 0 nil])
([nil nil ((387 . 388)) nil (26429 21493 95857 874000) 0 nil])
([nil nil ((536 . 539) (#("8" 0 1 (wrap-prefix "  " fontified t)) . -536) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (#("5" 0 1 (wrap-prefix "  " fontified t)) . -537) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) 538 (536 . 538) (524 . 536) (523 . 524) (503 . 524) (#("d" 0 1 (wrap-prefix "  " fontified t)) . -503) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) 504 (485 . 504) (#("
" 0 1 (wrap-prefix "  " fontified t)) . -485) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) 486 (483 . 486) (#("Here " 0 5 (wrap-prefix "  " fontified t)) . -483) (undo-tree-id1077 . -5) (undo-tree-id1078 . -1) (undo-tree-id1079 . -2) (undo-tree-id1080 . -1) (undo-tree-id1081 . -3) (undo-tree-id1082 . -2) (undo-tree-id1083 . -4) (undo-tree-id1084 . -3) (undo-tree-id1085 . -5) (undo-tree-id1086 . -4) (undo-tree-id1087 . -5) (undo-tree-id1088 . -5) (undo-tree-id1089 . -5) 488 (482 . 488) (#("
" 0 1 (wrap-prefix "  " fontified t)) . -482) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) 483 (482 . 483) (481 . 482) (#("." 0 1 (wrap-prefix "  " fontified t)) . -481) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) 482 (469 . 482) (#("s" 0 1 (wrap-prefix "  " fontified t)) . -469) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) 470 (469 . 470) (452 . 469) (#("progres" 0 7 (wrap-prefix "  " fontified t)) . -452) (undo-tree-id1100 . -7) (undo-tree-id1101 . -1) (undo-tree-id1102 . -2) (undo-tree-id1103 . -1) (undo-tree-id1104 . -3) (undo-tree-id1105 . -2) (undo-tree-id1106 . -4) (undo-tree-id1107 . -3) (undo-tree-id1108 . -5) (undo-tree-id1109 . -4) (undo-tree-id1110 . -6) (undo-tree-id1111 . -5) (undo-tree-id1112 . -7) (undo-tree-id1113 . -6) (undo-tree-id1114 . -7) 459 (439 . 459) (437 . 439) (416 . 437) (#("B" 0 1 (wrap-prefix "  " fontified t)) . -416) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) 417 (407 . 417) (390 . 407) (389 . 390) (#("T" 0 1 (wrap-prefix "  " fontified t)) . -389) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) 390 (388 . 390)) nil (26429 21493 95853 857000) 0 nil])
([nil nil ((541 . 542) (540 . 541)) nil (26429 21493 95825 132000) 0 nil])
([nil nil ((nil rear-nonsticky nil 942 . 943) (nil fontified nil 542 . 943) (542 . 943)) nil (26429 21493 95824 802000) 0 nil])
([nil nil ((549 . 552) (544 . 549) (#("UnFeatured" 0 10 (wrap-prefix "  " face (markdown-table-face) fontified t)) . 544)) nil (26429 21493 95824 331000) 0 nil])
([nil nil ((592 . 595) (#("Featured" 0 8 (face (markdown-table-face) wrap-prefix "  " fontified t)) . 592)) nil (26429 21493 95822 998000) 0 nil])
([nil nil ((634 . 640)) nil (26429 21493 95822 568000) 0 nil])
([nil nil ((635 . 639) (#("0" 0 1 (face (markdown-table-face) wrap-prefix "  " fontified t)) . -635) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (#("5" 0 1 (face (markdown-table-face) wrap-prefix "  " fontified t)) . -636) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) 637 (635 . 637)) nil (26429 21493 95821 355000) 0 nil])
([nil nil ((641 . 644)) nil (26429 21493 95815 123000) 0 nil])
([nil nil ((#("|" 0 1 (face (markdown-table-face) wrap-prefix "  " fontified t)) . 644) (undo-tree-id1047 . 1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1)) nil (26429 21493 95814 342000) 0 nil])
([nil nil ((#("|                                                 |                                               |
" 0 99 (face (markdown-table-face) wrap-prefix "  " fontified nil) 99 100 (font-lock-multiline t face (markdown-table-face) wrap-prefix "  " fontified t)) . 990) (undo-tree-id855 . -100) (undo-tree-id856 . 100) (undo-tree-id857 . -100) (undo-tree-id858 . -100) (undo-tree-id859 . -100) (undo-tree-id860 . -100) (undo-tree-id861 . -100) (undo-tree-id862 . -100) (undo-tree-id863 . -100) (undo-tree-id864 . -100) (undo-tree-id865 . -100) (undo-tree-id866 . -100) (878 . 990) (#("| ![dx]({{site.baseurl}}/assets/proj4/unfeatured) | ![dx]({{site.baseurl}}/assets/proj4/featured) |
" 0 2 (face (markdown-table-face) wrap-prefix "  " fontified nil) 2 3 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 3 4 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 4 6 (help-echo "{{site.baseurl}}/assets/proj4/unfeatured" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) wrap-prefix "  " fontified nil) 6 7 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 7 8 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 8 48 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified nil) 48 49 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 49 52 (face (markdown-table-face) wrap-prefix "  " fontified nil) 52 53 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 53 54 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 54 56 (help-echo "{{site.baseurl}}/assets/proj4/featured" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) wrap-prefix "  " fontified nil) 56 57 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 57 58 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 58 96 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified nil) 96 97 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 97 99 (face (markdown-table-face) wrap-prefix "  " fontified nil) 99 100 (font-lock-multiline t face (markdown-table-face) wrap-prefix "  " fontified nil)) . 878) (undo-tree-id867 . 100) (undo-tree-id868 . -100) (undo-tree-id869 . -100) (undo-tree-id870 . -100) (undo-tree-id871 . -100) (undo-tree-id872 . -100) (undo-tree-id873 . -100) (undo-tree-id874 . -100) (undo-tree-id875 . -100) (undo-tree-id876 . -100) (undo-tree-id877 . -100) (undo-tree-id878 . -100) (undo-tree-id879 . -100) (undo-tree-id880 . -100) (undo-tree-id881 . -100) (undo-tree-id882 . -100) (undo-tree-id883 . -100) (undo-tree-id884 . -100) (undo-tree-id885 . -100) (undo-tree-id886 . -100) (undo-tree-id887 . -100) (undo-tree-id888 . -100) (undo-tree-id889 . -100) (undo-tree-id890 . -100) (undo-tree-id891 . -100) (undo-tree-id892 . -100) (undo-tree-id893 . -100) (undo-tree-id894 . -100) (undo-tree-id895 . -100) (undo-tree-id896 . -100) (undo-tree-id897 . -100) (undo-tree-id898 . -100) (undo-tree-id899 . -100) (undo-tree-id900 . -100) (766 . 878) (#("|:-----------------------------------------------:|:---------------------------------------------:|
" 0 99 (face (markdown-table-face) wrap-prefix "  " fontified nil) 99 100 (font-lock-multiline t face (markdown-table-face) wrap-prefix "  " fontified nil)) . 766) (undo-tree-id901 . 100) (undo-tree-id902 . -100) (undo-tree-id903 . -100) (654 . 766) (#("| Original                                      | 250                                      | 500 | 750 |
" 0 104 (face (markdown-table-face) wrap-prefix "  " fontified nil) 104 105 (font-lock-multiline t face (markdown-table-face) wrap-prefix "  " fontified nil)) . 654) (undo-tree-id904 . 3) (undo-tree-id905 . -102) (undo-tree-id906 . -105) (undo-tree-id907 . -105) (undo-tree-id908 . -2) (undo-tree-id909 . -2) (undo-tree-id910 . -2) (undo-tree-id911 . -2) (undo-tree-id912 . -2) (undo-tree-id913 . -2) (undo-tree-id914 . -2) (undo-tree-id915 . -3) (undo-tree-id916 . -2) (undo-tree-id917 . -4) (undo-tree-id918 . -3) (undo-tree-id919 . -5) (undo-tree-id920 . -4) (undo-tree-id921 . -6) (undo-tree-id922 . -5) (undo-tree-id923 . -7) (undo-tree-id924 . -6) (undo-tree-id925 . -8) (undo-tree-id926 . -7) (undo-tree-id927 . -9) (undo-tree-id928 . -8) (undo-tree-id929 . -10) (undo-tree-id930 . -9) (undo-tree-id931 . -9) (undo-tree-id932 . -9) (undo-tree-id933 . -9) (undo-tree-id934 . -9) (undo-tree-id935 . -9) (undo-tree-id936 . -9) (undo-tree-id937 . -48) (undo-tree-id938 . -9) (undo-tree-id939 . -50) (undo-tree-id940 . -48) (undo-tree-id941 . -91) (undo-tree-id942 . -50) (undo-tree-id943 . -50) (undo-tree-id944 . -91) (undo-tree-id945 . -50) (undo-tree-id946 . -50) (undo-tree-id947 . -50) (undo-tree-id948 . -50) (undo-tree-id949 . -50) (undo-tree-id950 . -50) (undo-tree-id951 . -51) (undo-tree-id952 . -50) (undo-tree-id953 . -52) (undo-tree-id954 . -51) (undo-tree-id955 . -53) (undo-tree-id956 . -52) (undo-tree-id957 . -52) (undo-tree-id958 . -52) (undo-tree-id959 . -52) (undo-tree-id960 . -52) (undo-tree-id961 . -52) (undo-tree-id962 . -52) (undo-tree-id963 . -91) (undo-tree-id964 . -52) (undo-tree-id965 . -92) (undo-tree-id966 . -91) (undo-tree-id967 . -92) (undo-tree-id968 . -92) (undo-tree-id969 . -93) (undo-tree-id970 . -92) (undo-tree-id971 . -98) (undo-tree-id972 . -93) (undo-tree-id973 . -99) (undo-tree-id974 . -98) (undo-tree-id975 . -102) (undo-tree-id976 . -99) (undo-tree-id977 . -103) (undo-tree-id978 . -102) (undo-tree-id979 . -104) (undo-tree-id980 . -103) (undo-tree-id981 . -103) (undo-tree-id982 . -103) (undo-tree-id983 . -103) (undo-tree-id984 . -103) (undo-tree-id985 . -103) (undo-tree-id986 . -103) (undo-tree-id987 . -99) (undo-tree-id988 . -103) (undo-tree-id989 . -93) (undo-tree-id990 . -99) (undo-tree-id991 . -93) (undo-tree-id992 . -93) (undo-tree-id993 . -93) (undo-tree-id994 . -93) (undo-tree-id995 . -93) (undo-tree-id996 . -93) (undo-tree-id997 . -93) (undo-tree-id998 . -93) (undo-tree-id999 . -93) (undo-tree-id1000 . -93) (undo-tree-id1001 . -93) (undo-tree-id1002 . -93) (undo-tree-id1003 . -94) (undo-tree-id1004 . -93) (undo-tree-id1005 . -95) (undo-tree-id1006 . -94) (undo-tree-id1007 . -96) (undo-tree-id1008 . -95) (undo-tree-id1009 . -97) (undo-tree-id1010 . -96) (undo-tree-id1011 . -96) (undo-tree-id1012 . -96) (undo-tree-id1013 . -96) (undo-tree-id1014 . -96) (undo-tree-id1015 . -96) (undo-tree-id1016 . -96) (undo-tree-id1017 . -97) (undo-tree-id1018 . -96) (undo-tree-id1019 . -98) (undo-tree-id1020 . -97) (undo-tree-id1021 . -99) (undo-tree-id1022 . -98) (undo-tree-id1023 . -99) (undo-tree-id1024 . -99) (undo-tree-id1025 . -100) (undo-tree-id1026 . -99) (undo-tree-id1027 . -101) (undo-tree-id1028 . -100) (undo-tree-id1029 . -102) (undo-tree-id1030 . -101) (undo-tree-id1031 . -101) (undo-tree-id1032 . -101) (undo-tree-id1033 . -101) (undo-tree-id1034 . -101) (undo-tree-id1035 . -101) (undo-tree-id1036 . -101) (undo-tree-id1037 . -102) (undo-tree-id1038 . -101) (undo-tree-id1039 . -102) (undo-tree-id1040 . -102) (undo-tree-id1041 . -102) (undo-tree-id1042 . -102) (undo-tree-id1043 . -102) (undo-tree-id1044 . -102) (undo-tree-id1045 . -102) (undo-tree-id1046 . -102) (542 . 654) 644) nil (26429 21493 95810 194000) 0 nil])
([nil nil ((802 . 803) (#("4" 0 1 (wrap-prefix "  " font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t)) . -802) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) 803) nil (26429 21493 95738 789000) 0 nil])
([nil nil ((813 . 817) (807 . 813) (804 . 807) (#("o" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -804) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (#("r" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -805) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) 806 (804 . 806) (#("unfeatured" 0 10 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . 804)) nil (26429 21493 95735 22000) 0 nil])
([nil nil ((855 . 856) (#("4" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -855) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) 856) nil (26429 21493 95731 355000) 0 nil])
([nil nil ((866 . 873) (#("5" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -866) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) 867 (857 . 867) (#("featured" 0 8 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . 857)) nil (26429 21493 95728 89000) 0 nil])
([nil nil ((nil rear-nonsticky nil 929 . 930) (nil fontified nil 877 . 930) (877 . 930) 876) nil (26429 21493 95725 774000) 0 nil])
([nil nil ((922 . 925) (#("2" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -922) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (#("5" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -923) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (#("0" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -924) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) 925) nil (26429 21493 95724 291000) 0 nil])
([nil nil ((nil rear-nonsticky nil 990 . 991) (nil fontified nil 938 . 991) (938 . 991) 937) nil (26429 21493 95702 340000) 0 nil])
([nil nil ((983 . 986) (#("2" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -983) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (#("5" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -984) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (#("0" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -985) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) 986) nil (26429 21493 95700 807000) 0 nil])
([nil nil ((#("|                                                 |                                               |     |     |
" 0 111 (face (markdown-table-face) fontified nil wrap-prefix "  ") 111 112 (font-lock-multiline t face (markdown-table-face) fontified t wrap-prefix "  ")) . 1434) (undo-tree-id95 . 112) (undo-tree-id96 . 112) (undo-tree-id97 . -112) (undo-tree-id98 . -112) (undo-tree-id99 . -112) (undo-tree-id100 . -112) (undo-tree-id101 . -112) (undo-tree-id102 . -112) (undo-tree-id103 . -112) (undo-tree-id104 . -112) (undo-tree-id105 . -112) (undo-tree-id106 . -112) (undo-tree-id107 . -112) (undo-tree-id108 . -112) (undo-tree-id109 . -112) (undo-tree-id110 . -112) (undo-tree-id111 . -112) (undo-tree-id112 . -112) (undo-tree-id113 . -112) (undo-tree-id114 . -112) (undo-tree-id115 . -112) (undo-tree-id116 . -112) (undo-tree-id117 . -112) (1211 . 1434) (#("| ![dx]({{site.baseurl}}/assets/proj5/campanile.jpg) | ![dx]({{site.baseurl}}/assets/proj5/1.1_noise250.png) | ![dx]({{site.baseurl}}/assets/proj5/1.1_noise500.png)    |   ![dx]({{site.baseurl}}/assets/proj5/1.1_noise750.png)  |
" 0 2 (face (markdown-table-face) fontified nil wrap-prefix "  ") 2 3 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 3 4 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 4 6 (help-echo "{{site.baseurl}}/assets/proj5/campanile.jpg" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) fontified nil wrap-prefix "  ") 6 7 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 7 8 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 8 41 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified nil wrap-prefix "  ") 41 51 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified nil wrap-prefix "  ") 51 52 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 52 55 (face (markdown-table-face) fontified nil wrap-prefix "  ") 55 56 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 56 57 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 57 59 (help-echo "{{site.baseurl}}/assets/proj5/1.1_noise250.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) fontified nil wrap-prefix "  ") 59 60 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 60 61 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 61 107 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified nil wrap-prefix "  ") 107 108 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 108 111 (face (markdown-table-face) fontified nil wrap-prefix "  ") 111 112 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 112 113 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 113 115 (help-echo "{{site.baseurl}}/assets/proj5/1.1_noise500.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) fontified nil wrap-prefix "  ") 115 116 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 116 117 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 117 163 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified nil wrap-prefix "  ") 163 164 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 164 172 (face (markdown-table-face) fontified nil wrap-prefix "  ") 172 173 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 173 174 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 174 176 (help-echo "{{site.baseurl}}/assets/proj5/1.1_noise750.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) fontified nil wrap-prefix "  ") 176 177 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 177 178 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 178 224 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified nil wrap-prefix "  ") 224 225 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 225 228 (face (markdown-table-face) fontified nil wrap-prefix "  ") 228 229 (font-lock-multiline t face (markdown-table-face) fontified nil wrap-prefix "  ")) . 1211) (undo-tree-id118 . -172) (undo-tree-id119 . -172) (undo-tree-id120 . -224) (undo-tree-id121 . 9) (undo-tree-id122 . -55) (undo-tree-id123 . 121) (undo-tree-id124 . -107) (undo-tree-id125 . -55) (undo-tree-id126 . -1) (undo-tree-id127 . -227) (undo-tree-id128 . -229) (undo-tree-id129 . -229) (undo-tree-id130 . -229) (undo-tree-id131 . -229) (undo-tree-id132 . -229) (undo-tree-id133 . -229) (undo-tree-id134 . -229) (undo-tree-id135 . -229) (undo-tree-id136 . -229) (undo-tree-id137 . -229) (undo-tree-id138 . -229) (undo-tree-id139 . -229) (undo-tree-id140 . -229) (undo-tree-id141 . -229) (undo-tree-id142 . -229) (undo-tree-id143 . -229) (undo-tree-id144 . -229) (undo-tree-id145 . -229) (undo-tree-id146 . -229) (undo-tree-id147 . -229) (undo-tree-id148 . -229) (undo-tree-id149 . -229) (undo-tree-id150 . -229) (undo-tree-id151 . -229) (undo-tree-id152 . -229) (undo-tree-id153 . -229) (undo-tree-id154 . -229) (undo-tree-id155 . -229) (undo-tree-id156 . -229) (undo-tree-id157 . -229) (undo-tree-id158 . -229) (undo-tree-id159 . -229) (undo-tree-id160 . -229) (undo-tree-id161 . -2) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -2) (undo-tree-id189 . -1) (undo-tree-id190 . -4) (undo-tree-id191 . -2) (undo-tree-id192 . -6) (undo-tree-id193 . -4) (undo-tree-id194 . -10) (undo-tree-id195 . -6) (undo-tree-id196 . -14) (undo-tree-id197 . -10) (undo-tree-id198 . -15) (undo-tree-id199 . -14) (undo-tree-id200 . -22) (undo-tree-id201 . -15) (undo-tree-id202 . -25) (undo-tree-id203 . -22) (undo-tree-id204 . -31) (undo-tree-id205 . -25) (undo-tree-id206 . -32) (undo-tree-id207 . -31) (undo-tree-id208 . -36) (undo-tree-id209 . -32) (undo-tree-id210 . -38) (undo-tree-id211 . -36) (undo-tree-id212 . -36) (undo-tree-id213 . -38) (undo-tree-id214 . -36) (undo-tree-id215 . -36) (undo-tree-id216 . -36) (undo-tree-id217 . -36) (undo-tree-id218 . -36) (undo-tree-id219 . -36) (undo-tree-id220 . -229) (undo-tree-id221 . -37) (undo-tree-id222 . -36) (undo-tree-id223 . -229) (undo-tree-id224 . -36) (undo-tree-id225 . -36) (undo-tree-id226 . -36) (undo-tree-id227 . -36) (undo-tree-id228 . -36) (undo-tree-id229 . -36) (undo-tree-id230 . -37) (undo-tree-id231 . -36) (undo-tree-id232 . -38) (undo-tree-id233 . -37) (undo-tree-id234 . -38) (undo-tree-id235 . -38) (undo-tree-id236 . -38) (undo-tree-id237 . -38) (undo-tree-id238 . -38) (undo-tree-id239 . -229) (undo-tree-id240 . -38) (undo-tree-id241 . -38) (undo-tree-id242 . -38) (undo-tree-id243 . -229) (undo-tree-id244 . -38) (undo-tree-id245 . -38) (undo-tree-id246 . -229) (undo-tree-id247 . -38) (undo-tree-id248 . -38) (undo-tree-id249 . -229) (undo-tree-id250 . -38) (undo-tree-id251 . -38) (undo-tree-id252 . -229) (undo-tree-id253 . -39) (undo-tree-id254 . -38) (undo-tree-id255 . -229) (undo-tree-id256 . -40) (undo-tree-id257 . -39) (undo-tree-id258 . -229) (undo-tree-id259 . -41) (undo-tree-id260 . -40) (undo-tree-id261 . -229) (undo-tree-id262 . -47) (undo-tree-id263 . -41) (undo-tree-id264 . -47) (undo-tree-id265 . -229) (undo-tree-id266 . -47) (undo-tree-id267 . -47) (undo-tree-id268 . -47) (undo-tree-id269 . -47) (undo-tree-id270 . -47) (undo-tree-id271 . -47) (undo-tree-id272 . -47) (undo-tree-id273 . -47) (undo-tree-id274 . -47) (undo-tree-id275 . -47) (undo-tree-id276 . -47) (undo-tree-id277 . -48) (undo-tree-id278 . -47) (undo-tree-id279 . -229) (undo-tree-id280 . -49) (undo-tree-id281 . -48) (undo-tree-id282 . -229) (undo-tree-id283 . -50) (undo-tree-id284 . -49) (undo-tree-id285 . -229) (undo-tree-id286 . -51) (undo-tree-id287 . -50) (undo-tree-id288 . -229) (undo-tree-id289 . -50) (undo-tree-id290 . -50) (undo-tree-id291 . -50) (undo-tree-id292 . -50) (undo-tree-id293 . -50) (undo-tree-id294 . -50) (undo-tree-id295 . -51) (undo-tree-id296 . -50) (undo-tree-id297 . -53) (undo-tree-id298 . -51) (undo-tree-id299 . -55) (undo-tree-id300 . -53) (undo-tree-id301 . -57) (undo-tree-id302 . -55) (undo-tree-id303 . -59) (undo-tree-id304 . -57) (undo-tree-id305 . -63) (undo-tree-id306 . -59) (undo-tree-id307 . -67) (undo-tree-id308 . -63) (undo-tree-id309 . -68) (undo-tree-id310 . -67) (undo-tree-id311 . -75) (undo-tree-id312 . -68) (undo-tree-id313 . -78) (undo-tree-id314 . -75) (undo-tree-id315 . -84) (undo-tree-id316 . -78) (undo-tree-id317 . -85) (undo-tree-id318 . -84) (undo-tree-id319 . -89) (undo-tree-id320 . -85) (undo-tree-id321 . -91) (undo-tree-id322 . -89) (undo-tree-id323 . -89) (undo-tree-id324 . -91) (undo-tree-id325 . -89) (undo-tree-id326 . -89) (undo-tree-id327 . -89) (undo-tree-id328 . -89) (undo-tree-id329 . -89) (undo-tree-id330 . -89) (undo-tree-id331 . -229) (undo-tree-id332 . -90) (undo-tree-id333 . -89) (undo-tree-id334 . -229) (undo-tree-id335 . -90) (undo-tree-id336 . -90) (undo-tree-id337 . -89) (undo-tree-id338 . -89) (undo-tree-id339 . -89) (undo-tree-id340 . -89) (undo-tree-id341 . -89) (undo-tree-id342 . -89) (undo-tree-id343 . -90) (undo-tree-id344 . -89) (undo-tree-id345 . -91) (undo-tree-id346 . -90) (undo-tree-id347 . -91) (undo-tree-id348 . -91) (undo-tree-id349 . -91) (undo-tree-id350 . -91) (undo-tree-id351 . -91) (undo-tree-id352 . -229) (undo-tree-id353 . -91) (undo-tree-id354 . -92) (undo-tree-id355 . -91) (undo-tree-id356 . -229) (undo-tree-id357 . -93) (undo-tree-id358 . -92) (undo-tree-id359 . -229) (undo-tree-id360 . -94) (undo-tree-id361 . -93) (undo-tree-id362 . -229) (undo-tree-id363 . -95) (undo-tree-id364 . -94) (undo-tree-id365 . -229) (undo-tree-id366 . -96) (undo-tree-id367 . -95) (undo-tree-id368 . -229) (undo-tree-id369 . -97) (undo-tree-id370 . -96) (undo-tree-id371 . -229) (undo-tree-id372 . -98) (undo-tree-id373 . -97) (undo-tree-id374 . -229) (undo-tree-id375 . -99) (undo-tree-id376 . -98) (undo-tree-id377 . -229) (undo-tree-id378 . -100) (undo-tree-id379 . -99) (undo-tree-id380 . -229) (undo-tree-id381 . -100) (undo-tree-id382 . -100) (undo-tree-id383 . -100) (undo-tree-id384 . -100) (undo-tree-id385 . -229) (undo-tree-id386 . -100) (undo-tree-id387 . -100) (undo-tree-id388 . -229) (undo-tree-id389 . -101) (undo-tree-id390 . -100) (undo-tree-id391 . -229) (undo-tree-id392 . -102) (undo-tree-id393 . -101) (undo-tree-id394 . -229) (undo-tree-id395 . -103) (undo-tree-id396 . -102) (undo-tree-id397 . -229) (undo-tree-id398 . -104) (undo-tree-id399 . -103) (undo-tree-id400 . -229) (undo-tree-id401 . -105) (undo-tree-id402 . -104) (undo-tree-id403 . -229) (undo-tree-id404 . -106) (undo-tree-id405 . -105) (undo-tree-id406 . -229) (undo-tree-id407 . -107) (undo-tree-id408 . -106) (undo-tree-id409 . -229) (undo-tree-id410 . -106) (undo-tree-id411 . -106) (undo-tree-id412 . -106) (undo-tree-id413 . -106) (undo-tree-id414 . -106) (undo-tree-id415 . -106) (undo-tree-id416 . -107) (undo-tree-id417 . -106) (undo-tree-id418 . -106) (undo-tree-id419 . -107) (undo-tree-id420 . -106) (undo-tree-id421 . -106) (undo-tree-id422 . -106) (undo-tree-id423 . -106) (undo-tree-id424 . -107) (undo-tree-id425 . -106) (undo-tree-id426 . -107) (undo-tree-id427 . -107) (undo-tree-id428 . -107) (undo-tree-id429 . -107) (undo-tree-id430 . -107) (undo-tree-id431 . -107) (undo-tree-id432 . -107) (undo-tree-id433 . -107) (undo-tree-id434 . -104) (undo-tree-id435 . -107) (undo-tree-id436 . -103) (undo-tree-id437 . -104) (undo-tree-id438 . -95) (undo-tree-id439 . -103) (undo-tree-id440 . -94) (undo-tree-id441 . -95) (undo-tree-id442 . -93) (undo-tree-id443 . -94) (undo-tree-id444 . -92) (undo-tree-id445 . -93) (undo-tree-id446 . -91) (undo-tree-id447 . -92) (undo-tree-id448 . -90) (undo-tree-id449 . -91) (undo-tree-id450 . -85) (undo-tree-id451 . -90) (undo-tree-id452 . -55) (undo-tree-id453 . -85) (undo-tree-id454 . -53) (undo-tree-id455 . -55) (undo-tree-id456 . -55) (undo-tree-id457 . -53) (undo-tree-id458 . -55) (undo-tree-id459 . -55) (undo-tree-id460 . -55) (undo-tree-id461 . -55) (undo-tree-id462 . -57) (undo-tree-id463 . -55) (undo-tree-id464 . -59) (undo-tree-id465 . -57) (undo-tree-id466 . -63) (undo-tree-id467 . -59) (undo-tree-id468 . -67) (undo-tree-id469 . -63) (undo-tree-id470 . -68) (undo-tree-id471 . -67) (undo-tree-id472 . -75) (undo-tree-id473 . -68) (undo-tree-id474 . -78) (undo-tree-id475 . -75) (undo-tree-id476 . -84) (undo-tree-id477 . -78) (undo-tree-id478 . -85) (undo-tree-id479 . -84) (undo-tree-id480 . -90) (undo-tree-id481 . -85) (undo-tree-id482 . -91) (undo-tree-id483 . -90) (undo-tree-id484 . -92) (undo-tree-id485 . -91) (undo-tree-id486 . -93) (undo-tree-id487 . -92) (undo-tree-id488 . -94) (undo-tree-id489 . -93) (undo-tree-id490 . -95) (undo-tree-id491 . -94) (undo-tree-id492 . -103) (undo-tree-id493 . -95) (undo-tree-id494 . -104) (undo-tree-id495 . -103) (undo-tree-id496 . -107) (undo-tree-id497 . -104) (undo-tree-id498 . -109) (undo-tree-id499 . -107) (undo-tree-id500 . -168) (undo-tree-id501 . -109) (undo-tree-id502 . -167) (undo-tree-id503 . -168) (undo-tree-id504 . -166) (undo-tree-id505 . -167) (undo-tree-id506 . -165) (undo-tree-id507 . -166) (undo-tree-id508 . -111) (undo-tree-id509 . -165) (undo-tree-id510 . -110) (undo-tree-id511 . -111) (undo-tree-id512 . -107) (undo-tree-id513 . -111) (undo-tree-id514 . -164) (undo-tree-id515 . -163) (undo-tree-id516 . -110) (undo-tree-id517 . -229) (undo-tree-id518 . -160) (undo-tree-id519 . -163) (undo-tree-id520 . -156) (undo-tree-id521 . -160) (undo-tree-id522 . -156) (undo-tree-id523 . -156) (undo-tree-id524 . -156) (undo-tree-id525 . -156) (undo-tree-id526 . -156) (undo-tree-id527 . -156) (undo-tree-id528 . -229) (undo-tree-id529 . -156) (undo-tree-id530 . -156) (undo-tree-id531 . -229) (undo-tree-id532 . -156) (undo-tree-id533 . -156) (undo-tree-id534 . -229) (undo-tree-id535 . -157) (undo-tree-id536 . -156) (undo-tree-id537 . -229) (undo-tree-id538 . -158) (undo-tree-id539 . -157) (undo-tree-id540 . -229) (undo-tree-id541 . -159) (undo-tree-id542 . -158) (undo-tree-id543 . -229) (undo-tree-id544 . -158) (undo-tree-id545 . -158) (undo-tree-id546 . -158) (undo-tree-id547 . -158) (undo-tree-id548 . -158) (undo-tree-id549 . -158) (undo-tree-id550 . -159) (undo-tree-id551 . -158) (undo-tree-id552 . -160) (undo-tree-id553 . -159) (undo-tree-id554 . -163) (undo-tree-id555 . -160) (undo-tree-id556 . -168) (undo-tree-id557 . -163) (undo-tree-id558 . -169) (undo-tree-id559 . -168) (undo-tree-id560 . -170) (undo-tree-id561 . -169) (undo-tree-id562 . -171) (undo-tree-id563 . -170) (undo-tree-id564 . -111) (undo-tree-id565 . -172) (undo-tree-id566 . -225) (undo-tree-id567 . -224) (undo-tree-id568 . -171) (undo-tree-id569 . -229) (undo-tree-id570 . -223) (undo-tree-id571 . -224) (undo-tree-id572 . -222) (undo-tree-id573 . -223) (undo-tree-id574 . -221) (undo-tree-id575 . -222) (undo-tree-id576 . -217) (undo-tree-id577 . -221) (undo-tree-id578 . -217) (undo-tree-id579 . -217) (undo-tree-id580 . -217) (undo-tree-id581 . -217) (undo-tree-id582 . -217) (undo-tree-id583 . -217) (undo-tree-id584 . -217) (undo-tree-id585 . -217) (undo-tree-id586 . -229) (undo-tree-id587 . -217) (undo-tree-id588 . -217) (undo-tree-id589 . -229) (undo-tree-id590 . -217) (undo-tree-id591 . -217) (undo-tree-id592 . -229) (undo-tree-id593 . -218) (undo-tree-id594 . -217) (undo-tree-id595 . -229) (undo-tree-id596 . -219) (undo-tree-id597 . -218) (undo-tree-id598 . -229) (undo-tree-id599 . -220) (undo-tree-id600 . -219) (undo-tree-id601 . -229) (undo-tree-id602 . -219) (undo-tree-id603 . -219) (undo-tree-id604 . -219) (undo-tree-id605 . -219) (undo-tree-id606 . -219) (undo-tree-id607 . -219) (undo-tree-id608 . -220) (undo-tree-id609 . -219) (undo-tree-id610 . -221) (undo-tree-id611 . -220) (undo-tree-id612 . -224) (undo-tree-id613 . -221) (undo-tree-id614 . -227) (undo-tree-id615 . -224) (undo-tree-id616 . -227) (undo-tree-id617 . -227) (undo-tree-id618 . -227) (undo-tree-id619 . -227) (undo-tree-id620 . -227) (988 . 1211) (#("|:-----------------------------------------------:|:---------------------------------------------:|-----|-----|
" 0 111 (face (markdown-table-face) fontified nil wrap-prefix "  ") 111 112 (font-lock-multiline t face (markdown-table-face) fontified nil wrap-prefix "  ")) . 988) (undo-tree-id621 . -112) (undo-tree-id622 . -112) (undo-tree-id623 . -112) (undo-tree-id624 . -112) (765 . 988) (#("| Original                                        | 250                                           | 500 | 750 |
" 0 111 (face (markdown-table-face) fontified nil wrap-prefix "  ") 111 112 (font-lock-multiline t face (markdown-table-face) fontified nil wrap-prefix "  ")) . 765) (undo-tree-id625 . -112) (undo-tree-id626 . -112) (undo-tree-id627 . -112) (undo-tree-id628 . -112) (undo-tree-id629 . -112) (undo-tree-id630 . -112) (undo-tree-id631 . -112) (undo-tree-id632 . -112) (undo-tree-id633 . -112) (undo-tree-id634 . -112) (undo-tree-id635 . -112) (undo-tree-id636 . -112) (undo-tree-id637 . -112) (undo-tree-id638 . -112) (undo-tree-id639 . -112) (undo-tree-id640 . -112) (undo-tree-id641 . -112) (undo-tree-id642 . -112) (undo-tree-id643 . -112) (undo-tree-id644 . -112) (undo-tree-id645 . -112) (undo-tree-id646 . -112) (undo-tree-id647 . -112) (undo-tree-id648 . -112) (undo-tree-id649 . -112) (undo-tree-id650 . -112) (undo-tree-id651 . -112) (undo-tree-id652 . -112) (undo-tree-id653 . -112) (undo-tree-id654 . -112) (undo-tree-id655 . -112) (undo-tree-id656 . -112) (undo-tree-id657 . -112) (undo-tree-id658 . -112) (undo-tree-id659 . -112) (undo-tree-id660 . -112) (undo-tree-id661 . -112) (undo-tree-id662 . -112) (undo-tree-id663 . -112) (undo-tree-id664 . -112) (undo-tree-id665 . -112) (undo-tree-id666 . -112) (undo-tree-id667 . -112) (undo-tree-id668 . -112) (undo-tree-id669 . -112) (undo-tree-id670 . -112) (undo-tree-id671 . -112) (undo-tree-id672 . -112) (undo-tree-id673 . -112) (undo-tree-id674 . -112) (undo-tree-id675 . -112) (undo-tree-id676 . -112) (undo-tree-id677 . -112) (undo-tree-id678 . -112) (undo-tree-id679 . -112) (undo-tree-id680 . -112) (undo-tree-id681 . -112) (undo-tree-id682 . -112) (undo-tree-id683 . -112) (undo-tree-id684 . -112) (undo-tree-id685 . -112) (undo-tree-id686 . -112) (undo-tree-id687 . -112) (undo-tree-id688 . -112) (undo-tree-id689 . -112) (undo-tree-id690 . -112) (undo-tree-id691 . -112) (undo-tree-id692 . -112) (undo-tree-id693 . -112) (undo-tree-id694 . -112) (undo-tree-id695 . -112) (undo-tree-id696 . -112) (undo-tree-id697 . -112) (undo-tree-id698 . -112) (undo-tree-id699 . -112) (undo-tree-id700 . -112) (undo-tree-id701 . -112) (undo-tree-id702 . -112) (undo-tree-id703 . -112) (undo-tree-id704 . -112) (undo-tree-id705 . -112) (undo-tree-id706 . -112) (undo-tree-id707 . -112) (undo-tree-id708 . -112) (undo-tree-id709 . -112) (undo-tree-id710 . -112) (undo-tree-id711 . -112) (undo-tree-id712 . -112) (undo-tree-id713 . -112) (undo-tree-id714 . -112) (undo-tree-id715 . -112) (undo-tree-id716 . -112) (undo-tree-id717 . -112) (undo-tree-id718 . -112) (undo-tree-id719 . -112) (undo-tree-id720 . -112) (undo-tree-id721 . -112) (undo-tree-id722 . -112) (undo-tree-id723 . -112) (undo-tree-id724 . -112) (undo-tree-id725 . -112) (undo-tree-id726 . -112) (undo-tree-id727 . -112) (undo-tree-id728 . -112) (undo-tree-id729 . -112) (undo-tree-id730 . -112) (undo-tree-id731 . -112) (undo-tree-id732 . -112) (undo-tree-id733 . -112) (undo-tree-id734 . -112) (undo-tree-id735 . -112) (undo-tree-id736 . -112) (undo-tree-id737 . -112) (undo-tree-id738 . -112) (undo-tree-id739 . -112) (undo-tree-id740 . -112) (undo-tree-id741 . -112) (undo-tree-id742 . -112) (undo-tree-id743 . -112) (undo-tree-id744 . -112) (undo-tree-id745 . -112) (undo-tree-id746 . -112) (undo-tree-id747 . -112) (undo-tree-id748 . -112) (undo-tree-id749 . -112) (undo-tree-id750 . -112) (undo-tree-id751 . -112) (undo-tree-id752 . -112) (undo-tree-id753 . -112) (undo-tree-id754 . -112) (undo-tree-id755 . -112) (undo-tree-id756 . -112) (undo-tree-id757 . -112) (undo-tree-id758 . -112) (undo-tree-id759 . -112) (undo-tree-id760 . -112) (undo-tree-id761 . -112) (undo-tree-id762 . -112) (undo-tree-id763 . -112) (undo-tree-id764 . -112) (undo-tree-id765 . -112) (542 . 765) 993) nil (26429 21493 95677 753000) 0 nil])
([nil nil ((542 . 543) 569 (t 26429 21493 108510 317000)) nil (26429 21507 431803 447000) 0 nil])
([nil nil ((#("campanile.jpg" 0 13 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . 1027) (undo-tree-id2015 . -12) (undo-tree-id2016 . -12) (undo-tree-id2017 . -12) (undo-tree-id2018 . -12) (undo-tree-id2019 . -12) (undo-tree-id2020 . -12) (undo-tree-id2021 . -12) (undo-tree-id2022 . -12) (undo-tree-id2023 . -12) (undo-tree-id2024 . -12) (undo-tree-id2025 . -12) (undo-tree-id2026 . -12) (undo-tree-id2027 . -12) (undo-tree-id2028 . -12) (undo-tree-id2029 . -12) (undo-tree-id2030 . -12) (undo-tree-id2031 . -12) (undo-tree-id2032 . -12) (undo-tree-id2033 . -12) (undo-tree-id2034 . -10) (undo-tree-id2035 . -12) (undo-tree-id2036 . -9) (undo-tree-id2037 . -10) (undo-tree-id2038 . -9) (t 26429 21507 450727 538000)) nil (26429 21538 98136 866000) 0 nil])
([nil nil ((1027 . 1041)) nil (26429 21538 98105 256000) 0 nil])
([nil nil ((876 . 877) (t 26429 21538 119192 13000)) nil (26429 21563 214687 904000) 0 nil])
([nil nil ((932 . 933)) nil (26429 21563 214687 233000) 0 nil])
([nil nil ((934 . 935)) nil (26429 21563 214686 501000) 0 nil])
([nil nil ((990 . 991)) nil (26429 21563 214681 442000) 0 nil])
([nil nil ((#("|                                                    |                                                       |                                                       |                                                       |
" 0 222 (face (markdown-table-face) fontified nil wrap-prefix "  ") 222 223 (font-lock-multiline t face (markdown-table-face) fontified t wrap-prefix "  ")) . 1439) (undo-tree-id2039 . -223) (undo-tree-id2040 . -223) (1215 . 1439) (#("|:--------------------------------------------------:|:-----------------------------------------------------:|:-------------------------------------------------------:|:-------------------------------------------------------:|
" 0 226 (face (markdown-table-face) fontified nil wrap-prefix "  ") 226 227 (font-lock-multiline t face (markdown-table-face) fontified nil wrap-prefix "  ")) . 991) (undo-tree-id2041 . -110) (undo-tree-id2042 . 2) (undo-tree-id2043 . -1) (undo-tree-id2044 . -224) (undo-tree-id2045 . -224) (undo-tree-id2046 . -224) (undo-tree-id2047 . -224) (undo-tree-id2048 . -224) (undo-tree-id2049 . -224) (undo-tree-id2050 . -224) (undo-tree-id2051 . -227) (undo-tree-id2052 . -227) (767 . 991) (#("| Original                                           | 250                                                   | 500                                                   | 750                                                   |
" 0 222 (face (markdown-table-face) wrap-prefix "  " fontified nil) 222 223 (font-lock-multiline t face (markdown-table-face) wrap-prefix "  " fontified nil)) . 767) (undo-tree-id2053 . -1) (543 . 767) 1215 (t 26429 21563 222572 214000)) nil (26429 21566 78526 210000) 0 nil])
([nil nil ((#("|                                                     |                                                       |                                                       |                                                       |
" 0 223 (wrap-prefix "  " face (markdown-table-face) fontified t) 223 224 (wrap-prefix "  " font-lock-multiline t face (markdown-table-face) fontified t)) . 1215) (undo-tree-id2054 . 222) (undo-tree-id2055 . -1) (undo-tree-id2056 . -224) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -224) (undo-tree-id2066 . -1) (undo-tree-id2067 . -224) (undo-tree-id2068 . -224) (undo-tree-id2069 . -1) (undo-tree-id2070 . -224) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) 1216 (t 26429 21566 96615 743000)) nil (26429 21574 974656 827000) 0 nil])
([nil nil ((481 . 488) (#("." 0 1 (wrap-prefix "  " fontified t)) . -481) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) 482 (t 26429 21574 992750 486000)) nil (26429 21598 390560 582000) 0 nil])
([nil nil ((487 . 491) (#(" " 0 1 (face (markdown-line-break-face) wrap-prefix "  " fontified t)) . -487) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) 488) nil (26429 21609 640934 64000) 0 nil] [nil nil ((nil rear-nonsticky nil 1899 . 1900) (nil fontified nil 488 . 1900) (488 . 1900) 487) ((#("<math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\">
  <mtable displaystyle=\"true\">
    <mlabeledtr>
      <mtd id=\"mjx-eqn:2\">
        <mtext>(2)</mtext>
      </mtd>
      <mtd>
        <msub>
          <mi>x</mi>
          <mi>t</mi>
        </msub>
        <mo>=</mo>
        <msqrt>
          <msub>
            <mrow data-mjx-texclass=\"ORD\">
              <mover>
                <mi>&#x3B1;</mi>
                <mo stretchy=\"false\">&#xAF;</mo>
              </mover>
            </mrow>
            <mi>t</mi>
          </msub>
        </msqrt>
        <msub>
          <mi>x</mi>
          <mn>0</mn>
        </msub>
        <mo>+</mo>
        <msqrt>
          <mn>1</mn>
          <mo>&#x2212;</mo>
          <msub>
            <mrow data-mjx-texclass=\"ORD\">
              <mover>
                <mi>&#x3B1;</mi>
                <mo stretchy=\"false\">&#xAF;</mo>
              </mover>
            </mrow>
            <mi>t</mi>
          </msub>
        </msqrt>
        <mi>&#x3F5;</mi>
        <mstyle scriptlevel=\"0\">
          <mspace width=\"1em\"></mspace>
        </mstyle>
        <mtext>where</mtext>
        <mtext>&#xA0;</mtext>
        <mi>&#x3F5;</mi>
        <mo>&#x223C;</mo>
        <mi>N</mi>
        <mo stretchy=\"false\">(</mo>
        <mn>0</mn>
        <mo>,</mo>
        <mn>1</mn>
        <mo stretchy=\"false\">)</mo>
      </mtd>
    </mlabeledtr>
  </mtable>
</math>" 0 1 (wrap-prefix "  " face markdown-html-tag-delimiter-face fontified nil) 1 5 (wrap-prefix "  " face markdown-html-tag-name-face fontified nil) 5 6 (wrap-prefix "  " fontified nil) 6 11 (wrap-prefix "  " face markdown-html-attr-name-face fontified nil) 11 12 (wrap-prefix "  " face markdown-html-tag-delimiter-face fontified nil) 12 48 (wrap-prefix "  " face markdown-html-attr-value-face fontified nil) 48 49 (wrap-prefix "  " fontified nil) 49 56 (wrap-prefix "  " face markdown-html-attr-name-face fontified nil) 56 57 (wrap-prefix "  " face markdown-html-tag-delimiter-face fontified nil) 57 64 (wrap-prefix "  " face markdown-html-attr-value-face fontified nil) 64 65 (wrap-prefix "  " face markdown-html-tag-delimiter-face fontified nil) 65 66 (wrap-prefix "  " fontified nil) 66 68 (wrap-prefix "    " fontified nil) 68 69 (wrap-prefix "    " face markdown-html-tag-delimiter-face fontified nil) 69 75 (wrap-prefix "    " face markdown-html-tag-name-face fontified nil) 75 76 (wrap-prefix "    " fontified nil) 76 88 (wrap-prefix "    " face markdown-html-attr-name-face fontified nil) 88 89 (wrap-prefix "    " face markdown-html-tag-delimiter-face fontified nil) 89 95 (wrap-prefix "    " face markdown-html-attr-value-face fontified nil) 95 96 (wrap-prefix "    " face markdown-html-tag-delimiter-face fontified nil) 96 97 (wrap-prefix "    " fontified nil) 97 101 (wrap-prefix "      " fontified nil) 101 102 (wrap-prefix "      " face markdown-html-tag-delimiter-face fontified nil) 102 112 (wrap-prefix "      " face markdown-html-tag-name-face fontified nil) 112 113 (wrap-prefix "      " face markdown-html-tag-delimiter-face fontified nil) 113 114 (wrap-prefix "      " fontified nil) 114 120 (wrap-prefix "        " fontified nil) 120 121 (wrap-prefix "        " face markdown-html-tag-delimiter-face fontified nil) 121 124 (wrap-prefix "        " face markdown-html-tag-name-face fontified nil) 124 125 (wrap-prefix "        " fontified nil) 125 127 (wrap-prefix "        " face markdown-html-attr-name-face fontified nil) 127 128 (wrap-prefix "        " face markdown-html-tag-delimiter-face fontified nil) 128 139 (wrap-prefix "        " face markdown-html-attr-value-face fontified nil) 139 140 (wrap-prefix "        " face markdown-html-tag-delimiter-face fontified nil) 140 141 (wrap-prefix "        " fontified nil) 141 149 (wrap-prefix "          " fontified nil) 149 150 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 150 155 (wrap-prefix "          " face markdown-html-tag-name-face fontified nil) 155 156 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 156 159 (wrap-prefix "          " fontified nil) 159 161 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 161 166 (wrap-prefix "          " face markdown-html-tag-name-face fontified nil) 166 167 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 167 168 (wrap-prefix "          " fontified nil) 168 174 (wrap-prefix "        " fontified nil) 174 176 (wrap-prefix "        " face markdown-html-tag-delimiter-face fontified nil) 176 179 (wrap-prefix "        " face markdown-html-tag-name-face fontified nil) 179 180 (wrap-prefix "        " face markdown-html-tag-delimiter-face fontified nil) 180 181 (wrap-prefix "        " fontified nil) 181 187 (wrap-prefix "        " fontified nil) 187 188 (wrap-prefix "        " face markdown-html-tag-delimiter-face fontified nil) 188 191 (wrap-prefix "        " face markdown-html-tag-name-face fontified nil) 191 192 (wrap-prefix "        " face markdown-html-tag-delimiter-face fontified nil) 192 193 (wrap-prefix "        " fontified nil) 193 201 (wrap-prefix "          " fontified nil) 201 202 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 202 206 (wrap-prefix "          " face markdown-html-tag-name-face fontified nil) 206 207 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 207 208 (wrap-prefix "          " fontified nil) 208 218 (wrap-prefix "            " fontified nil) 218 219 (wrap-prefix "            " face markdown-html-tag-delimiter-face fontified nil) 219 221 (wrap-prefix "            " face markdown-html-tag-name-face fontified nil) 221 222 (wrap-prefix "            " face markdown-html-tag-delimiter-face fontified nil) 222 223 (wrap-prefix "            " fontified nil) 223 225 (wrap-prefix "            " face markdown-html-tag-delimiter-face fontified nil) 225 227 (wrap-prefix "            " face markdown-html-tag-name-face fontified nil) 227 228 (wrap-prefix "            " face markdown-html-tag-delimiter-face fontified nil) 228 229 (wrap-prefix "            " fontified nil) 229 239 (wrap-prefix "            " fontified nil) 239 240 (wrap-prefix "            " face markdown-html-tag-delimiter-face fontified nil) 240 242 (wrap-prefix "            " face markdown-html-tag-name-face fontified nil) 242 243 (wrap-prefix "            " face markdown-html-tag-delimiter-face fontified nil) 243 244 (wrap-prefix "            " fontified nil) 244 246 (wrap-prefix "            " face markdown-html-tag-delimiter-face fontified nil) 246 248 (wrap-prefix "            " face markdown-html-tag-name-face fontified nil) 248 249 (wrap-prefix "            " face markdown-html-tag-delimiter-face fontified nil) 249 250 (wrap-prefix "            " fontified nil) 250 258 (wrap-prefix "          " fontified nil) 258 260 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 260 264 (wrap-prefix "          " face markdown-html-tag-name-face fontified nil) 264 265 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 265 266 (wrap-prefix "          " fontified nil) 266 274 (wrap-prefix "          " fontified nil) 274 275 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 275 277 (wrap-prefix "          " face markdown-html-tag-name-face fontified nil) 277 278 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 278 279 (wrap-prefix "          " fontified nil) 279 281 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 281 283 (wrap-prefix "          " face markdown-html-tag-name-face fontified nil) 283 284 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 284 285 (wrap-prefix "          " fontified nil) 285 293 (wrap-prefix "          " fontified nil) 293 294 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 294 299 (wrap-prefix "          " face markdown-html-tag-name-face fontified nil) 299 300 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 300 301 (wrap-prefix "          " fontified nil) 301 311 (wrap-prefix "            " fontified nil) 311 312 (wrap-prefix "            " face markdown-html-tag-delimiter-face fontified nil) 312 316 (wrap-prefix "            " face markdown-html-tag-name-face fontified nil) 316 317 (wrap-prefix "            " face markdown-html-tag-delimiter-face fontified nil) 317 318 (wrap-prefix "            " fontified nil) 318 330 (wrap-prefix "              " fontified nil) 330 331 (wrap-prefix "              " face markdown-html-tag-delimiter-face fontified nil) 331 335 (wrap-prefix "              " face markdown-html-tag-name-face fontified nil) 335 336 (wrap-prefix "              " fontified nil) 336 353 (wrap-prefix "              " face markdown-html-attr-name-face fontified nil) 353 354 (wrap-prefix "              " face markdown-html-tag-delimiter-face fontified nil) 354 359 (wrap-prefix "              " face markdown-html-attr-value-face fontified nil) 359 360 (wrap-prefix "              " face markdown-html-tag-delimiter-face fontified nil) 360 361 (wrap-prefix "              " fontified nil) 361 375 (wrap-prefix "                " fontified nil) 375 376 (wrap-prefix "                " face markdown-html-tag-delimiter-face fontified nil) 376 381 (wrap-prefix "                " face markdown-html-tag-name-face fontified nil) 381 382 (wrap-prefix "                " face markdown-html-tag-delimiter-face fontified nil) 382 383 (wrap-prefix "                " fontified nil) 383 399 (wrap-prefix "                  " fontified nil) 399 400 (wrap-prefix "                  " face markdown-html-tag-delimiter-face fontified nil) 400 402 (wrap-prefix "                  " face markdown-html-tag-name-face fontified nil) 402 403 (wrap-prefix "                  " face markdown-html-tag-delimiter-face fontified nil) 403 410 (wrap-prefix "                  " face markdown-html-entity-face fontified nil) 410 412 (wrap-prefix "                  " face markdown-html-tag-delimiter-face fontified nil) 412 414 (wrap-prefix "                  " face markdown-html-tag-name-face fontified nil) 414 415 (wrap-prefix "                  " face markdown-html-tag-delimiter-face fontified nil) 415 416 (wrap-prefix "                  " fontified nil) 416 432 (wrap-prefix "                  " fontified nil) 432 433 (wrap-prefix "                  " face markdown-html-tag-delimiter-face fontified nil) 433 435 (wrap-prefix "                  " face markdown-html-tag-name-face fontified nil) 435 436 (wrap-prefix "                  " fontified nil) 436 444 (wrap-prefix "                  " face markdown-html-attr-name-face fontified nil) 444 445 (wrap-prefix "                  " face markdown-html-tag-delimiter-face fontified nil) 445 452 (wrap-prefix "                  " face markdown-html-attr-value-face fontified nil) 452 453 (wrap-prefix "                  " face markdown-html-tag-delimiter-face fontified nil) 453 459 (wrap-prefix "                  " face markdown-html-entity-face fontified nil) 459 461 (wrap-prefix "                  " face markdown-html-tag-delimiter-face fontified nil) 461 463 (wrap-prefix "                  " face markdown-html-tag-name-face fontified nil) 463 464 (wrap-prefix "                  " face markdown-html-tag-delimiter-face fontified nil) 464 465 (wrap-prefix "                  " fontified nil) 465 479 (wrap-prefix "                " fontified nil) 479 481 (wrap-prefix "                " face markdown-html-tag-delimiter-face fontified nil) 481 486 (wrap-prefix "                " face markdown-html-tag-name-face fontified nil) 486 487 (wrap-prefix "                " face markdown-html-tag-delimiter-face fontified nil) 487 488 (wrap-prefix "                " fontified nil) 488 500 (wrap-prefix "              " fontified nil) 500 502 (wrap-prefix "              " face markdown-html-tag-delimiter-face fontified nil) 502 506 (wrap-prefix "              " face markdown-html-tag-name-face fontified nil) 506 507 (wrap-prefix "              " face markdown-html-tag-delimiter-face fontified nil) 507 508 (wrap-prefix "              " fontified nil) 508 520 (wrap-prefix "              " fontified nil) 520 521 (wrap-prefix "              " face markdown-html-tag-delimiter-face fontified nil) 521 523 (wrap-prefix "              " face markdown-html-tag-name-face fontified nil) 523 524 (wrap-prefix "              " face markdown-html-tag-delimiter-face fontified nil) 524 525 (wrap-prefix "              " fontified nil) 525 527 (wrap-prefix "              " face markdown-html-tag-delimiter-face fontified nil) 527 529 (wrap-prefix "              " face markdown-html-tag-name-face fontified nil) 529 530 (wrap-prefix "              " face markdown-html-tag-delimiter-face fontified nil) 530 531 (wrap-prefix "              " fontified nil) 531 541 (wrap-prefix "            " fontified nil) 541 543 (wrap-prefix "            " face markdown-html-tag-delimiter-face fontified nil) 543 547 (wrap-prefix "            " face markdown-html-tag-name-face fontified nil) 547 548 (wrap-prefix "            " face markdown-html-tag-delimiter-face fontified nil) 548 549 (wrap-prefix "            " fontified nil) 549 557 (wrap-prefix "          " fontified nil) 557 559 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 559 564 (wrap-prefix "          " face markdown-html-tag-name-face fontified nil) 564 565 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 565 566 (wrap-prefix "          " fontified nil) 566 574 (wrap-prefix "          " fontified nil) 574 575 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 575 579 (wrap-prefix "          " face markdown-html-tag-name-face fontified nil) 579 580 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 580 581 (wrap-prefix "          " fontified nil) 581 591 (wrap-prefix "            " fontified nil) 591 592 (wrap-prefix "            " face markdown-html-tag-delimiter-face fontified nil) 592 594 (wrap-prefix "            " face markdown-html-tag-name-face fontified nil) 594 595 (wrap-prefix "            " face markdown-html-tag-delimiter-face fontified nil) 595 596 (wrap-prefix "            " fontified nil) 596 598 (wrap-prefix "            " face markdown-html-tag-delimiter-face fontified nil) 598 600 (wrap-prefix "            " face markdown-html-tag-name-face fontified nil) 600 601 (wrap-prefix "            " face markdown-html-tag-delimiter-face fontified nil) 601 602 (wrap-prefix "            " fontified nil) 602 612 (wrap-prefix "            " fontified nil) 612 613 (wrap-prefix "            " face markdown-html-tag-delimiter-face fontified nil) 613 615 (wrap-prefix "            " face markdown-html-tag-name-face fontified nil) 615 616 (wrap-prefix "            " face markdown-html-tag-delimiter-face fontified nil) 616 617 (wrap-prefix "            " fontified nil) 617 619 (wrap-prefix "            " face markdown-html-tag-delimiter-face fontified nil) 619 621 (wrap-prefix "            " face markdown-html-tag-name-face fontified nil) 621 622 (wrap-prefix "            " face markdown-html-tag-delimiter-face fontified nil) 622 623 (wrap-prefix "            " fontified nil) 623 631 (wrap-prefix "          " fontified nil) 631 633 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 633 637 (wrap-prefix "          " face markdown-html-tag-name-face fontified nil) 637 638 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 638 639 (wrap-prefix "          " fontified nil) 639 647 (wrap-prefix "          " fontified nil) 647 648 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 648 650 (wrap-prefix "          " face markdown-html-tag-name-face fontified nil) 650 651 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 651 652 (wrap-prefix "          " fontified nil) 652 654 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 654 656 (wrap-prefix "          " face markdown-html-tag-name-face fontified nil) 656 657 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 657 658 (wrap-prefix "          " fontified nil) 658 666 (wrap-prefix "          " fontified nil) 666 667 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 667 672 (wrap-prefix "          " face markdown-html-tag-name-face fontified nil) 672 673 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 673 674 (wrap-prefix "          " fontified nil) 674 684 (wrap-prefix "            " fontified nil) 684 685 (wrap-prefix "            " face markdown-html-tag-delimiter-face fontified nil) 685 687 (wrap-prefix "            " face markdown-html-tag-name-face fontified nil) 687 688 (wrap-prefix "            " face markdown-html-tag-delimiter-face fontified nil) 688 689 (wrap-prefix "            " fontified nil) 689 691 (wrap-prefix "            " face markdown-html-tag-delimiter-face fontified nil) 691 693 (wrap-prefix "            " face markdown-html-tag-name-face fontified nil) 693 694 (wrap-prefix "            " face markdown-html-tag-delimiter-face fontified nil) 694 695 (wrap-prefix "            " fontified nil) 695 705 (wrap-prefix "            " fontified nil) 705 706 (wrap-prefix "            " face markdown-html-tag-delimiter-face fontified nil) 706 708 (wrap-prefix "            " face markdown-html-tag-name-face fontified nil) 708 709 (wrap-prefix "            " face markdown-html-tag-delimiter-face fontified nil) 709 717 (wrap-prefix "            " face markdown-html-entity-face fontified nil) 717 719 (wrap-prefix "            " face markdown-html-tag-delimiter-face fontified nil) 719 721 (wrap-prefix "            " face markdown-html-tag-name-face fontified nil) 721 722 (wrap-prefix "            " face markdown-html-tag-delimiter-face fontified nil) 722 723 (wrap-prefix "            " fontified nil) 723 733 (wrap-prefix "            " fontified nil) 733 734 (wrap-prefix "            " face markdown-html-tag-delimiter-face fontified nil) 734 738 (wrap-prefix "            " face markdown-html-tag-name-face fontified nil) 738 739 (wrap-prefix "            " face markdown-html-tag-delimiter-face fontified nil) 739 740 (wrap-prefix "            " fontified nil) 740 752 (wrap-prefix "              " fontified nil) 752 753 (wrap-prefix "              " face markdown-html-tag-delimiter-face fontified nil) 753 757 (wrap-prefix "              " face markdown-html-tag-name-face fontified nil) 757 758 (wrap-prefix "              " fontified nil) 758 775 (wrap-prefix "              " face markdown-html-attr-name-face fontified nil) 775 776 (wrap-prefix "              " face markdown-html-tag-delimiter-face fontified nil) 776 781 (wrap-prefix "              " face markdown-html-attr-value-face fontified nil) 781 782 (wrap-prefix "              " face markdown-html-tag-delimiter-face fontified nil) 782 783 (wrap-prefix "              " fontified nil) 783 797 (wrap-prefix "                " fontified nil) 797 798 (wrap-prefix "                " face markdown-html-tag-delimiter-face fontified nil) 798 803 (wrap-prefix "                " face markdown-html-tag-name-face fontified nil) 803 804 (wrap-prefix "                " face markdown-html-tag-delimiter-face fontified nil) 804 805 (wrap-prefix "                " fontified nil) 805 821 (wrap-prefix "                  " fontified nil) 821 822 (wrap-prefix "                  " face markdown-html-tag-delimiter-face fontified nil) 822 824 (wrap-prefix "                  " face markdown-html-tag-name-face fontified nil) 824 825 (wrap-prefix "                  " face markdown-html-tag-delimiter-face fontified nil) 825 832 (wrap-prefix "                  " face markdown-html-entity-face fontified nil) 832 834 (wrap-prefix "                  " face markdown-html-tag-delimiter-face fontified nil) 834 836 (wrap-prefix "                  " face markdown-html-tag-name-face fontified nil) 836 837 (wrap-prefix "                  " face markdown-html-tag-delimiter-face fontified nil) 837 838 (wrap-prefix "                  " fontified nil) 838 854 (wrap-prefix "                  " fontified nil) 854 855 (wrap-prefix "                  " face markdown-html-tag-delimiter-face fontified nil) 855 857 (wrap-prefix "                  " face markdown-html-tag-name-face fontified nil) 857 858 (wrap-prefix "                  " fontified nil) 858 866 (wrap-prefix "                  " face markdown-html-attr-name-face fontified nil) 866 867 (wrap-prefix "                  " face markdown-html-tag-delimiter-face fontified nil) 867 874 (wrap-prefix "                  " face markdown-html-attr-value-face fontified nil) 874 875 (wrap-prefix "                  " face markdown-html-tag-delimiter-face fontified nil) 875 881 (wrap-prefix "                  " face markdown-html-entity-face fontified nil) 881 883 (wrap-prefix "                  " face markdown-html-tag-delimiter-face fontified nil) 883 885 (wrap-prefix "                  " face markdown-html-tag-name-face fontified nil) 885 886 (wrap-prefix "                  " face markdown-html-tag-delimiter-face fontified nil) 886 887 (wrap-prefix "                  " fontified nil) 887 901 (wrap-prefix "                " fontified nil) 901 903 (wrap-prefix "                " face markdown-html-tag-delimiter-face fontified nil) 903 908 (wrap-prefix "                " face markdown-html-tag-name-face fontified nil) 908 909 (wrap-prefix "                " face markdown-html-tag-delimiter-face fontified nil) 909 910 (wrap-prefix "                " fontified nil) 910 922 (wrap-prefix "              " fontified nil) 922 924 (wrap-prefix "              " face markdown-html-tag-delimiter-face fontified nil) 924 928 (wrap-prefix "              " face markdown-html-tag-name-face fontified nil) 928 929 (wrap-prefix "              " face markdown-html-tag-delimiter-face fontified nil) 929 930 (wrap-prefix "              " fontified nil) 930 942 (wrap-prefix "              " fontified nil) 942 943 (wrap-prefix "              " face markdown-html-tag-delimiter-face fontified nil) 943 945 (wrap-prefix "              " face markdown-html-tag-name-face fontified nil) 945 946 (wrap-prefix "              " face markdown-html-tag-delimiter-face fontified nil) 946 947 (wrap-prefix "              " fontified nil) 947 949 (wrap-prefix "              " face markdown-html-tag-delimiter-face fontified nil) 949 951 (wrap-prefix "              " face markdown-html-tag-name-face fontified nil) 951 952 (wrap-prefix "              " face markdown-html-tag-delimiter-face fontified nil) 952 953 (wrap-prefix "              " fontified nil) 953 963 (wrap-prefix "            " fontified nil) 963 965 (wrap-prefix "            " face markdown-html-tag-delimiter-face fontified nil) 965 969 (wrap-prefix "            " face markdown-html-tag-name-face fontified nil) 969 970 (wrap-prefix "            " face markdown-html-tag-delimiter-face fontified nil) 970 971 (wrap-prefix "            " fontified nil) 971 979 (wrap-prefix "          " fontified nil) 979 981 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 981 986 (wrap-prefix "          " face markdown-html-tag-name-face fontified nil) 986 987 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 987 988 (wrap-prefix "          " fontified nil) 988 996 (wrap-prefix "          " fontified nil) 996 997 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 997 999 (wrap-prefix "          " face markdown-html-tag-name-face fontified nil) 999 1000 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1000 1007 (wrap-prefix "          " face markdown-html-entity-face fontified nil) 1007 1009 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1009 1011 (wrap-prefix "          " face markdown-html-tag-name-face fontified nil) 1011 1012 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1012 1013 (wrap-prefix "          " fontified nil) 1013 1021 (wrap-prefix "          " fontified nil) 1021 1022 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1022 1028 (wrap-prefix "          " face markdown-html-tag-name-face fontified nil) 1028 1029 (wrap-prefix "          " fontified nil) 1029 1040 (wrap-prefix "          " face markdown-html-attr-name-face fontified nil) 1040 1041 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1041 1044 (wrap-prefix "          " face markdown-html-attr-value-face fontified nil) 1044 1045 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1045 1046 (wrap-prefix "          " fontified nil) 1046 1056 (wrap-prefix "            " fontified nil) 1056 1057 (wrap-prefix "            " face markdown-html-tag-delimiter-face fontified nil) 1057 1063 (wrap-prefix "            " face markdown-html-tag-name-face fontified nil) 1063 1064 (wrap-prefix "            " fontified nil) 1064 1069 (wrap-prefix "            " face markdown-html-attr-name-face fontified nil) 1069 1070 (wrap-prefix "            " face markdown-html-tag-delimiter-face fontified nil) 1070 1075 (wrap-prefix "            " face markdown-html-attr-value-face fontified nil) 1075 1076 (wrap-prefix "            " face markdown-html-tag-delimiter-face fontified nil) 1076 1078 (wrap-prefix "            " face markdown-html-tag-delimiter-face fontified nil) 1078 1084 (wrap-prefix "            " face markdown-html-tag-name-face fontified nil) 1084 1085 (wrap-prefix "            " face markdown-html-tag-delimiter-face fontified nil) 1085 1086 (wrap-prefix "            " fontified nil) 1086 1094 (wrap-prefix "          " fontified nil) 1094 1096 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1096 1102 (wrap-prefix "          " face markdown-html-tag-name-face fontified nil) 1102 1103 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1103 1104 (wrap-prefix "          " fontified nil) 1104 1112 (wrap-prefix "          " fontified nil) 1112 1113 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1113 1118 (wrap-prefix "          " face markdown-html-tag-name-face fontified nil) 1118 1119 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1119 1124 (wrap-prefix "          " fontified nil) 1124 1126 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1126 1131 (wrap-prefix "          " face markdown-html-tag-name-face fontified nil) 1131 1132 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1132 1133 (wrap-prefix "          " fontified nil) 1133 1141 (wrap-prefix "          " fontified nil) 1141 1142 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1142 1147 (wrap-prefix "          " face markdown-html-tag-name-face fontified nil) 1147 1148 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1148 1154 (wrap-prefix "          " face markdown-html-entity-face fontified nil) 1154 1156 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1156 1161 (wrap-prefix "          " face markdown-html-tag-name-face fontified nil) 1161 1162 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1162 1163 (wrap-prefix "          " fontified nil) 1163 1171 (wrap-prefix "          " fontified nil) 1171 1172 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1172 1174 (wrap-prefix "          " face markdown-html-tag-name-face fontified nil) 1174 1175 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1175 1182 (wrap-prefix "          " face markdown-html-entity-face fontified nil) 1182 1184 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1184 1186 (wrap-prefix "          " face markdown-html-tag-name-face fontified nil) 1186 1187 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1187 1188 (wrap-prefix "          " fontified nil) 1188 1196 (wrap-prefix "          " fontified nil) 1196 1197 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1197 1199 (wrap-prefix "          " face markdown-html-tag-name-face fontified nil) 1199 1200 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1200 1208 (wrap-prefix "          " face markdown-html-entity-face fontified nil) 1208 1210 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1210 1212 (wrap-prefix "          " face markdown-html-tag-name-face fontified nil) 1212 1213 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1213 1214 (wrap-prefix "          " fontified nil) 1214 1222 (wrap-prefix "          " fontified nil) 1222 1223 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1223 1225 (wrap-prefix "          " face markdown-html-tag-name-face fontified nil) 1225 1226 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1226 1227 (wrap-prefix "          " fontified nil) 1227 1229 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1229 1231 (wrap-prefix "          " face markdown-html-tag-name-face fontified nil) 1231 1232 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1232 1233 (wrap-prefix "          " fontified nil) 1233 1241 (wrap-prefix "          " fontified nil) 1241 1242 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1242 1244 (wrap-prefix "          " face markdown-html-tag-name-face fontified nil) 1244 1245 (wrap-prefix "          " fontified nil) 1245 1253 (wrap-prefix "          " face markdown-html-attr-name-face fontified nil) 1253 1254 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1254 1261 (wrap-prefix "          " face markdown-html-attr-value-face fontified nil) 1261 1262 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1262 1263 (wrap-prefix "          " fontified nil) 1263 1265 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1265 1267 (wrap-prefix "          " face markdown-html-tag-name-face fontified nil) 1267 1268 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1268 1269 (wrap-prefix "          " fontified nil) 1269 1277 (wrap-prefix "          " fontified nil) 1277 1278 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1278 1280 (wrap-prefix "          " face markdown-html-tag-name-face fontified nil) 1280 1281 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1281 1282 (wrap-prefix "          " fontified nil) 1282 1284 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1284 1286 (wrap-prefix "          " face markdown-html-tag-name-face fontified nil) 1286 1287 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1287 1288 (wrap-prefix "          " fontified nil) 1288 1296 (wrap-prefix "          " fontified nil) 1296 1297 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1297 1299 (wrap-prefix "          " face markdown-html-tag-name-face fontified nil) 1299 1300 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1300 1301 (wrap-prefix "          " fontified nil) 1301 1303 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1303 1305 (wrap-prefix "          " face markdown-html-tag-name-face fontified nil) 1305 1306 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1306 1307 (wrap-prefix "          " fontified nil) 1307 1315 (wrap-prefix "          " fontified nil) 1315 1316 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1316 1318 (wrap-prefix "          " face markdown-html-tag-name-face fontified nil) 1318 1319 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1319 1320 (wrap-prefix "          " fontified nil) 1320 1322 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1322 1324 (wrap-prefix "          " face markdown-html-tag-name-face fontified nil) 1324 1325 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1325 1326 (wrap-prefix "          " fontified nil) 1326 1334 (wrap-prefix "          " fontified nil) 1334 1335 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1335 1337 (wrap-prefix "          " face markdown-html-tag-name-face fontified nil) 1337 1338 (wrap-prefix "          " fontified nil) 1338 1346 (wrap-prefix "          " face markdown-html-attr-name-face fontified nil) 1346 1347 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1347 1354 (wrap-prefix "          " face markdown-html-attr-value-face fontified nil) 1354 1355 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1355 1356 (wrap-prefix "          " fontified nil) 1356 1358 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1358 1360 (wrap-prefix "          " face markdown-html-tag-name-face fontified nil) 1360 1361 (wrap-prefix "          " face markdown-html-tag-delimiter-face fontified nil) 1361 1362 (wrap-prefix "          " fontified nil) 1362 1368 (wrap-prefix "        " fontified nil) 1368 1370 (wrap-prefix "        " face markdown-html-tag-delimiter-face fontified nil) 1370 1373 (wrap-prefix "        " face markdown-html-tag-name-face fontified nil) 1373 1374 (wrap-prefix "        " face markdown-html-tag-delimiter-face fontified nil) 1374 1375 (wrap-prefix "        " fontified nil) 1375 1379 (wrap-prefix "      " fontified nil) 1379 1381 (wrap-prefix "      " face markdown-html-tag-delimiter-face fontified nil) 1381 1391 (wrap-prefix "      " face markdown-html-tag-name-face fontified nil) 1391 1392 (wrap-prefix "      " face markdown-html-tag-delimiter-face fontified nil) 1392 1393 (wrap-prefix "      " fontified nil) 1393 1395 (wrap-prefix "    " fontified nil) 1395 1397 (wrap-prefix "    " face markdown-html-tag-delimiter-face fontified nil) 1397 1403 (wrap-prefix "    " face markdown-html-tag-name-face fontified nil) 1403 1404 (wrap-prefix "    " face markdown-html-tag-delimiter-face fontified nil) 1404 1405 (wrap-prefix "    " fontified nil) 1405 1407 (face markdown-html-tag-delimiter-face fontified nil wrap-prefix "  ") 1407 1411 (face markdown-html-tag-name-face fontified nil wrap-prefix "  ") 1411 1412 (rear-nonsticky nil face markdown-html-tag-delimiter-face fontified nil wrap-prefix "  ")) . 488) (undo-tree-id2084 . -1411) (undo-tree-id2085 . -930) (undo-tree-id2086 . -1411) (undo-tree-id2087 . -1405) (undo-tree-id2088 . -1411) (undo-tree-id2089 . -1411) (nil rear-nonsticky nil 1899 . 1900)) (26429 21598 387896 65000) 0 nil])
([nil nil ((nil rear-nonsticky nil 613 . 614) (nil fontified nil 490 . 614) (490 . 614) 489) nil (26429 21609 640909 908000) 0 nil])
nil
([nil nil ((489 . 490) (#("*" 0 1 (wrap-prefix "  " fontified t)) . -489) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) 490 (489 . 490) (#("*" 0 1 (wrap-prefix "  " fontified t)) . -489) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) 490 (489 . 490) (t 26429 21609 656275 471000)) nil (26429 21651 964639 726000) 0 nil])
([nil nil ((616 . 617)) nil (26429 21651 964620 8000) 0 nil])
([nil nil ((489 . 491)) nil (26429 21651 964613 426000) 0 nil])
([nil nil ((#("\\tag{2}" 0 1 (fontified t face (markdown-markup-face) invisible markdown-markup wrap-prefix "            ") 1 6 (fontified t wrap-prefix "            ") 6 7 (fontified t wrap-prefix "            ")) . 610) (undo-tree-id2109 . -6) (undo-tree-id2110 . -6) (undo-tree-id2111 . -6) (undo-tree-id2112 . -3) (undo-tree-id2113 . -4) (undo-tree-id2114 . -3) (undo-tree-id2115 . -5) (undo-tree-id2116 . -4) (undo-tree-id2117 . -6) (undo-tree-id2118 . -5) (undo-tree-id2119 . -6) (undo-tree-id2120 . -6) (undo-tree-id2121 . -6) (undo-tree-id2122 . -6) (undo-tree-id2123 . -5) (undo-tree-id2124 . -6) (undo-tree-id2125 . -4) (undo-tree-id2126 . -5) (undo-tree-id2127 . -1) (undo-tree-id2128 . -4) (undo-tree-id2129 . -1) (t 26429 21651 982916 521000)) nil (26429 21659 256248 828000) 0 nil])
([nil nil ((1362 . 1372) (#("d" 0 1 (font-lock-multiline t face markdown-header-face-1 markdown-heading-1-atx (1346 1363 nil nil nil nil nil nil 1346 1348 1348 1363 1363 1363 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (1346 1363 nil nil nil nil nil nil 1346 1348 1348 1363 1363 1363 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ")) . -1362) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) 1363 (1353 . 1363) (#("o" 0 1 (font-lock-multiline t face markdown-header-face-1 markdown-heading-1-atx (1346 1354 nil nil nil nil nil nil 1346 1348 1348 1354 1354 1354 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (1346 1354 nil nil nil nil nil nil 1346 1348 1348 1354 1354 1354 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ")) . -1353) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) 1354 (1346 . 1354) (t 26429 21659 291027 204000)) nil (26429 22543 349942 965000) 0 nil])
([nil nil ((1390 . 1408) (#("let's" 0 5 (wrap-prefix "  " fontified t)) . -1390) (undo-tree-id2398 . -5) (undo-tree-id2399 . -1) (undo-tree-id2400 . -2) (undo-tree-id2401 . -1) (undo-tree-id2402 . -3) (undo-tree-id2403 . -2) (undo-tree-id2404 . -4) (undo-tree-id2405 . -3) (undo-tree-id2406 . -5) (undo-tree-id2407 . -4) (undo-tree-id2408 . -5) 1395 (1374 . 1395) (1373 . 1374) (1372 . 1373) 1371) nil (26429 22543 349937 996000) 0 nil])
([nil nil ((1404 . 1405) (1399 . 1404) (#("a" 0 1 (wrap-prefix "  " fontified t)) . -1399) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (#("t" 0 1 (wrap-prefix "  " fontified t)) . -1400) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) 1401 (1388 . 1401) (#("s" 0 1 (wrap-prefix "  " fontified t)) . -1388) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) 1389 (1388 . 1389)) nil (26429 22543 349932 926000) 0 nil])
([nil nil ((1483 . 1485) (1467 . 1483) (1446 . 1467) (1425 . 1446) (#("classical " 0 10 (wrap-prefix "  " fontified t)) . -1425) (undo-tree-id2314 . -10) (undo-tree-id2315 . -1) (undo-tree-id2316 . -2) (undo-tree-id2317 . -1) (undo-tree-id2318 . -3) (undo-tree-id2319 . -2) (undo-tree-id2320 . -4) (undo-tree-id2321 . -3) (undo-tree-id2322 . -5) (undo-tree-id2323 . -4) (undo-tree-id2324 . -6) (undo-tree-id2325 . -5) (undo-tree-id2326 . -7) (undo-tree-id2327 . -6) (undo-tree-id2328 . -8) (undo-tree-id2329 . -7) (undo-tree-id2330 . -9) (undo-tree-id2331 . -8) (undo-tree-id2332 . -10) (undo-tree-id2333 . -9) (undo-tree-id2334 . -10) (undo-tree-id2335 . -10) (undo-tree-id2336 . -10) (undo-tree-id2337 . -10) (undo-tree-id2338 . -10) (undo-tree-id2339 . -10) (undo-tree-id2340 . -10) (undo-tree-id2341 . -10) (undo-tree-id2342 . -10) (undo-tree-id2343 . -10) (undo-tree-id2344 . -10) (undo-tree-id2345 . -10) (undo-tree-id2346 . -10) (undo-tree-id2347 . -10) (undo-tree-id2348 . -10) (undo-tree-id2349 . -10) (undo-tree-id2350 . -10) (undo-tree-id2351 . -10) (undo-tree-id2352 . -10) (undo-tree-id2353 . -10) (undo-tree-id2354 . -10) (undo-tree-id2355 . -10) (undo-tree-id2356 . -10) (undo-tree-id2357 . -10) (undo-tree-id2358 . -10) (undo-tree-id2359 . -10) 1435 (#("denoising " 0 10 (wrap-prefix "  " fontified t)) . -1435) (undo-tree-id2360 . -10) (undo-tree-id2361 . -1) (undo-tree-id2362 . -2) (undo-tree-id2363 . -1) (undo-tree-id2364 . -3) (undo-tree-id2365 . -2) (undo-tree-id2366 . -4) (undo-tree-id2367 . -3) (undo-tree-id2368 . -5) (undo-tree-id2369 . -4) (undo-tree-id2370 . -6) (undo-tree-id2371 . -5) (undo-tree-id2372 . -7) (undo-tree-id2373 . -6) (undo-tree-id2374 . -8) (undo-tree-id2375 . -7) (undo-tree-id2376 . -9) (undo-tree-id2377 . -8) (undo-tree-id2378 . -9) (undo-tree-id2379 . -9) (undo-tree-id2380 . -10) (undo-tree-id2381 . -9) (undo-tree-id2382 . -10) 1445 (1425 . 1445)) nil (26429 22543 349923 668000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2157 . 2158) (nil fontified nil 1485 . 2158) (1485 . 2158)) nil (26429 22543 349826 494000) 0 nil])
([nil nil ((#("|" 0 1 (face (markdown-table-face) wrap-prefix "  " fontified t)) . -1485) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (#(" " 0 1 (face (markdown-table-face) wrap-prefix "  " fontified t)) . -1486) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) 1487 (#("Original                                           " 0 51 (face (markdown-table-face) wrap-prefix "  " fontified t)) . -1487) (undo-tree-id2287 . -49) (undo-tree-id2288 . -51) (undo-tree-id2289 . -49) (undo-tree-id2290 . -49) (undo-tree-id2291 . -49) (undo-tree-id2292 . -49) (undo-tree-id2293 . -49) (undo-tree-id2294 . -49) (undo-tree-id2295 . -49) (undo-tree-id2296 . -49) (undo-tree-id2297 . -51) (undo-tree-id2298 . -49) (undo-tree-id2299 . -51) (undo-tree-id2300 . -51) (undo-tree-id2301 . -51) (undo-tree-id2302 . -51) (undo-tree-id2303 . -51) (undo-tree-id2304 . -51) (undo-tree-id2305 . -51) 1538 (#(" " 0 1 (wrap-prefix "  " face (markdown-table-face) fontified t)) . -1538) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) 1539) nil (26429 22543 349823 428000) 0 nil])
([nil nil ((#("| 250                                                   | 500                                                   | 750                                                   |
" 0 169 (face (markdown-table-face) wrap-prefix "  " fontified nil) 169 170 (font-lock-multiline t face (markdown-table-face) wrap-prefix "  " fontified nil)) . 1709) (undo-tree-id2223 . -170) (undo-tree-id2224 . 170) (undo-tree-id2225 . -170) (undo-tree-id2226 . -170) (undo-tree-id2227 . -1) (undo-tree-id2228 . -170) (undo-tree-id2229 . -170) (undo-tree-id2230 . -170) (undo-tree-id2231 . -170) (undo-tree-id2232 . -170) (undo-tree-id2233 . -170) (undo-tree-id2234 . -170) (undo-tree-id2235 . -170) (undo-tree-id2236 . -170) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (1485 . 1709) 1486) nil (26429 22543 345465 743000) 0 nil])
([nil nil ((#(" ![dx]({{site.baseurl}}/assets/proj5/1.1_noise750.png) |" 0 1 (face (markdown-table-face) fontified nil wrap-prefix "  ") 1 2 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 2 3 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 3 5 (help-echo "{{site.baseurl}}/assets/proj5/1.1_noise750.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) fontified nil wrap-prefix "  ") 5 6 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 6 7 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 7 53 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified nil wrap-prefix "  ") 53 54 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 54 56 (face (markdown-table-face) fontified nil wrap-prefix "  ")) . 1988) (undo-tree-id2208 . -56) (undo-tree-id2209 . -56) (undo-tree-id2210 . -56) (undo-tree-id2211 . -56) (undo-tree-id2212 . -56) (undo-tree-id2213 . -56) (#(":-----------------------------------------------------:|" 0 56 (face (markdown-table-face) fontified nil wrap-prefix "  ")) . 1820) (#("                                                       |" 0 56 (face (markdown-table-face) wrap-prefix "  " fontified t)) . 1652) (undo-tree-id2214 . -7) (undo-tree-id2215 . -7) (undo-tree-id2216 . -7) (undo-tree-id2217 . -7) (undo-tree-id2218 . -7) (undo-tree-id2219 . -7) (undo-tree-id2220 . -7) (undo-tree-id2221 . -7) (undo-tree-id2222 . -7) 2156) nil (26429 22543 345456 946000) 0 nil])
([nil nil ((1861 . 1862) (#("1" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -1861) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) 1862) nil (26429 22543 345445 685000) 0 nil])
([nil nil ((1868 . 1871) (#("0" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -1868) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) 1869) nil (26429 22543 345434 814000) 0 nil])
([nil nil ((1917 . 1918) (#("1" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -1917) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) 1918) nil (26429 22543 345430 606000) 0 nil])
([nil nil ((1924 . 1927) (#("2" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -1924) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (#("5" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -1925) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (#("0" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -1926) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) 1927) nil (26429 22543 345426 889000) 0 nil])
([nil nil ((1973 . 1974) (#("1" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -1973) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) 1974) nil (26429 22543 345405 399000) 0 nil])
([nil nil ((1980 . 1983) (#("5" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -1980) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (#("0" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -1981) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) 1982) nil (26429 22543 345400 229000) 0 nil])
([nil nil ((#("0" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . 1982) (undo-tree-id2130 . -1)) nil (26429 22556 98379 139000) 0 nil])
([nil nil ((1863 . 1868) (#("n" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -1863) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (#("o" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -1864) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (#("i" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -1865) (undo-tree-id2763 . -1) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (undo-tree-id2771 . -1) (undo-tree-id2772 . -1) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (#("s" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -1866) (undo-tree-id2784 . 1) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (undo-tree-id2792 . -1) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) (undo-tree-id2802 . -1) (undo-tree-id2803 . -1) (#("e" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -1867) (undo-tree-id2804 . -1) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1) (undo-tree-id2807 . -1) (undo-tree-id2808 . -1) (undo-tree-id2809 . -1) (undo-tree-id2810 . -1) (undo-tree-id2811 . -1) (undo-tree-id2812 . -1) (undo-tree-id2813 . -1) (undo-tree-id2814 . -1) (undo-tree-id2815 . -1) (undo-tree-id2816 . -1) (undo-tree-id2817 . -1) 1868 (t 26429 22543 353457 784000)) nil (26429 22620 468861 406000) 0 nil] [nil nil ((#("s" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -1866) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . 1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (#("e" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -1867) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (#("2" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -1868) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (#("5" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -1869) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (#("0" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -1870) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) 1871 (t 26429 22543 353457 784000)) ((1866 . 1871)) (26429 22556 96832 489000) 0 nil])
([nil nil ((1864 . 1868) (#("u" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -1864) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (#("a" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -1865) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (#("s" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -1866) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (#("s" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -1867) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) 1868) nil (26429 22620 468817 282000) 0 nil])
nil
([nil nil ((1919 . 1924) (#("n" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -1919) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (#("o" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -1920) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (#("i" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -1921) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (#("s" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -1922) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (#("e" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -1923) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) 1924) nil (26429 22620 468787 125000) 0 nil])
([nil nil ((1975 . 1980) (#("n" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -1975) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) (#("o" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -1976) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -1) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (#("i" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -1977) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (#("s" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -1978) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (#("e" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -1979) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) 1980) nil (26429 22620 468755 986000) 0 nil])
([nil nil ((1820 . 1821) (t 26429 22620 480649 282000) 1707) nil (26429 22635 842222 906000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1989 . 1990) (nil fontified nil 1821 . 1990) (1821 . 1990)) nil (26429 22635 842217 205000) 0 nil])
([nil nil ((2163 . 2165) (2162 . 2163) (t 26429 22635 857886 835000) 2162) nil (26429 22914 38904 325000) 0 nil])
([nil nil ((2178 . 2187) (#("d" 0 1 (font-lock-multiline t face markdown-header-face-1 markdown-heading-1-atx (2163 2179 nil nil nil nil nil nil 2163 2165 2165 2179 2179 2179 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (2163 2179 nil nil nil nil nil nil 2163 2165 2165 2179 2179 2179 #<buffer 2024-11-19-proj5.markdown>) wrap-prefix "  " fontified t)) . -2178) (undo-tree-id3020 . -1) (undo-tree-id3021 . -1) (undo-tree-id3022 . -1) 2179 (2165 . 2179)) nil (26429 22914 38902 742000) 0 nil])
([nil nil ((2188 . 2189) (2187 . 2188) 2186) nil (26429 22914 38900 138000) 0 nil])
([nil nil ((2187 . 2188) (#("
" 0 1 (font-lock-multiline t wrap-prefix "  " fontified t)) . -2187) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) (undo-tree-id3000 . -1) (undo-tree-id3001 . -1) (undo-tree-id3002 . -1) (undo-tree-id3003 . -1) (#("
" 0 1 (wrap-prefix "  " fontified t)) . -2188) (undo-tree-id3004 . -1) (undo-tree-id3005 . -1) (undo-tree-id3006 . -1) (undo-tree-id3007 . -1) (undo-tree-id3008 . -1) (undo-tree-id3009 . -1) (undo-tree-id3010 . -1) (undo-tree-id3011 . -1) (undo-tree-id3012 . -1) (undo-tree-id3013 . -1) (undo-tree-id3014 . -1) (undo-tree-id3015 . -1) (undo-tree-id3016 . -1) (undo-tree-id3017 . -1) (undo-tree-id3018 . -1) (undo-tree-id3019 . -1) 2189) nil (26429 22914 38898 434000) 0 nil])
([nil nil ((2189 . 2190) (2188 . 2189) 2187) nil (26429 22914 38872 515000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2866 . 2867) (nil fontified nil 2190 . 2867) (2190 . 2867)) nil (26429 22914 38871 573000) 0 nil])
([nil nil ((2736 . 2745) (#("2" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -2736) (undo-tree-id2851 . -1) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) (undo-tree-id2854 . -1) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) (undo-tree-id2867 . -1) (undo-tree-id2868 . -1) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (#("_" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -2737) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (undo-tree-id2884 . -1) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) (undo-tree-id2888 . -1) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (undo-tree-id2895 . -1) (undo-tree-id2896 . -1) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) (#("g" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -2738) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) (undo-tree-id2909 . -1) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1) (undo-tree-id2912 . -1) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1) (undo-tree-id2915 . -1) (undo-tree-id2916 . -1) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) (undo-tree-id2919 . -1) (undo-tree-id2920 . -1) (undo-tree-id2921 . -1) (undo-tree-id2922 . -1) (undo-tree-id2923 . -1) (undo-tree-id2924 . -1) (#("a" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -2739) (undo-tree-id2925 . -1) (undo-tree-id2926 . -1) (undo-tree-id2927 . -1) (undo-tree-id2928 . -1) (undo-tree-id2929 . -1) (undo-tree-id2930 . -1) (undo-tree-id2931 . -1) (undo-tree-id2932 . -1) (undo-tree-id2933 . -1) (undo-tree-id2934 . -1) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) (undo-tree-id2943 . -1) (#("u" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -2740) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) (undo-tree-id2946 . -1) (undo-tree-id2947 . -1) (undo-tree-id2948 . -1) (undo-tree-id2949 . -1) (undo-tree-id2950 . -1) (undo-tree-id2951 . -1) (undo-tree-id2952 . -1) (undo-tree-id2953 . -1) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (#("s" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -2741) (undo-tree-id2961 . -1) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (#("s" 0 1 (wrap-prefix "  " font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t)) . -2742) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) 2743) nil (26429 22914 38868 307000) 0 nil])
([nil nil ((#("2_gauss" 0 7 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . 2794) (undo-tree-id2836 . -6) (undo-tree-id2837 . -6) (undo-tree-id2838 . -1) (undo-tree-id2839 . -2) (undo-tree-id2840 . -1) (undo-tree-id2841 . -2) (undo-tree-id2842 . -4) (undo-tree-id2843 . -2) (undo-tree-id2844 . -6) (undo-tree-id2845 . -4) (undo-tree-id2846 . -5) (undo-tree-id2847 . -4) (undo-tree-id2848 . -6) (undo-tree-id2849 . -5) (undo-tree-id2850 . -6) 2800) nil (26429 22914 38790 670000) 0 nil])
([nil nil ((2795 . 2803) (#(")" 0 1 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t)) . -2795) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (undo-tree-id2830 . -1) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) (#("n" 0 1 (wrap-prefix "  " face (markdown-table-face) fontified t)) . -2796) (undo-tree-id2833 . -1) (undo-tree-id2834 . -1) (undo-tree-id2835 . -1) 2797 (2795 . 2797) (#(")" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified nil)) . -2795) (2794 . 2796)) nil (26429 22914 38733 372000) 0 nil])
([nil nil ((#("2_gauss" 0 7 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . 2852) (undo-tree-id2818 . -6) (undo-tree-id2819 . -6) (undo-tree-id2820 . -6) (undo-tree-id2821 . -5) (undo-tree-id2822 . -6) (undo-tree-id2823 . -5) (undo-tree-id2824 . -6) 2858) nil (26429 22914 33622 138000) 0 nil])
([nil nil ((2852 . 2861)) nil (26429 22914 33599 525000) 0 nil])
([nil nil ((2350 . 2354) (2329 . 2350) (2308 . 2329) (#("hall" 0 4 (wrap-prefix "  " fontified t)) . -2308) (undo-tree-id3023 . -4) (undo-tree-id3024 . -1) (undo-tree-id3025 . -2) (undo-tree-id3026 . -1) (undo-tree-id3027 . -3) (undo-tree-id3028 . -2) (undo-tree-id3029 . -4) (undo-tree-id3030 . -3) (undo-tree-id3031 . -4) 2312 (2296 . 2312) (2275 . 2296) (2267 . 2275) (#("denoising " 0 10 (wrap-prefix "  " fontified t)) . -2267) (undo-tree-id3032 . -10) (undo-tree-id3033 . -1) (undo-tree-id3034 . -2) (undo-tree-id3035 . -1) (undo-tree-id3036 . -3) (undo-tree-id3037 . -2) (undo-tree-id3038 . -4) (undo-tree-id3039 . -3) (undo-tree-id3040 . -5) (undo-tree-id3041 . -4) (undo-tree-id3042 . -6) (undo-tree-id3043 . -5) (undo-tree-id3044 . -7) (undo-tree-id3045 . -6) (undo-tree-id3046 . -8) (undo-tree-id3047 . -7) (undo-tree-id3048 . -9) (undo-tree-id3049 . -8) (undo-tree-id3050 . -10) (undo-tree-id3051 . -9) (undo-tree-id3052 . -10) (undo-tree-id3053 . -10) (undo-tree-id3054 . -10) (undo-tree-id3055 . -10) (undo-tree-id3056 . -10) (undo-tree-id3057 . -10) (undo-tree-id3058 . -10) (undo-tree-id3059 . -10) (undo-tree-id3060 . -10) (undo-tree-id3061 . -10) 2277 (#("is " 0 3 (wrap-prefix "  " fontified t)) . -2277) (undo-tree-id3062 . -3) (undo-tree-id3063 . -1) (undo-tree-id3064 . -2) (undo-tree-id3065 . -1) (undo-tree-id3066 . -3) (undo-tree-id3067 . -2) (undo-tree-id3068 . -3) 2280 (2267 . 2280) (#("denoisation" 0 11 (wrap-prefix "  " fontified t)) . -2267) (undo-tree-id3069 . -11) (undo-tree-id3070 . -1) (undo-tree-id3071 . -2) (undo-tree-id3072 . -1) (undo-tree-id3073 . -3) (undo-tree-id3074 . -2) (undo-tree-id3075 . -4) (undo-tree-id3076 . -3) (undo-tree-id3077 . -5) (undo-tree-id3078 . -4) (undo-tree-id3079 . -6) (undo-tree-id3080 . -5) (undo-tree-id3081 . -6) (undo-tree-id3082 . -6) (undo-tree-id3083 . -6) (undo-tree-id3084 . -6) (undo-tree-id3085 . -6) (undo-tree-id3086 . -6) (undo-tree-id3087 . -6) (undo-tree-id3088 . -6) (undo-tree-id3089 . -6) (undo-tree-id3090 . -6) (undo-tree-id3091 . -6) (undo-tree-id3092 . -6) (undo-tree-id3093 . -6) (undo-tree-id3094 . -6) (undo-tree-id3095 . -6) (undo-tree-id3096 . -6) (undo-tree-id3097 . -6) (undo-tree-id3098 . -6) (undo-tree-id3099 . -6) (undo-tree-id3100 . -6) (undo-tree-id3101 . -6) (undo-tree-id3102 . -6) (undo-tree-id3103 . -6) (undo-tree-id3104 . -6) (undo-tree-id3105 . -6) (undo-tree-id3106 . -6) (undo-tree-id3107 . -6) (undo-tree-id3108 . -6) (undo-tree-id3109 . -6) (undo-tree-id3110 . -6) (undo-tree-id3111 . -7) (undo-tree-id3112 . -6) (undo-tree-id3113 . -8) (undo-tree-id3114 . -7) (undo-tree-id3115 . -9) (undo-tree-id3116 . -8) (undo-tree-id3117 . -10) (undo-tree-id3118 . -9) (undo-tree-id3119 . -11) (undo-tree-id3120 . -10) (undo-tree-id3121 . -11) 2278 (2273 . 2278) (#("e" 0 1 (wrap-prefix "  " fontified t)) . -2273) (undo-tree-id3122 . -1) (undo-tree-id3123 . -1) (undo-tree-id3124 . -1) (undo-tree-id3125 . -1) (undo-tree-id3126 . -1) (undo-tree-id3127 . -1) (undo-tree-id3128 . -1) (undo-tree-id3129 . -1) (undo-tree-id3130 . -1) (undo-tree-id3131 . -1) (undo-tree-id3132 . -1) (undo-tree-id3133 . -1) (undo-tree-id3134 . -1) (undo-tree-id3135 . -1) (undo-tree-id3136 . -1) (undo-tree-id3137 . -1) (undo-tree-id3138 . -1) (undo-tree-id3139 . -1) (undo-tree-id3140 . -1) (undo-tree-id3141 . -1) (undo-tree-id3142 . -1) (#("d" 0 1 (wrap-prefix "  " fontified t)) . -2274) (undo-tree-id3143 . -1) (undo-tree-id3144 . -1) (undo-tree-id3145 . -1) (undo-tree-id3146 . -1) (undo-tree-id3147 . -1) (undo-tree-id3148 . -1) (undo-tree-id3149 . -1) (undo-tree-id3150 . -1) (undo-tree-id3151 . -1) (undo-tree-id3152 . -1) (undo-tree-id3153 . -1) (undo-tree-id3154 . -1) (undo-tree-id3155 . -1) (undo-tree-id3156 . -1) (undo-tree-id3157 . -1) (undo-tree-id3158 . -1) (undo-tree-id3159 . -1) (#(" " 0 1 (wrap-prefix "  " fontified t)) . -2275) (undo-tree-id3160 . -1) (undo-tree-id3161 . -1) (undo-tree-id3162 . -1) (undo-tree-id3163 . -1) (undo-tree-id3164 . -1) (undo-tree-id3165 . -1) (undo-tree-id3166 . -1) (undo-tree-id3167 . -1) (undo-tree-id3168 . -1) (undo-tree-id3169 . -1) (undo-tree-id3170 . -1) (undo-tree-id3171 . -1) (undo-tree-id3172 . -1) 2276 (#("imat" 0 4 (wrap-prefix "  " fontified t)) . -2276) (undo-tree-id3173 . -4) (undo-tree-id3174 . -1) (undo-tree-id3175 . -2) (undo-tree-id3176 . -1) (undo-tree-id3177 . -3) (undo-tree-id3178 . -2) (undo-tree-id3179 . -4) (undo-tree-id3180 . -3) (undo-tree-id3181 . -4) 2280 (2273 . 2280) (#("e" 0 1 (wrap-prefix "  " fontified t)) . -2273) (undo-tree-id3182 . -1) (undo-tree-id3183 . -1) (undo-tree-id3184 . -1) (undo-tree-id3185 . -1) (undo-tree-id3186 . -1) (undo-tree-id3187 . -1) (undo-tree-id3188 . -1) (#("d" 0 1 (wrap-prefix "  " fontified t)) . -2274) (undo-tree-id3189 . -1) (undo-tree-id3190 . -1) (undo-tree-id3191 . -1) 2275 (2273 . 2275) (2252 . 2273) (2231 . 2252) (2230 . 2231) (#("n" 0 1 (wrap-prefix "  " fontified t)) . -2230) (undo-tree-id3192 . -1) (undo-tree-id3193 . -1) (undo-tree-id3194 . -1) 2231 (2228 . 2231) (#("u" 0 1 (wrap-prefix "  " fontified t)) . -2228) (undo-tree-id3195 . -1) (undo-tree-id3196 . -1) (undo-tree-id3197 . -1) 2229 (2211 . 2229) (2190 . 2211) (2189 . 2190) (2189 . 2190) (t 26429 22914 54184 550000)) nil (26429 22974 14824 77000) 0 nil])
([nil nil ((3060 . 3064) (3039 . 3060) (t 26429 22974 28111 56000)) nil (26429 23585 416814 545000) 0 nil])
([nil nil ((3065 . 3066) (3064 . 3065) 3063) nil (26429 23585 416807 702000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3118 . 3119) (nil fontified nil 3066 . 3119) (3066 . 3119) (t 26429 23585 435464 819000)) nil (26429 23714 600114 299000) 0 nil])
([nil nil ((3066 . 3068)) nil (26429 23714 600113 437000) 0 nil])
([nil nil ((#(")" 0 1 (wrap-prefix "  " fontified t)) . 3067) (undo-tree-id3237 . 1)) nil (26429 23714 600112 876000) 0 nil])
([nil nil ((3105 . 3107) (#("2_" 0 2 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) wrap-prefix "  " fontified t)) . -3105) (undo-tree-id3198 . -2) (undo-tree-id3199 . -2) (undo-tree-id3200 . -2) (undo-tree-id3201 . -2) (undo-tree-id3202 . -2) (undo-tree-id3203 . -2) (undo-tree-id3204 . -2) (undo-tree-id3205 . -2) (undo-tree-id3206 . -2) (undo-tree-id3207 . -2) (undo-tree-id3208 . -2) (undo-tree-id3209 . -2) (undo-tree-id3210 . -2) (undo-tree-id3211 . -2) (undo-tree-id3212 . -2) 3107 (#("gauss250." 0 9 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) wrap-prefix "  " fontified t)) . -3107) (undo-tree-id3213 . -9) (undo-tree-id3214 . -9) (undo-tree-id3215 . -9) (undo-tree-id3216 . -9) (undo-tree-id3217 . -9) (undo-tree-id3218 . -9) (undo-tree-id3219 . -9) (undo-tree-id3220 . -9) (undo-tree-id3221 . -9) (undo-tree-id3222 . -9) (undo-tree-id3223 . -9) (undo-tree-id3224 . -9) (undo-tree-id3225 . -9) 3116 (#("png" 0 3 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) wrap-prefix "  " fontified t)) . -3116) (undo-tree-id3226 . -3) (undo-tree-id3227 . -3) (undo-tree-id3228 . -3) (undo-tree-id3229 . -3) (undo-tree-id3230 . -3) (undo-tree-id3231 . -3) (undo-tree-id3232 . -3) (undo-tree-id3233 . -3) (undo-tree-id3234 . -3) (undo-tree-id3235 . -3) (undo-tree-id3236 . -3) 3119) nil (26429 23714 600110 161000) 0 nil])
([nil nil ((3107 . 3118)) nil (26429 23714 600067 420000) 0 nil])
([nil nil ((3126 . 3128) (3118 . 3126)) nil (26429 23714 600066 829000) 0 nil])
([nil nil ((3129 . 3130) 3127) nil (26429 23714 600060 647000) 0 nil])
([nil nil ((#("(" 0 1 (wrap-prefix "  " fontified t)) . 3066) (t 26429 23714 614374 71000)) nil (26429 23723 407133 341000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3128 . 3129) (#("
" 0 1 (fontified nil wrap-prefix "  ")) . -3191) (3128 . 3192) 3127 (t 26429 23723 414504 136000)) nil (26429 23794 615595 288000) 0 nil])
([nil nil ((3169 . 3174) (#("i" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -3169) (undo-tree-id3238 . -1) (undo-tree-id3239 . -1) (undo-tree-id3240 . -1) (undo-tree-id3241 . -1) (undo-tree-id3242 . -1) (undo-tree-id3243 . -1) (undo-tree-id3244 . -1) (undo-tree-id3245 . -1) (undo-tree-id3246 . -1) (undo-tree-id3247 . -1) (undo-tree-id3248 . -1) (undo-tree-id3249 . -1) (undo-tree-id3250 . -1) (undo-tree-id3251 . -1) (undo-tree-id3252 . -1) (undo-tree-id3253 . -1) (undo-tree-id3254 . -1) (undo-tree-id3255 . -1) (undo-tree-id3256 . -1) (undo-tree-id3257 . -1) (undo-tree-id3258 . -1) (undo-tree-id3259 . -1) (undo-tree-id3260 . -1) (undo-tree-id3261 . -1) (undo-tree-id3262 . -1) (undo-tree-id3263 . -1) (undo-tree-id3264 . -1) (undo-tree-id3265 . -1) (undo-tree-id3266 . -1) (undo-tree-id3267 . -1) (undo-tree-id3268 . -1) (undo-tree-id3269 . -1) (undo-tree-id3270 . -1) (undo-tree-id3271 . -1) (undo-tree-id3272 . -1) (undo-tree-id3273 . -1) (undo-tree-id3274 . -1) (undo-tree-id3275 . -1) (undo-tree-id3276 . -1) (#("t" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -3170) (undo-tree-id3277 . -1) (undo-tree-id3278 . -1) (undo-tree-id3279 . -1) (undo-tree-id3280 . -1) (undo-tree-id3281 . -1) (undo-tree-id3282 . -1) (undo-tree-id3283 . -1) (undo-tree-id3284 . -1) (undo-tree-id3285 . -1) (undo-tree-id3286 . -1) (undo-tree-id3287 . -1) (undo-tree-id3288 . -1) (undo-tree-id3289 . -1) (undo-tree-id3290 . -1) (undo-tree-id3291 . -1) (undo-tree-id3292 . -1) (undo-tree-id3293 . -1) (undo-tree-id3294 . -1) (undo-tree-id3295 . -1) (undo-tree-id3296 . -1) (undo-tree-id3297 . -1) (undo-tree-id3298 . -1) (undo-tree-id3299 . -1) (undo-tree-id3300 . -1) (undo-tree-id3301 . -1) (undo-tree-id3302 . -1) (undo-tree-id3303 . -1) (undo-tree-id3304 . -1) (undo-tree-id3305 . -1) (undo-tree-id3306 . -1) (undo-tree-id3307 . -1) (undo-tree-id3308 . -1) (undo-tree-id3309 . -1) (undo-tree-id3310 . -1) (undo-tree-id3311 . -1) (undo-tree-id3312 . -1) (undo-tree-id3313 . -1) (#("e" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -3171) (undo-tree-id3314 . -1) (undo-tree-id3315 . -1) (undo-tree-id3316 . -1) (undo-tree-id3317 . -1) (undo-tree-id3318 . -1) (undo-tree-id3319 . -1) (undo-tree-id3320 . -1) (undo-tree-id3321 . -1) (undo-tree-id3322 . -1) (undo-tree-id3323 . -1) (undo-tree-id3324 . -1) (undo-tree-id3325 . -1) (undo-tree-id3326 . -1) (undo-tree-id3327 . -1) (undo-tree-id3328 . -1) (undo-tree-id3329 . -1) (undo-tree-id3330 . -1) (undo-tree-id3331 . -1) (undo-tree-id3332 . -1) (undo-tree-id3333 . -1) (undo-tree-id3334 . -1) (undo-tree-id3335 . -1) (undo-tree-id3336 . -1) (undo-tree-id3337 . -1) (undo-tree-id3338 . -1) (undo-tree-id3339 . -1) (undo-tree-id3340 . -1) (undo-tree-id3341 . -1) (undo-tree-id3342 . -1) (undo-tree-id3343 . -1) (undo-tree-id3344 . -1) (undo-tree-id3345 . -1) (undo-tree-id3346 . -1) (undo-tree-id3347 . -1) (undo-tree-id3348 . -1) (#("r" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -3172) (undo-tree-id3349 . -1) (undo-tree-id3350 . -1) (undo-tree-id3351 . -1) (undo-tree-id3352 . -1) (undo-tree-id3353 . -1) (undo-tree-id3354 . -1) (undo-tree-id3355 . -1) (undo-tree-id3356 . -1) (undo-tree-id3357 . -1) (undo-tree-id3358 . -1) (undo-tree-id3359 . -1) (undo-tree-id3360 . -1) (undo-tree-id3361 . -1) (undo-tree-id3362 . -1) (undo-tree-id3363 . -1) (undo-tree-id3364 . -1) (undo-tree-id3365 . -1) (undo-tree-id3366 . -1) (undo-tree-id3367 . -1) (undo-tree-id3368 . -1) (undo-tree-id3369 . -1) (undo-tree-id3370 . -1) (undo-tree-id3371 . -1) (undo-tree-id3372 . -1) (undo-tree-id3373 . -1) (undo-tree-id3374 . -1) (undo-tree-id3375 . -1) (undo-tree-id3376 . -1) (undo-tree-id3377 . -1) (undo-tree-id3378 . -1) (undo-tree-id3379 . -1) (undo-tree-id3380 . -1) (undo-tree-id3381 . -1) (#("d" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -3173) (undo-tree-id3382 . -1) (undo-tree-id3383 . -1) (undo-tree-id3384 . -1) (undo-tree-id3385 . -1) (undo-tree-id3386 . -1) (undo-tree-id3387 . -1) (undo-tree-id3388 . -1) (undo-tree-id3389 . -1) (undo-tree-id3390 . -1) (undo-tree-id3391 . -1) (undo-tree-id3392 . -1) (undo-tree-id3393 . -1) (undo-tree-id3394 . -1) (undo-tree-id3395 . -1) (undo-tree-id3396 . -1) (undo-tree-id3397 . -1) (undo-tree-id3398 . -1) (undo-tree-id3399 . -1) (undo-tree-id3400 . -1) (undo-tree-id3401 . -1) (undo-tree-id3402 . -1) (undo-tree-id3403 . -1) (undo-tree-id3404 . -1) (undo-tree-id3405 . -1) (undo-tree-id3406 . -1) (undo-tree-id3407 . -1) (undo-tree-id3408 . -1) (undo-tree-id3409 . -1) (undo-tree-id3410 . -1) (undo-tree-id3411 . -1) (undo-tree-id3412 . -1) (#("e" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified nil wrap-prefix "  ")) . -3174) (undo-tree-id3413 . -1) (undo-tree-id3414 . -1) (undo-tree-id3415 . -1) (undo-tree-id3416 . -1) (undo-tree-id3417 . -1) (undo-tree-id3418 . -1) (undo-tree-id3419 . -1) (undo-tree-id3420 . -1) (undo-tree-id3421 . -1) (undo-tree-id3422 . -1) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (undo-tree-id3433 . -1) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) (undo-tree-id3436 . -1) (undo-tree-id3437 . -1) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) (undo-tree-id3440 . -1) (undo-tree-id3441 . -1) (#("n" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -3175) (undo-tree-id3442 . -1) (undo-tree-id3443 . -1) (undo-tree-id3444 . -1) (undo-tree-id3445 . -1) (undo-tree-id3446 . -1) (undo-tree-id3447 . -1) (undo-tree-id3448 . -1) (undo-tree-id3449 . -1) (undo-tree-id3450 . -1) (undo-tree-id3451 . -1) (undo-tree-id3452 . -1) (undo-tree-id3453 . -1) (undo-tree-id3454 . -1) (undo-tree-id3455 . -1) (undo-tree-id3456 . -1) (undo-tree-id3457 . -1) (undo-tree-id3458 . -1) (undo-tree-id3459 . -1) (undo-tree-id3460 . -1) (undo-tree-id3461 . -1) (undo-tree-id3462 . -1) (undo-tree-id3463 . -1) (undo-tree-id3464 . -1) (undo-tree-id3465 . -1) (undo-tree-id3466 . -1) (undo-tree-id3467 . -1) (undo-tree-id3468 . -1) (#("o" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -3176) (undo-tree-id3469 . -1) (undo-tree-id3470 . -1) (undo-tree-id3471 . -1) (undo-tree-id3472 . -1) (undo-tree-id3473 . -1) (undo-tree-id3474 . -1) (undo-tree-id3475 . -1) (undo-tree-id3476 . -1) (undo-tree-id3477 . -1) (undo-tree-id3478 . -1) (undo-tree-id3479 . -1) (undo-tree-id3480 . -1) (undo-tree-id3481 . -1) (undo-tree-id3482 . -1) (undo-tree-id3483 . -1) (undo-tree-id3484 . -1) (undo-tree-id3485 . -1) (undo-tree-id3486 . -1) (undo-tree-id3487 . -1) (undo-tree-id3488 . -1) (undo-tree-id3489 . -1) (undo-tree-id3490 . -1) (undo-tree-id3491 . -1) (undo-tree-id3492 . -1) (undo-tree-id3493 . -1) (#("i" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified nil wrap-prefix "  ")) . -3177) (undo-tree-id3494 . -1) (undo-tree-id3495 . -1) (undo-tree-id3496 . -1) (undo-tree-id3497 . -1) (undo-tree-id3498 . -1) (undo-tree-id3499 . -1) (undo-tree-id3500 . -1) (undo-tree-id3501 . -1) (undo-tree-id3502 . -1) (undo-tree-id3503 . -1) (undo-tree-id3504 . -1) (undo-tree-id3505 . -1) (undo-tree-id3506 . -1) (undo-tree-id3507 . -1) (undo-tree-id3508 . -1) (undo-tree-id3509 . -1) (undo-tree-id3510 . -1) (undo-tree-id3511 . -1) (undo-tree-id3512 . -1) (undo-tree-id3513 . -1) (undo-tree-id3514 . -1) (undo-tree-id3515 . -1) (undo-tree-id3516 . -1) (#("s" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -3178) (undo-tree-id3517 . -1) (undo-tree-id3518 . -1) (undo-tree-id3519 . -1) (undo-tree-id3520 . -1) (undo-tree-id3521 . -1) (undo-tree-id3522 . -1) (undo-tree-id3523 . -1) (undo-tree-id3524 . -1) (undo-tree-id3525 . -1) (undo-tree-id3526 . -1) (undo-tree-id3527 . -1) (undo-tree-id3528 . -1) (undo-tree-id3529 . -1) (undo-tree-id3530 . -1) (undo-tree-id3531 . -1) (undo-tree-id3532 . -1) (undo-tree-id3533 . -1) (undo-tree-id3534 . -1) (undo-tree-id3535 . -1) (undo-tree-id3536 . -1) (undo-tree-id3537 . -1) (#("e" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -3179) (undo-tree-id3538 . -1) (undo-tree-id3539 . -1) (undo-tree-id3540 . -1) (undo-tree-id3541 . -1) (undo-tree-id3542 . -1) (undo-tree-id3543 . -1) (undo-tree-id3544 . -1) (undo-tree-id3545 . -1) (undo-tree-id3546 . -1) (undo-tree-id3547 . -1) (undo-tree-id3548 . -1) (undo-tree-id3549 . -1) (undo-tree-id3550 . -1) (undo-tree-id3551 . -1) (undo-tree-id3552 . -1) (undo-tree-id3553 . -1) (undo-tree-id3554 . -1) (undo-tree-id3555 . -1) (undo-tree-id3556 . -1) (#("_" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified nil wrap-prefix "  ")) . -3180) (undo-tree-id3557 . -1) (undo-tree-id3558 . -1) (undo-tree-id3559 . -1) (undo-tree-id3560 . -1) (undo-tree-id3561 . -1) (undo-tree-id3562 . -1) (undo-tree-id3563 . -1) (undo-tree-id3564 . -1) (undo-tree-id3565 . -1) (undo-tree-id3566 . -1) (undo-tree-id3567 . -1) (undo-tree-id3568 . -1) (undo-tree-id3569 . -1) (undo-tree-id3570 . -1) (undo-tree-id3571 . -1) (undo-tree-id3572 . -1) (undo-tree-id3573 . -1) (#("s" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -3181) (undo-tree-id3574 . -1) (undo-tree-id3575 . -1) (undo-tree-id3576 . -1) (undo-tree-id3577 . -1) (undo-tree-id3578 . -1) (undo-tree-id3579 . -1) (undo-tree-id3580 . -1) (undo-tree-id3581 . -1) (undo-tree-id3582 . -1) (undo-tree-id3583 . -1) (undo-tree-id3584 . -1) (undo-tree-id3585 . -1) (undo-tree-id3586 . -1) (undo-tree-id3587 . -1) (undo-tree-id3588 . -1) (#("t" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -3182) (undo-tree-id3589 . -1) (undo-tree-id3590 . -1) (undo-tree-id3591 . -1) (undo-tree-id3592 . -1) (undo-tree-id3593 . -1) (undo-tree-id3594 . -1) (undo-tree-id3595 . -1) (undo-tree-id3596 . -1) (undo-tree-id3597 . -1) (undo-tree-id3598 . -1) (undo-tree-id3599 . -1) (undo-tree-id3600 . -1) (undo-tree-id3601 . -1) (#("e" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -3183) (undo-tree-id3602 . -1) (undo-tree-id3603 . -1) (undo-tree-id3604 . -1) (undo-tree-id3605 . -1) (undo-tree-id3606 . -1) (undo-tree-id3607 . -1) (undo-tree-id3608 . -1) (undo-tree-id3609 . -1) (undo-tree-id3610 . -1) (undo-tree-id3611 . -1) (undo-tree-id3612 . -1) (#("p" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -3184) (undo-tree-id3613 . -1) (undo-tree-id3614 . -1) (undo-tree-id3615 . -1) (undo-tree-id3616 . -1) (undo-tree-id3617 . -1) (undo-tree-id3618 . -1) (undo-tree-id3619 . -1) (undo-tree-id3620 . -1) (undo-tree-id3621 . -1) (#("s" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -3185) (undo-tree-id3622 . -1) (undo-tree-id3623 . -1) (undo-tree-id3624 . -1) (undo-tree-id3625 . -1) (undo-tree-id3626 . -1) (undo-tree-id3627 . -1) (undo-tree-id3628 . -1) 3186) nil (26429 23794 615576 623000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3862 . 3863) (nil fontified nil 3180 . 3863) (3180 . 3863) (t 26429 23794 630556 700000)) nil (26429 23889 17423 134000) 0 nil])
([nil nil ((3180 . 3181)) nil (26429 23889 17422 553000) 0 nil])
([nil nil ((3183 . 3188) (#("250" 0 3 (face (markdown-table-face) wrap-prefix "  " fontified t)) . 3183)) nil (26429 23889 17421 941000) 0 nil])
([nil nil ((3239 . 3246) (#("500" 0 3 (face (markdown-table-face) wrap-prefix "  " fontified t)) . 3239)) nil (26429 23889 17420 970000) 0 nil])
([nil nil ((3299 . 3308) (#("Interative" 0 10 (face (markdown-table-face) wrap-prefix "  " fontified t)) . -3299) (undo-tree-id4136 . -10) (undo-tree-id4137 . -1) (undo-tree-id4138 . -2) (undo-tree-id4139 . -1) (undo-tree-id4140 . -3) (undo-tree-id4141 . -2) (undo-tree-id4142 . -4) (undo-tree-id4143 . -3) (undo-tree-id4144 . -5) (undo-tree-id4145 . -4) (undo-tree-id4146 . -6) (undo-tree-id4147 . -5) (undo-tree-id4148 . -7) (undo-tree-id4149 . -6) (undo-tree-id4150 . -8) (undo-tree-id4151 . -7) (undo-tree-id4152 . -9) (undo-tree-id4153 . -8) (undo-tree-id4154 . -10) (undo-tree-id4155 . -9) (undo-tree-id4156 . -10) 3309 (3308 . 3309) (3299 . 3308) (#("750" 0 3 (face (markdown-table-face) wrap-prefix "  " fontified t)) . 3299)) nil (26429 23889 17419 707000) 0 nil])
([nil nil ((#("| ![dx]({{site.baseurl}}/assets/proj5/1.3_onestep250.png) | ![dx]({{site.baseurl}}/assets/proj5/1.3_onestep500.png) | ![dx]({{site.baseurl}}/assets/proj5/1.3_onestep750.png) |
" 0 2 (face (markdown-table-face) wrap-prefix "  " fontified t) 2 3 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 3 4 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 4 6 (help-echo "{{site.baseurl}}/assets/proj5/1.3_onestep250.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) wrap-prefix "  " fontified t) 6 7 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 7 8 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 8 56 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t) 56 57 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 57 60 (face (markdown-table-face) wrap-prefix "  " fontified t) 60 61 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 61 62 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 62 64 (help-echo "{{site.baseurl}}/assets/proj5/1.3_onestep500.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) wrap-prefix "  " fontified t) 64 65 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 65 66 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 66 114 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t) 114 115 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 115 118 (face (markdown-table-face) wrap-prefix "  " fontified t) 118 119 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 119 120 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 120 122 (help-echo "{{site.baseurl}}/assets/proj5/1.3_onestep750.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) wrap-prefix "  " fontified t) 122 123 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 123 124 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 124 172 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t) 172 173 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 173 175 (face (markdown-table-face) wrap-prefix "  " fontified t) 175 176 (font-lock-multiline t face (markdown-table-face) wrap-prefix "  " fontified t)) . 3699) (undo-tree-id4131 . -176) (undo-tree-id4132 . -176) (undo-tree-id4133 . -176) (undo-tree-id4134 . -176) (undo-tree-id4135 . -176)) nil (26429 23889 17407 735000) 0 nil])
([nil nil ((3569 . 3570) (#("1" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -3569) (undo-tree-id4101 . -1) (undo-tree-id4102 . -1) (undo-tree-id4103 . -1) (undo-tree-id4104 . -1) (undo-tree-id4105 . -1) (undo-tree-id4106 . -1) (undo-tree-id4107 . -1) (undo-tree-id4108 . -1) (undo-tree-id4109 . -1) (undo-tree-id4110 . -1) (undo-tree-id4111 . -1) (undo-tree-id4112 . -1) (undo-tree-id4113 . -1) (undo-tree-id4114 . -1) (undo-tree-id4115 . -1) (undo-tree-id4116 . -1) (undo-tree-id4117 . -1) (undo-tree-id4118 . -1) (undo-tree-id4119 . -1) (undo-tree-id4120 . -1) (undo-tree-id4121 . -1) (undo-tree-id4122 . -1) (undo-tree-id4123 . -1) (undo-tree-id4124 . -1) (undo-tree-id4125 . -1) (undo-tree-id4126 . -1) (undo-tree-id4127 . -1) (undo-tree-id4128 . -1) (undo-tree-id4129 . -1) (undo-tree-id4130 . -1) 3570) nil (26429 23889 17402 264000) 0 nil])
([nil nil ((3571 . 3576) (#("n" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -3571) (undo-tree-id3807 . -1) (undo-tree-id3808 . -1) (undo-tree-id3809 . -1) (undo-tree-id3810 . -1) (undo-tree-id3811 . -1) (undo-tree-id3812 . -1) (undo-tree-id3813 . -1) (undo-tree-id3814 . -1) (undo-tree-id3815 . -1) (undo-tree-id3816 . -1) (undo-tree-id3817 . -1) (undo-tree-id3818 . -1) (undo-tree-id3819 . -1) (undo-tree-id3820 . -1) (undo-tree-id3821 . -1) (undo-tree-id3822 . -1) (undo-tree-id3823 . -1) (undo-tree-id3824 . -1) (undo-tree-id3825 . -1) (undo-tree-id3826 . -1) (undo-tree-id3827 . -1) (undo-tree-id3828 . -1) (undo-tree-id3829 . -1) (undo-tree-id3830 . -1) (undo-tree-id3831 . -1) (undo-tree-id3832 . -1) (undo-tree-id3833 . -1) (undo-tree-id3834 . -1) (undo-tree-id3835 . -1) (undo-tree-id3836 . -1) (undo-tree-id3837 . -1) (undo-tree-id3838 . -1) (undo-tree-id3839 . -1) (undo-tree-id3840 . -1) (undo-tree-id3841 . -1) (undo-tree-id3842 . -1) (undo-tree-id3843 . -1) (undo-tree-id3844 . -1) (undo-tree-id3845 . -1) (undo-tree-id3846 . -1) (undo-tree-id3847 . -1) (undo-tree-id3848 . -1) (undo-tree-id3849 . -1) (undo-tree-id3850 . -1) (undo-tree-id3851 . -1) (undo-tree-id3852 . -1) (undo-tree-id3853 . -1) (undo-tree-id3854 . -1) (undo-tree-id3855 . -1) (undo-tree-id3856 . -1) (#("g" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -3572) (undo-tree-id3857 . -1) (undo-tree-id3858 . -1) (undo-tree-id3859 . -1) 3573 (3572 . 3573) (#("o" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -3572) (undo-tree-id3860 . -1) (undo-tree-id3861 . -1) (undo-tree-id3862 . -1) (undo-tree-id3863 . -1) (undo-tree-id3864 . -1) (undo-tree-id3865 . -1) (undo-tree-id3866 . -1) (undo-tree-id3867 . -1) (undo-tree-id3868 . -1) (undo-tree-id3869 . -1) (undo-tree-id3870 . -1) (undo-tree-id3871 . -1) (undo-tree-id3872 . -1) (undo-tree-id3873 . -1) (undo-tree-id3874 . -1) (undo-tree-id3875 . -1) (undo-tree-id3876 . -1) (undo-tree-id3877 . -1) (undo-tree-id3878 . -1) (undo-tree-id3879 . -1) (undo-tree-id3880 . -1) (undo-tree-id3881 . -1) (undo-tree-id3882 . -1) (undo-tree-id3883 . -1) (undo-tree-id3884 . -1) (undo-tree-id3885 . -1) (undo-tree-id3886 . -1) (undo-tree-id3887 . -1) (undo-tree-id3888 . -1) (undo-tree-id3889 . -1) (undo-tree-id3890 . -1) (undo-tree-id3891 . -1) (undo-tree-id3892 . -1) (undo-tree-id3893 . -1) (undo-tree-id3894 . -1) (undo-tree-id3895 . -1) (undo-tree-id3896 . -1) (undo-tree-id3897 . -1) (undo-tree-id3898 . -1) (undo-tree-id3899 . -1) (undo-tree-id3900 . -1) (undo-tree-id3901 . -1) (undo-tree-id3902 . -1) (undo-tree-id3903 . -1) (#("i" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -3573) (undo-tree-id3904 . -1) (undo-tree-id3905 . -1) (undo-tree-id3906 . -1) (undo-tree-id3907 . -1) (undo-tree-id3908 . -1) (undo-tree-id3909 . -1) (undo-tree-id3910 . -1) (undo-tree-id3911 . -1) (undo-tree-id3912 . -1) (undo-tree-id3913 . -1) (undo-tree-id3914 . -1) (undo-tree-id3915 . -1) (undo-tree-id3916 . -1) (undo-tree-id3917 . -1) (undo-tree-id3918 . -1) (undo-tree-id3919 . -1) (undo-tree-id3920 . -1) (undo-tree-id3921 . -1) (undo-tree-id3922 . -1) (undo-tree-id3923 . -1) (undo-tree-id3924 . -1) (undo-tree-id3925 . -1) (undo-tree-id3926 . -1) (undo-tree-id3927 . -1) (undo-tree-id3928 . -1) (undo-tree-id3929 . -1) (undo-tree-id3930 . -1) (undo-tree-id3931 . -1) (undo-tree-id3932 . -1) (undo-tree-id3933 . -1) (undo-tree-id3934 . -1) (undo-tree-id3935 . -1) (undo-tree-id3936 . -1) (undo-tree-id3937 . -1) (undo-tree-id3938 . -1) (undo-tree-id3939 . -1) (undo-tree-id3940 . -1) (undo-tree-id3941 . -1) (undo-tree-id3942 . -1) (undo-tree-id3943 . -1) (undo-tree-id3944 . -1) (undo-tree-id3945 . -1) (#("s" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -3574) (undo-tree-id3946 . -1) (undo-tree-id3947 . -1) (undo-tree-id3948 . -1) (undo-tree-id3949 . -1) (undo-tree-id3950 . -1) (undo-tree-id3951 . -1) (undo-tree-id3952 . -1) (undo-tree-id3953 . -1) (undo-tree-id3954 . -1) (undo-tree-id3955 . -1) (undo-tree-id3956 . -1) (undo-tree-id3957 . -1) (undo-tree-id3958 . -1) (undo-tree-id3959 . -1) (undo-tree-id3960 . -1) (undo-tree-id3961 . -1) (undo-tree-id3962 . -1) (undo-tree-id3963 . -1) (undo-tree-id3964 . -1) (undo-tree-id3965 . -1) (undo-tree-id3966 . -1) (undo-tree-id3967 . -1) (undo-tree-id3968 . -1) (undo-tree-id3969 . -1) (undo-tree-id3970 . -1) (undo-tree-id3971 . -1) (undo-tree-id3972 . -1) (undo-tree-id3973 . -1) (undo-tree-id3974 . -1) (undo-tree-id3975 . -1) (undo-tree-id3976 . -1) (undo-tree-id3977 . -1) (undo-tree-id3978 . -1) (undo-tree-id3979 . -1) (undo-tree-id3980 . -1) (undo-tree-id3981 . -1) (undo-tree-id3982 . -1) (undo-tree-id3983 . -1) (undo-tree-id3984 . -1) (undo-tree-id3985 . -1) (#("e" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -3575) (undo-tree-id3986 . -1) (undo-tree-id3987 . -1) (undo-tree-id3988 . -1) (undo-tree-id3989 . -1) (undo-tree-id3990 . -1) (undo-tree-id3991 . -1) (undo-tree-id3992 . -1) (undo-tree-id3993 . -1) (undo-tree-id3994 . -1) (undo-tree-id3995 . -1) (undo-tree-id3996 . -1) (undo-tree-id3997 . -1) (undo-tree-id3998 . -1) (undo-tree-id3999 . -1) (undo-tree-id4000 . -1) (undo-tree-id4001 . -1) (undo-tree-id4002 . -1) (undo-tree-id4003 . -1) (undo-tree-id4004 . -1) (undo-tree-id4005 . -1) (undo-tree-id4006 . -1) (undo-tree-id4007 . -1) (undo-tree-id4008 . -1) (undo-tree-id4009 . -1) (undo-tree-id4010 . -1) (undo-tree-id4011 . -1) (undo-tree-id4012 . -1) (undo-tree-id4013 . -1) (undo-tree-id4014 . -1) (undo-tree-id4015 . -1) (undo-tree-id4016 . -1) (undo-tree-id4017 . -1) (undo-tree-id4018 . -1) (undo-tree-id4019 . -1) (undo-tree-id4020 . -1) (undo-tree-id4021 . -1) (undo-tree-id4022 . -1) (undo-tree-id4023 . -1) (#("2" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -3576) (undo-tree-id4024 . -1) (undo-tree-id4025 . -1) (undo-tree-id4026 . -1) (undo-tree-id4027 . -1) (undo-tree-id4028 . -1) (undo-tree-id4029 . -1) (undo-tree-id4030 . -1) (undo-tree-id4031 . -1) (undo-tree-id4032 . -1) (undo-tree-id4033 . -1) (undo-tree-id4034 . -1) (undo-tree-id4035 . -1) (undo-tree-id4036 . -1) (undo-tree-id4037 . -1) (undo-tree-id4038 . -1) (undo-tree-id4039 . -1) (undo-tree-id4040 . -1) (undo-tree-id4041 . -1) (undo-tree-id4042 . -1) (undo-tree-id4043 . -1) (undo-tree-id4044 . -1) (undo-tree-id4045 . -1) (undo-tree-id4046 . -1) (undo-tree-id4047 . -1) (undo-tree-id4048 . -1) (undo-tree-id4049 . -1) (undo-tree-id4050 . -1) (undo-tree-id4051 . -1) (undo-tree-id4052 . -1) (undo-tree-id4053 . -1) (undo-tree-id4054 . -1) (undo-tree-id4055 . -1) (undo-tree-id4056 . -1) (undo-tree-id4057 . -1) (undo-tree-id4058 . -1) (undo-tree-id4059 . -1) (#("5" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -3577) (undo-tree-id4060 . -1) (undo-tree-id4061 . -1) (undo-tree-id4062 . -1) (undo-tree-id4063 . -1) (undo-tree-id4064 . -1) (undo-tree-id4065 . -1) (undo-tree-id4066 . -1) (undo-tree-id4067 . -1) (undo-tree-id4068 . -1) (undo-tree-id4069 . -1) (undo-tree-id4070 . -1) (undo-tree-id4071 . -1) (undo-tree-id4072 . -1) (undo-tree-id4073 . -1) (undo-tree-id4074 . -1) (undo-tree-id4075 . -1) (undo-tree-id4076 . -1) (undo-tree-id4077 . -1) (undo-tree-id4078 . -1) (undo-tree-id4079 . -1) (undo-tree-id4080 . -1) (undo-tree-id4081 . -1) (undo-tree-id4082 . -1) (undo-tree-id4083 . -1) (undo-tree-id4084 . -1) (undo-tree-id4085 . -1) (undo-tree-id4086 . -1) (undo-tree-id4087 . -1) (undo-tree-id4088 . -1) (undo-tree-id4089 . -1) (undo-tree-id4090 . -1) (undo-tree-id4091 . -1) (undo-tree-id4092 . -1) (undo-tree-id4093 . -1) (#("0" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -3578) (undo-tree-id4094 . -1) (undo-tree-id4095 . -1) (undo-tree-id4096 . -1) (undo-tree-id4097 . -1) (undo-tree-id4098 . -1) (undo-tree-id4099 . -1) (undo-tree-id4100 . -1) 3579) nil (26429 23889 17381 375000) 0 nil])
([nil nil ((3576 . 3579)) nil (26429 23889 17247 211000) 0 nil])
([nil nil ((3625 . 3626) (#("1" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -3625) (undo-tree-id3802 . -1) (undo-tree-id3803 . -1) (undo-tree-id3804 . -1) (undo-tree-id3805 . -1) (undo-tree-id3806 . -1) 3626) nil (26429 23889 17246 459000) 0 nil])
([nil nil ((3627 . 3637) (#("noise500" 0 8 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . 3627)) nil (26429 23889 17241 440000) 0 nil])
([nil nil ((3683 . 3684) (#("1" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -3683) (undo-tree-id3797 . -1) (undo-tree-id3798 . -1) (undo-tree-id3799 . -1) (undo-tree-id3800 . -1) (undo-tree-id3801 . -1) 3684) nil (26429 23889 17240 318000) 0 nil])
([nil nil ((3685 . 3690) (#("n" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -3685) (undo-tree-id3629 . -1) (undo-tree-id3630 . -1) (undo-tree-id3631 . -1) (undo-tree-id3632 . -1) (undo-tree-id3633 . -1) (undo-tree-id3634 . -1) (undo-tree-id3635 . -1) (undo-tree-id3636 . -1) (undo-tree-id3637 . -1) (undo-tree-id3638 . -1) (undo-tree-id3639 . -1) (undo-tree-id3640 . -1) (undo-tree-id3641 . -1) (undo-tree-id3642 . -1) (undo-tree-id3643 . -1) (undo-tree-id3644 . -1) (undo-tree-id3645 . -1) (undo-tree-id3646 . -1) (undo-tree-id3647 . -1) (undo-tree-id3648 . -1) (undo-tree-id3649 . -1) (undo-tree-id3650 . -1) (undo-tree-id3651 . -1) (undo-tree-id3652 . -1) (undo-tree-id3653 . -1) (undo-tree-id3654 . -1) (undo-tree-id3655 . -1) (undo-tree-id3656 . -1) (undo-tree-id3657 . -1) (undo-tree-id3658 . -1) (undo-tree-id3659 . -1) (undo-tree-id3660 . -1) (undo-tree-id3661 . -1) (undo-tree-id3662 . -1) (undo-tree-id3663 . -1) (#("o" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -3686) (undo-tree-id3664 . -1) (undo-tree-id3665 . -1) (undo-tree-id3666 . -1) (undo-tree-id3667 . -1) (undo-tree-id3668 . -1) (undo-tree-id3669 . -1) (undo-tree-id3670 . -1) (undo-tree-id3671 . -1) (undo-tree-id3672 . -1) (undo-tree-id3673 . -1) (undo-tree-id3674 . -1) (undo-tree-id3675 . -1) (undo-tree-id3676 . -1) (undo-tree-id3677 . -1) (undo-tree-id3678 . -1) (undo-tree-id3679 . -1) (undo-tree-id3680 . -1) (undo-tree-id3681 . -1) (undo-tree-id3682 . -1) (undo-tree-id3683 . -1) (undo-tree-id3684 . -1) (undo-tree-id3685 . -1) (undo-tree-id3686 . -1) (undo-tree-id3687 . -1) (undo-tree-id3688 . -1) (undo-tree-id3689 . -1) (undo-tree-id3690 . -1) (undo-tree-id3691 . -1) (undo-tree-id3692 . -1) (undo-tree-id3693 . -1) (undo-tree-id3694 . -1) (#("i" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -3687) (undo-tree-id3695 . -1) (undo-tree-id3696 . -1) (undo-tree-id3697 . -1) (undo-tree-id3698 . -1) (undo-tree-id3699 . -1) (undo-tree-id3700 . -1) (undo-tree-id3701 . -1) (undo-tree-id3702 . -1) (undo-tree-id3703 . -1) (undo-tree-id3704 . -1) (undo-tree-id3705 . -1) (undo-tree-id3706 . -1) (undo-tree-id3707 . -1) (undo-tree-id3708 . -1) (undo-tree-id3709 . -1) (undo-tree-id3710 . -1) (undo-tree-id3711 . -1) (undo-tree-id3712 . -1) (undo-tree-id3713 . -1) (undo-tree-id3714 . -1) (undo-tree-id3715 . -1) (undo-tree-id3716 . -1) (undo-tree-id3717 . -1) (undo-tree-id3718 . -1) (undo-tree-id3719 . -1) (undo-tree-id3720 . -1) (undo-tree-id3721 . -1) (#("s" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -3688) (undo-tree-id3722 . -1) (undo-tree-id3723 . -1) (undo-tree-id3724 . -1) (undo-tree-id3725 . -1) (undo-tree-id3726 . -1) (undo-tree-id3727 . -1) (undo-tree-id3728 . -1) (undo-tree-id3729 . -1) (undo-tree-id3730 . -1) (undo-tree-id3731 . -1) (undo-tree-id3732 . -1) (undo-tree-id3733 . -1) (undo-tree-id3734 . -1) (undo-tree-id3735 . -1) (undo-tree-id3736 . -1) (undo-tree-id3737 . -1) (undo-tree-id3738 . -1) (undo-tree-id3739 . -1) (undo-tree-id3740 . -1) (undo-tree-id3741 . -1) (undo-tree-id3742 . -1) (undo-tree-id3743 . -1) (undo-tree-id3744 . -1) (#("e" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -3689) (undo-tree-id3745 . -1) (undo-tree-id3746 . -1) (undo-tree-id3747 . -1) (undo-tree-id3748 . -1) (undo-tree-id3749 . -1) (undo-tree-id3750 . -1) (undo-tree-id3751 . -1) (undo-tree-id3752 . -1) (undo-tree-id3753 . -1) (undo-tree-id3754 . -1) (undo-tree-id3755 . -1) (undo-tree-id3756 . -1) (undo-tree-id3757 . -1) (undo-tree-id3758 . -1) (undo-tree-id3759 . -1) (undo-tree-id3760 . -1) (undo-tree-id3761 . -1) (undo-tree-id3762 . -1) (undo-tree-id3763 . -1) 3690 (#("7" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -3690) (undo-tree-id3764 . -1) (undo-tree-id3765 . -1) (undo-tree-id3766 . -1) (undo-tree-id3767 . -1) (undo-tree-id3768 . -1) (undo-tree-id3769 . -1) (undo-tree-id3770 . -1) (undo-tree-id3771 . -1) (undo-tree-id3772 . -1) (undo-tree-id3773 . -1) (undo-tree-id3774 . -1) (undo-tree-id3775 . -1) (undo-tree-id3776 . -1) (undo-tree-id3777 . -1) (undo-tree-id3778 . -1) (#("5" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -3691) (undo-tree-id3779 . -1) (undo-tree-id3780 . -1) (undo-tree-id3781 . -1) (undo-tree-id3782 . -1) (undo-tree-id3783 . -1) (undo-tree-id3784 . -1) (undo-tree-id3785 . -1) (undo-tree-id3786 . -1) (undo-tree-id3787 . -1) (undo-tree-id3788 . -1) (undo-tree-id3789 . -1) (#("0" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -3692) (undo-tree-id3790 . -1) (undo-tree-id3791 . -1) (undo-tree-id3792 . -1) (undo-tree-id3793 . -1) (undo-tree-id3794 . -1) (undo-tree-id3795 . -1) (undo-tree-id3796 . -1) 3693) nil (26429 23889 17208 627000) 0 nil])
([nil nil ((3688 . 3857) (#("|:---------------------------------------------------:|:-----------------------------------------------------:|:-----------------------------------------------------:|
" 0 167 (face (markdown-table-face) wrap-prefix "  " fontified nil) 167 168 (font-lock-multiline t face (markdown-table-face) wrap-prefix "  " fontified nil)) . 3519) (undo-tree-id4220 . -168) (undo-tree-id4221 . -168) (3350 . 3519) (#("| Gauss                                                 | OneStep                                                   | Iterative                                                   |
" 0 179 (face (markdown-table-face) wrap-prefix "  " fontified nil) 179 180 (font-lock-multiline t face (markdown-table-face) wrap-prefix "  " fontified nil)) . 3350) (undo-tree-id4222 . -118) (undo-tree-id4223 . -118) (undo-tree-id4224 . -118) (undo-tree-id4225 . -118) (undo-tree-id4226 . -118) (undo-tree-id4227 . -118) (undo-tree-id4228 . -118) (undo-tree-id4229 . -118) (undo-tree-id4230 . -118) (undo-tree-id4231 . -118) (undo-tree-id4232 . -118) (undo-tree-id4233 . -118) (undo-tree-id4234 . -118) (undo-tree-id4235 . -118) (undo-tree-id4236 . -118) (undo-tree-id4237 . -118) (undo-tree-id4238 . -118) (undo-tree-id4239 . -118) (undo-tree-id4240 . -118) (3181 . 3350) 3696 (t 26429 23889 33951 974000)) nil (26429 23927 299841 869000) 0 nil])
([nil nil ((#("![dx]({{site.baseurl}}/assets/proj5/1.4_clean.png)
" 0 1 (face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup fontified t wrap-prefix "  ") 1 2 (face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup fontified t wrap-prefix "  ") 2 4 (face markdown-link-face help-echo "{{site.baseurl}}/assets/proj5/1.4_clean.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ") 4 5 (face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup fontified t wrap-prefix "  ") 5 6 (face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup fontified t wrap-prefix "  ") 6 49 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ") 49 50 (face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup fontified t wrap-prefix "  ") 50 51 (wrap-prefix "  " fontified t)) . 3129) (undo-tree-id4212 . -51) (undo-tree-id4213 . -1) (undo-tree-id4214 . -51) (undo-tree-id4215 . -1) (undo-tree-id4216 . -51) (undo-tree-id4217 . -1) (undo-tree-id4218 . -1) (undo-tree-id4219 . -1) 3130) nil (26429 23927 296864 740000) 0 nil])
([nil nil ((3130 . 3132) (3123 . 3130) (3102 . 3123) (#("n" 0 1 (wrap-prefix "  " fontified t)) . -3102) (undo-tree-id4157 . -1) (undo-tree-id4158 . -1) (undo-tree-id4159 . -1) 3103 (3101 . 3103) (#("u" 0 1 (wrap-prefix "  " fontified t)) . -3101) (undo-tree-id4160 . -1) (undo-tree-id4161 . -1) (undo-tree-id4162 . -1) 3102 (3095 . 3102) (#("apply " 0 6 (wrap-prefix "  " fontified t)) . -3095) (undo-tree-id4163 . -6) (undo-tree-id4164 . -1) (undo-tree-id4165 . -2) (undo-tree-id4166 . -1) (undo-tree-id4167 . -3) (undo-tree-id4168 . -2) (undo-tree-id4169 . -4) (undo-tree-id4170 . -3) (undo-tree-id4171 . -5) (undo-tree-id4172 . -4) (undo-tree-id4173 . -6) (undo-tree-id4174 . -5) (undo-tree-id4175 . -6) (undo-tree-id4176 . -6) (undo-tree-id4177 . -6) (undo-tree-id4178 . -6) (undo-tree-id4179 . -6) (undo-tree-id4180 . -6) (undo-tree-id4181 . -6) (undo-tree-id4182 . -6) (undo-tree-id4183 . -6) (undo-tree-id4184 . -6) (undo-tree-id4185 . -6) (undo-tree-id4186 . -6) (undo-tree-id4187 . -6) (undo-tree-id4188 . -6) (undo-tree-id4189 . -6) (undo-tree-id4190 . -6) (undo-tree-id4191 . -6) (undo-tree-id4192 . -6) (undo-tree-id4193 . -6) 3101 (#("multipl" 0 7 (wrap-prefix "  " fontified t)) . -3101) (undo-tree-id4194 . -7) (undo-tree-id4195 . -1) (undo-tree-id4196 . -2) (undo-tree-id4197 . -1) (undo-tree-id4198 . -3) (undo-tree-id4199 . -2) (undo-tree-id4200 . -4) (undo-tree-id4201 . -3) (undo-tree-id4202 . -5) (undo-tree-id4203 . -4) (undo-tree-id4204 . -6) (undo-tree-id4205 . -5) (undo-tree-id4206 . -7) (undo-tree-id4207 . -6) (undo-tree-id4208 . -7) 3108 (3105 . 3108) (3084 . 3105) (#("w" 0 1 (wrap-prefix "  " fontified t)) . -3084) (undo-tree-id4209 . -1) (undo-tree-id4210 . -1) (undo-tree-id4211 . -1) 3085 (3066 . 3085) (3065 . 3066) (3065 . 3066)) nil (26429 23927 296850 103000) 0 nil])
([nil nil ((3132 . 3151) (t 26429 23927 315517 775000)) nil (26429 23933 96409 869000) 0 nil])
([nil nil ((3154 . 3167) (#("t" 0 1 (wrap-prefix "  " fontified t)) . -3154) (undo-tree-id4241 . -1) (undo-tree-id4242 . -1) (undo-tree-id4243 . -1) (undo-tree-id4244 . -1) (undo-tree-id4245 . -1) (undo-tree-id4246 . -1) (undo-tree-id4247 . -1) (#("e" 0 1 (wrap-prefix "  " fontified t)) . -3155) (undo-tree-id4248 . -1) (undo-tree-id4249 . -1) (undo-tree-id4250 . -1) 3156 (3150 . 3156) (t 26429 23933 112603 455000)) nil (26429 23942 951663 280000) 0 nil])
([nil nil ((3273 . 3283) (3252 . 3273) (3234 . 3252) (3233 . 3234) (t 26429 23942 967749 112000) 3233) nil (26429 23954 955442 823000) 0 nil])
([nil nil ((3283 . 3284) (t 26429 23954 961926 383000) 3282) nil (26429 23958 116479 642000) 0 nil])
([nil nil ((#("|                                                       |                                                         |                                                    |
" 0 168 (face (markdown-table-face) fontified t wrap-prefix "  ") 168 169 (font-lock-multiline t face (markdown-table-face) fontified t wrap-prefix "  ")) . 3792) (undo-tree-id4251 . -169) (undo-tree-id4252 . -169) (undo-tree-id4253 . -169) (undo-tree-id4254 . -169) (undo-tree-id4255 . -169) (undo-tree-id4256 . -169) (undo-tree-id4257 . -169) (undo-tree-id4258 . -169) (undo-tree-id4259 . -169) (t 26429 23958 132973 252000)) nil (26429 23963 766404 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3793 . 3794) (#("
" 0 1 (fontified nil wrap-prefix "  " font-lock-multiline t)) . -3819) (3793 . 3820) (t 26429 23963 784056 772000)) nil (26429 24107 396004 513000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix "  " fontified t)) . 3793) (undo-tree-id4390 . -1) (undo-tree-id4391 . -1) (undo-tree-id4392 . -1) (undo-tree-id4393 . -1)) nil (26429 24107 396003 772000) 0 nil])
([nil nil ((3797 . 3798) (#("4" 0 1 (face markdown-header-face-1 markdown-heading-1-atx (3793 3818 nil nil nil nil nil nil 3793 3795 3795 3818 3818 3818 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (3793 3818 nil nil nil nil nil nil 3793 3795 3795 3818 3818 3818 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ")) . -3797) (undo-tree-id4385 . -1) (undo-tree-id4386 . -1) (undo-tree-id4387 . -1) (undo-tree-id4388 . -1) (undo-tree-id4389 . -1) 3798) nil (26429 24107 396001 47000) 0 nil])
([nil nil ((#("Iterative Denoising" 0 1 (face markdown-header-face-1 markdown-heading-1-atx (3793 3818 nil nil nil nil nil nil 3793 3795 3795 3818 3818 3818 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (3793 3818 nil nil nil nil nil nil 3793 3795 3795 3818 3818 3818 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ") 1 2 (face markdown-header-face-1 markdown-heading-1-atx (3793 3818 nil nil nil nil nil nil 3793 3795 3795 3818 3818 3818 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (3793 3818 nil nil nil nil nil nil 3793 3795 3795 3818 3818 3818 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ") 2 3 (face markdown-header-face-1 markdown-heading-1-atx (3793 3818 nil nil nil nil nil nil 3793 3795 3795 3818 3818 3818 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (3793 3818 nil nil nil nil nil nil 3793 3795 3795 3818 3818 3818 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ") 3 4 (face markdown-header-face-1 markdown-heading-1-atx (3793 3818 nil nil nil nil nil nil 3793 3795 3795 3818 3818 3818 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (3793 3818 nil nil nil nil nil nil 3793 3795 3795 3818 3818 3818 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ") 4 5 (face markdown-header-face-1 markdown-heading-1-atx (3793 3818 nil nil nil nil nil nil 3793 3795 3795 3818 3818 3818 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (3793 3818 nil nil nil nil nil nil 3793 3795 3795 3818 3818 3818 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ") 5 6 (face markdown-header-face-1 markdown-heading-1-atx (3793 3818 nil nil nil nil nil nil 3793 3795 3795 3818 3818 3818 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (3793 3818 nil nil nil nil nil nil 3793 3795 3795 3818 3818 3818 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ") 6 7 (face markdown-header-face-1 markdown-heading-1-atx (3793 3818 nil nil nil nil nil nil 3793 3795 3795 3818 3818 3818 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (3793 3818 nil nil nil nil nil nil 3793 3795 3795 3818 3818 3818 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ") 7 8 (face markdown-header-face-1 markdown-heading-1-atx (3793 3818 nil nil nil nil nil nil 3793 3795 3795 3818 3818 3818 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (3793 3818 nil nil nil nil nil nil 3793 3795 3795 3818 3818 3818 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ") 8 9 (face markdown-header-face-1 markdown-heading-1-atx (3793 3818 nil nil nil nil nil nil 3793 3795 3795 3818 3818 3818 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (3793 3818 nil nil nil nil nil nil 3793 3795 3795 3818 3818 3818 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ") 9 10 (face markdown-header-face-1 markdown-heading-1-atx (3793 3818 nil nil nil nil nil nil 3793 3795 3795 3818 3818 3818 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (3793 3818 nil nil nil nil nil nil 3793 3795 3795 3818 3818 3818 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ") 10 11 (face markdown-header-face-1 markdown-heading-1-atx (3793 3818 nil nil nil nil nil nil 3793 3795 3795 3818 3818 3818 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (3793 3818 nil nil nil nil nil nil 3793 3795 3795 3818 3818 3818 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ") 11 12 (face markdown-header-face-1 markdown-heading-1-atx (3793 3818 nil nil nil nil nil nil 3793 3795 3795 3818 3818 3818 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (3793 3818 nil nil nil nil nil nil 3793 3795 3795 3818 3818 3818 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ") 12 13 (face markdown-header-face-1 markdown-heading-1-atx (3793 3818 nil nil nil nil nil nil 3793 3795 3795 3818 3818 3818 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (3793 3818 nil nil nil nil nil nil 3793 3795 3795 3818 3818 3818 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ") 13 14 (face markdown-header-face-1 markdown-heading-1-atx (3793 3818 nil nil nil nil nil nil 3793 3795 3795 3818 3818 3818 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (3793 3818 nil nil nil nil nil nil 3793 3795 3795 3818 3818 3818 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ") 14 15 (face markdown-header-face-1 markdown-heading-1-atx (3793 3818 nil nil nil nil nil nil 3793 3795 3795 3818 3818 3818 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (3793 3818 nil nil nil nil nil nil 3793 3795 3795 3818 3818 3818 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ") 15 16 (face markdown-header-face-1 markdown-heading-1-atx (3793 3818 nil nil nil nil nil nil 3793 3795 3795 3818 3818 3818 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (3793 3818 nil nil nil nil nil nil 3793 3795 3795 3818 3818 3818 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ") 16 17 (face markdown-header-face-1 markdown-heading-1-atx (3793 3818 nil nil nil nil nil nil 3793 3795 3795 3818 3818 3818 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (3793 3818 nil nil nil nil nil nil 3793 3795 3795 3818 3818 3818 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ") 17 18 (face markdown-header-face-1 markdown-heading-1-atx (3793 3818 nil nil nil nil nil nil 3793 3795 3795 3818 3818 3818 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (3793 3818 nil nil nil nil nil nil 3793 3795 3795 3818 3818 3818 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ") 18 19 (font-lock-multiline t face markdown-header-face-1 markdown-heading-1-atx (3793 3818 nil nil nil nil nil nil 3793 3795 3795 3818 3818 3818 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (3793 3818 nil nil nil nil nil nil 3793 3795 3795 3818 3818 3818 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ")) . 3799) (undo-tree-id4383 . -19) (undo-tree-id4384 . -19)) nil (26429 24107 395997 841000) 0 nil])
([nil nil ((3820 . 3822) (3799 . 3820)) nil (26429 24107 395993 102000) 0 nil])
([nil nil ((3889 . 3890) (3882 . 3890) (#("-" 0 1 (wrap-prefix "  " fontified t)) . -3882) (undo-tree-id4291 . -1) (undo-tree-id4292 . -1) (undo-tree-id4293 . -1) (undo-tree-id4294 . -1) (undo-tree-id4295 . -1) (undo-tree-id4296 . -1) (undo-tree-id4297 . -1) (undo-tree-id4298 . -1) (undo-tree-id4299 . -1) (undo-tree-id4300 . -1) (undo-tree-id4301 . -1) (#("n" 0 1 (wrap-prefix "  " fontified t)) . -3883) (undo-tree-id4302 . -1) (undo-tree-id4303 . -1) (undo-tree-id4304 . -1) (undo-tree-id4305 . -1) (undo-tree-id4306 . -1) (undo-tree-id4307 . -1) (undo-tree-id4308 . -1) (#("o" 0 1 (wrap-prefix "  " fontified t)) . -3884) (undo-tree-id4309 . -1) (undo-tree-id4310 . -1) (undo-tree-id4311 . -1) 3885 (3877 . 3885) (#("\"" 0 1 (wrap-prefix "  " fontified nil)) . -3877) (undo-tree-id4312 . -1) (undo-tree-id4313 . -1) (undo-tree-id4314 . -1) (undo-tree-id4315 . -1) (undo-tree-id4316 . -1) (undo-tree-id4317 . -1) (undo-tree-id4318 . -1) (undo-tree-id4319 . -1) (undo-tree-id4320 . -1) (undo-tree-id4321 . -1) (undo-tree-id4322 . -1) (undo-tree-id4323 . -1) (undo-tree-id4324 . -1) (#("\"" 0 1 (wrap-prefix "  " fontified t)) . 3878) (#("pure" 0 4 (wrap-prefix "  " fontified t)) . -3878) (undo-tree-id4325 . -4) (undo-tree-id4326 . -1) (undo-tree-id4327 . -2) (undo-tree-id4328 . -1) (undo-tree-id4329 . -3) (undo-tree-id4330 . -2) (undo-tree-id4331 . -4) (undo-tree-id4332 . -3) (undo-tree-id4333 . -4) 3882 (3878 . 3882) (3866 . 3879) (3848 . 3866) (#("c" 0 1 (wrap-prefix "  " fontified t)) . -3848) (undo-tree-id4334 . -1) (undo-tree-id4335 . -1) (undo-tree-id4336 . -1) (undo-tree-id4337 . -1) (undo-tree-id4338 . -1) (undo-tree-id4339 . -1) (undo-tree-id4340 . -1) (undo-tree-id4341 . -1) (undo-tree-id4342 . -1) (undo-tree-id4343 . -1) (undo-tree-id4344 . -1) (undo-tree-id4345 . -1) (undo-tree-id4346 . -1) (#("i" 0 1 (wrap-prefix "  " fontified t)) . -3849) (undo-tree-id4347 . -1) (undo-tree-id4348 . -1) (undo-tree-id4349 . -1) (undo-tree-id4350 . -1) (undo-tree-id4351 . -1) (undo-tree-id4352 . -1) (undo-tree-id4353 . -1) (#("o" 0 1 (wrap-prefix "  " fontified t)) . -3850) (undo-tree-id4354 . -1) (undo-tree-id4355 . -1) (undo-tree-id4356 . -1) 3851 (3843 . 3851) (#("diffucion" 0 9 (wrap-prefix "  " fontified t)) . -3843) (undo-tree-id4357 . -9) (undo-tree-id4358 . -1) (undo-tree-id4359 . -1) (undo-tree-id4360 . -1) (undo-tree-id4361 . -1) (undo-tree-id4362 . -1) (undo-tree-id4363 . -2) (undo-tree-id4364 . -1) (undo-tree-id4365 . -3) (undo-tree-id4366 . -2) (undo-tree-id4367 . -4) (undo-tree-id4368 . -3) (undo-tree-id4369 . -5) (undo-tree-id4370 . -4) (undo-tree-id4371 . -6) (undo-tree-id4372 . -5) (undo-tree-id4373 . -7) (undo-tree-id4374 . -6) (undo-tree-id4375 . -8) (undo-tree-id4376 . -7) (undo-tree-id4377 . -9) (undo-tree-id4378 . -8) (undo-tree-id4379 . -9) 3852 (3844 . 3852) (#("u" 0 1 (wrap-prefix "  " fontified t)) . -3844) (undo-tree-id4380 . -1) (undo-tree-id4381 . -1) (undo-tree-id4382 . -1) 3845 (3838 . 3845) (3824 . 3838) (3823 . 3824) (3822 . 3823) 3821) nil (26429 24107 395986 860000) 0 nil])
([nil nil ((#("(.)" 0 3 (wrap-prefix "  " fontified t)) . 3888) (undo-tree-id4278 . 1) (undo-tree-id4279 . -1) (undo-tree-id4280 . -1) (undo-tree-id4281 . -1) (undo-tree-id4282 . -2) (undo-tree-id4283 . -1) (undo-tree-id4284 . -1) (undo-tree-id4285 . -1) (undo-tree-id4286 . -1) (undo-tree-id4287 . -1) (undo-tree-id4288 . -1) (undo-tree-id4289 . -1) (undo-tree-id4290 . -1)) nil (26429 24107 390459 402000) 0 nil])
([nil nil ((3888 . 3890)) nil (26429 24107 390447 529000) 0 nil])
([nil nil ((3902 . 3910) (#("sampels" 0 7 (wrap-prefix "  " fontified t)) . -3902) (undo-tree-id4260 . -7) (undo-tree-id4261 . -1) (undo-tree-id4262 . -2) (undo-tree-id4263 . -1) (undo-tree-id4264 . -3) (undo-tree-id4265 . -2) (undo-tree-id4266 . -4) (undo-tree-id4267 . -3) (undo-tree-id4268 . -5) (undo-tree-id4269 . -4) (undo-tree-id4270 . -6) (undo-tree-id4271 . -5) (undo-tree-id4272 . -7) (undo-tree-id4273 . -6) (undo-tree-id4274 . -7) 3909 (3902 . 3909) (#("a" 0 1 (wrap-prefix "  " fontified t)) . -3902) (undo-tree-id4275 . -1) (undo-tree-id4276 . -1) (undo-tree-id4277 . -1) 3903 (3890 . 3903)) nil (26429 24107 390445 956000) 0 nil])
([nil nil ((3910 . 3911) 3909) nil (26429 24107 390417 843000) 0 nil])
([nil nil ((3911 . 3912) (3910 . 3911) (t 26429 24107 413179 591000) 3909) nil (26429 24147 321033 7000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4419 . 4420) (nil fontified nil 3912 . 4420) (3912 . 4420)) nil (26429 24147 321032 125000) 0 nil])
([nil nil ((4080 . 4084)) nil (26429 24147 321031 764000) 0 nil])
([nil nil ((#("| ![dx]({{site.baseurl}}/assets/proj5/1.2_gauss750.png) | ![dx]({{site.baseurl}}/assets/proj5/1.3_onestep750.png) | ![dx]({{site.baseurl}}/assets/proj5/1.4_clean.png) |
" 0 2 (face (markdown-table-face) wrap-prefix "  " fontified nil) 2 3 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 3 4 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 4 6 (help-echo "{{site.baseurl}}/assets/proj5/1.2_gauss750.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) wrap-prefix "  " fontified nil) 6 7 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 7 8 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 8 54 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified nil) 54 55 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 55 58 (face (markdown-table-face) wrap-prefix "  " fontified nil) 58 59 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 59 60 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 60 62 (help-echo "{{site.baseurl}}/assets/proj5/1.3_onestep750.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) wrap-prefix "  " fontified nil) 62 63 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 63 64 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 64 112 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified nil) 112 113 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 113 116 (face (markdown-table-face) wrap-prefix "  " fontified nil) 116 117 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 117 118 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 118 120 (help-echo "{{site.baseurl}}/assets/proj5/1.4_clean.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) wrap-prefix "  " fontified nil) 120 121 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 121 122 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 122 165 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified nil) 165 166 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 166 168 (face (markdown-table-face) wrap-prefix "  " fontified nil) 168 169 (font-lock-multiline t face (markdown-table-face) wrap-prefix "  " fontified t)) . 4443) (undo-tree-id4405 . -169) (undo-tree-id4406 . 169) (undo-tree-id4407 . -169) (undo-tree-id4408 . -169) (undo-tree-id4409 . -169) (undo-tree-id4410 . -169) (undo-tree-id4411 . -169) (undo-tree-id4412 . -169) (4266 . 4443) (#("|:-----------------------------------------------------:|:-------------------------------------------------------:|:--------------------------------------------------:|
" 0 168 (face (markdown-table-face) wrap-prefix "  " fontified nil) 168 169 (font-lock-multiline t face (markdown-table-face) wrap-prefix "  " fontified nil)) . 4266) (undo-tree-id4413 . 169) (undo-tree-id4414 . -169) (undo-tree-id4415 . -169) (4089 . 4266) (#("| Gauss                                                 | OneStep                                                 | Iterative                                          | | |
" 0 172 (face (markdown-table-face) wrap-prefix "  " fontified nil) 172 173 (font-lock-multiline t face (markdown-table-face) wrap-prefix "  " fontified nil)) . 4089) (undo-tree-id4416 . 1) (undo-tree-id4417 . -171) (undo-tree-id4418 . -173) (undo-tree-id4419 . -173) (undo-tree-id4420 . -167) (undo-tree-id4421 . -168) (undo-tree-id4422 . -167) (undo-tree-id4423 . -168) (undo-tree-id4424 . -168) (undo-tree-id4425 . -169) (undo-tree-id4426 . -168) (undo-tree-id4427 . -170) (undo-tree-id4428 . -169) (undo-tree-id4429 . -171) (undo-tree-id4430 . -170) (undo-tree-id4431 . -172) (undo-tree-id4432 . -171) (undo-tree-id4433 . -171) (undo-tree-id4434 . -171) (undo-tree-id4435 . -171) (undo-tree-id4436 . -171) (undo-tree-id4437 . -171) (undo-tree-id4438 . -171) (undo-tree-id4439 . -171) (undo-tree-id4440 . -171) (undo-tree-id4441 . -171) (undo-tree-id4442 . -171) (undo-tree-id4443 . -171) (3912 . 4089) 4083) nil (26429 24147 321030 472000) 0 nil])
([nil nil ((3914 . 3915) (#("Gauss" 0 5 (wrap-prefix "  " face (markdown-table-face) fontified t)) . 3914)) nil (26429 24147 321008 410000) 0 nil])
([nil nil ((3966 . 3967) (#("OneStep" 0 7 (face (markdown-table-face) wrap-prefix "  " fontified t)) . 3966)) nil (26429 24147 321007 889000) 0 nil])
([nil nil ((4018 . 4019) (#("Iterative" 0 9 (face (markdown-table-face) wrap-prefix "  " fontified t)) . 4018)) nil (26429 24147 321007 208000) 0 nil])
([nil nil ((4018 . 4019) (#("2" 0 1 (face (markdown-table-face) wrap-prefix "  " fontified t)) . -4018) (undo-tree-id4399 . -1) (undo-tree-id4400 . -1) (undo-tree-id4401 . -1) (undo-tree-id4402 . -1) (undo-tree-id4403 . -1) (undo-tree-id4404 . -1) 4019) nil (26429 24147 321005 815000) 0 nil])
([nil nil ((4064 . 4065)) nil (26429 24147 319634 388000) 0 nil])
([nil nil ((4069 . 4070)) nil (26429 24147 321385 905000) 0 nil])
([nil nil ((#("/1.2_gauss750.png" 0 16 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t) 16 17 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . 4287) (undo-tree-id4577 . -16) (undo-tree-id4578 . -16) (undo-tree-id4579 . -16) (undo-tree-id4580 . -16) (undo-tree-id4581 . -16) (undo-tree-id4582 . -17) (undo-tree-id4583 . -16) (undo-tree-id4584 . -17) (undo-tree-id4585 . -17) (undo-tree-id4586 . -17) (undo-tree-id4587 . -17) 4304) nil (26429 24212 363140 951000) 0 nil] [nil nil ((#("/1.2_gauss750.pn" 0 16 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . 4287) (undo-tree-id4394 . -16) (undo-tree-id4395 . -16) (undo-tree-id4396 . -16) (undo-tree-id4397 . -16) (undo-tree-id4398 . -16) 4303) ((4287 . 4303)) (26429 24147 319629 379000) 0 nil])
([nil nil ((4290 . 4299) (#("4" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -4290) (undo-tree-id4574 . -1) (undo-tree-id4575 . -1) (undo-tree-id4576 . -1) 4291 (4290 . 4291) (4287 . 4290)) nil (26429 24212 363136 202000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 4349 . 4350) (nil fontified nil 4339 . 4350) (4339 . 4350) (#("1.3_onestep750.png" 0 18 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . 4339) (undo-tree-id4546 . -18) (undo-tree-id4547 . -17) (undo-tree-id4548 . -11) (undo-tree-id4549 . -14) (undo-tree-id4550 . -11) (undo-tree-id4551 . -15) (undo-tree-id4552 . -14) (undo-tree-id4553 . -18) (undo-tree-id4554 . -15) (undo-tree-id4555 . -17) (undo-tree-id4556 . -18) (undo-tree-id4557 . -17) (undo-tree-id4558 . -17) (undo-tree-id4559 . -17) (undo-tree-id4560 . -17) (undo-tree-id4561 . -15) (undo-tree-id4562 . -17) (undo-tree-id4563 . -14) (undo-tree-id4564 . -15) (undo-tree-id4565 . -4) (undo-tree-id4566 . -14) (undo-tree-id4567 . -3) (undo-tree-id4568 . -4) (undo-tree-id4569 . -2) (undo-tree-id4570 . -3) (undo-tree-id4571 . -1) (undo-tree-id4572 . -3) (undo-tree-id4573 . -1)) nil (26429 24212 363133 517000) 0 nil])
([nil nil ((4345 . 4346) (#("1" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -4345) (undo-tree-id4539 . -1) (undo-tree-id4540 . -1) (undo-tree-id4541 . -1) (undo-tree-id4542 . -1) (undo-tree-id4543 . -1) (undo-tree-id4544 . -1) (undo-tree-id4545 . -1) 4346) nil (26429 24212 363117 206000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4407 . 4408) (nil fontified nil 4390 . 4408) (4390 . 4408) (#("1.4_clean.png" 0 13 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . 4390) (undo-tree-id4503 . -13) (undo-tree-id4504 . -12) (undo-tree-id4505 . -1) (undo-tree-id4506 . -2) (undo-tree-id4507 . -1) (undo-tree-id4508 . -3) (undo-tree-id4509 . -2) (undo-tree-id4510 . -4) (undo-tree-id4511 . -3) (undo-tree-id4512 . -9) (undo-tree-id4513 . -4) (undo-tree-id4514 . -10) (undo-tree-id4515 . -9) (undo-tree-id4516 . -13) (undo-tree-id4517 . -10) (undo-tree-id4518 . -13) (undo-tree-id4519 . -13) (undo-tree-id4520 . -12) (undo-tree-id4521 . -13) (undo-tree-id4522 . -12) (undo-tree-id4523 . -12) (undo-tree-id4524 . -12) (undo-tree-id4525 . -12) (undo-tree-id4526 . -10) (undo-tree-id4527 . -12) (undo-tree-id4528 . -9) (undo-tree-id4529 . -10) (undo-tree-id4530 . -4) (undo-tree-id4531 . -9) (undo-tree-id4532 . -3) (undo-tree-id4533 . -4) (undo-tree-id4534 . -2) (undo-tree-id4535 . -3) (undo-tree-id4536 . -1) (undo-tree-id4537 . -2) (undo-tree-id4538 . -1)) nil (26429 24212 363113 189000) 0 nil])
([nil nil ((#("1.3_onestep750.png" 0 17 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t) 17 18 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . 4390) (undo-tree-id4481 . -17) (undo-tree-id4482 . -17) (undo-tree-id4483 . -17) (undo-tree-id4484 . -17) (undo-tree-id4485 . -17) (undo-tree-id4486 . -17) (undo-tree-id4487 . -17) (undo-tree-id4488 . -17) (undo-tree-id4489 . -17) (undo-tree-id4490 . -15) (undo-tree-id4491 . -17) (undo-tree-id4492 . -14) (undo-tree-id4493 . -15) (undo-tree-id4494 . -4) (undo-tree-id4495 . -14) (undo-tree-id4496 . -3) (undo-tree-id4497 . -4) (undo-tree-id4498 . -2) (undo-tree-id4499 . -3) (undo-tree-id4500 . -1) (undo-tree-id4501 . -2) (undo-tree-id4502 . -1)) nil (26429 24212 363094 43000) 0 nil])
([nil nil ((4394 . 4397) (#("o" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -4394) (undo-tree-id4460 . -1) (undo-tree-id4461 . -1) (undo-tree-id4462 . -1) (undo-tree-id4463 . -1) (undo-tree-id4464 . -1) (undo-tree-id4465 . -1) (undo-tree-id4466 . -1) (undo-tree-id4467 . -1) (undo-tree-id4468 . -1) (undo-tree-id4469 . -1) (undo-tree-id4470 . -1) (#("m" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -4395) (undo-tree-id4471 . -1) (undo-tree-id4472 . -1) (undo-tree-id4473 . -1) (undo-tree-id4474 . -1) (undo-tree-id4475 . -1) (undo-tree-id4476 . -1) (undo-tree-id4477 . -1) (#("e" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -4396) (undo-tree-id4478 . -1) (undo-tree-id4479 . -1) (undo-tree-id4480 . -1) 4397 (4390 . 4397)) nil (26429 24212 363081 248000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4444 . 4445) (nil fontified nil 4401 . 4445) (4401 . 4445) 4400) nil (26429 24212 360280 254000) 0 nil])
([nil nil ((4443 . 4448) (#("3" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -4443) (undo-tree-id4452 . -1) (undo-tree-id4453 . -1) (undo-tree-id4454 . -1) (undo-tree-id4455 . -1) (undo-tree-id4456 . -1) (undo-tree-id4457 . -1) (undo-tree-id4458 . -1) (undo-tree-id4459 . -1) 4444) nil (26429 24212 360279 312000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4496 . 4497) (nil fontified nil 4453 . 4497) (4453 . 4497) 4452) nil (26429 24212 360274 22000) 0 nil])
([nil nil ((4495 . 4500) (#("3" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -4495) (undo-tree-id4444 . -1) (undo-tree-id4445 . -1) (undo-tree-id4446 . -1) (undo-tree-id4447 . -1) (undo-tree-id4448 . -1) (undo-tree-id4449 . -1) (undo-tree-id4450 . -1) (undo-tree-id4451 . -1) 4496) nil (26429 24212 360272 419000) 0 nil])
([nil nil ((4397 . 4401)) nil (26429 24212 360246 139000) 0 nil])
([nil nil ((#("| ![dx]({{site.baseurl}}/assets/proj5/1.5_im1.png) | ![dx]({{site.baseurl}}/assets/proj5/1.5_im2.png) | ![dx]({{site.baseurl}}/assets/proj5/1.5_im3.png) | ![dx]({{site.baseurl}}/assets/proj5/1.5_im4.png)  | ![dx]({{site.baseurl}}/assets/proj5/1.5_im5.png)  |
" 0 2 (face (markdown-table-face) fontified nil wrap-prefix "  ") 2 3 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 3 4 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 4 6 (help-echo "{{site.baseurl}}/assets/proj5/1.5_im1.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) fontified nil wrap-prefix "  ") 6 7 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 7 8 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 8 49 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified nil wrap-prefix "  ") 49 50 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 50 53 (face (markdown-table-face) fontified nil wrap-prefix "  ") 53 54 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 54 55 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 55 57 (help-echo "{{site.baseurl}}/assets/proj5/1.5_im2.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) fontified nil wrap-prefix "  ") 57 58 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 58 59 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 59 89 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified nil wrap-prefix "  ") 89 99 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified nil wrap-prefix "  ") 99 100 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified nil wrap-prefix "  ") 100 101 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 101 104 (face (markdown-table-face) fontified nil wrap-prefix "  ") 104 105 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 105 106 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 106 108 (help-echo "{{site.baseurl}}/assets/proj5/1.5_im3.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) fontified nil wrap-prefix "  ") 108 109 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 109 110 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 110 151 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified nil wrap-prefix "  ") 151 152 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 152 155 (face (markdown-table-face) fontified nil wrap-prefix "  ") 155 156 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 156 157 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 157 159 (help-echo "{{site.baseurl}}/assets/proj5/1.5_im4.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) fontified nil wrap-prefix "  ") 159 160 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 160 161 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 161 202 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified nil wrap-prefix "  ") 202 203 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 203 207 (face (markdown-table-face) fontified nil wrap-prefix "  ") 207 208 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 208 209 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 209 211 (help-echo "{{site.baseurl}}/assets/proj5/1.5_im5.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) fontified nil wrap-prefix "  ") 211 212 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 212 213 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 213 254 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified nil wrap-prefix "  ") 254 255 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 255 258 (face (markdown-table-face) fontified nil wrap-prefix "  ") 258 259 (font-lock-multiline t face (markdown-table-face) fontified t wrap-prefix "  ")) . 4683) (undo-tree-id4588 . -207) (undo-tree-id4589 . -207) (undo-tree-id4590 . -249) (undo-tree-id4591 . 108) (undo-tree-id4592 . -104) (undo-tree-id4593 . 107) (undo-tree-id4594 . -89) (undo-tree-id4595 . -37) (undo-tree-id4596 . -37) (undo-tree-id4597 . -37) (undo-tree-id4598 . -37) (undo-tree-id4599 . -37) (undo-tree-id4600 . -37) (undo-tree-id4601 . -37) (undo-tree-id4602 . -37) (undo-tree-id4603 . -37) (undo-tree-id4604 . -40) (undo-tree-id4605 . -153) (undo-tree-id4606 . -89) (undo-tree-id4607 . -89) (undo-tree-id4608 . -89) (undo-tree-id4609 . -89) (undo-tree-id4610 . -89) (undo-tree-id4611 . -89) (undo-tree-id4612 . -89) (undo-tree-id4613 . -89) (undo-tree-id4614 . -89) (undo-tree-id4615 . -89) (undo-tree-id4616 . -89) (undo-tree-id4617 . -89) (undo-tree-id4618 . -89) (undo-tree-id4619 . -89) (undo-tree-id4620 . -89) (undo-tree-id4621 . -89) (undo-tree-id4622 . -89) (undo-tree-id4623 . -89) (undo-tree-id4624 . -89) (undo-tree-id4625 . -89) (undo-tree-id4626 . -89) (undo-tree-id4627 . -89) (undo-tree-id4628 . -89) (undo-tree-id4629 . -89) (undo-tree-id4630 . -89) (undo-tree-id4631 . -89) (undo-tree-id4632 . -89) (undo-tree-id4633 . -95) (undo-tree-id4634 . -95) (undo-tree-id4635 . -95) (undo-tree-id4636 . -95) (undo-tree-id4637 . -95) (undo-tree-id4638 . -140) (undo-tree-id4639 . -140) (undo-tree-id4640 . -140) (undo-tree-id4641 . -140) (undo-tree-id4642 . -140) (undo-tree-id4643 . -140) (undo-tree-id4644 . -140) (undo-tree-id4645 . -140) (undo-tree-id4646 . -140) (undo-tree-id4647 . -140) (undo-tree-id4648 . -140) (undo-tree-id4649 . -140) (undo-tree-id4650 . -140) (undo-tree-id4651 . -140) (undo-tree-id4652 . -140) (undo-tree-id4653 . -140) (undo-tree-id4654 . -140) (undo-tree-id4655 . -140) (undo-tree-id4656 . -140) (undo-tree-id4657 . -140) (undo-tree-id4658 . -140) (undo-tree-id4659 . -140) (undo-tree-id4660 . -140) (undo-tree-id4661 . -140) (undo-tree-id4662 . -140) (undo-tree-id4663 . -140) (undo-tree-id4664 . -140) (undo-tree-id4665 . -140) (undo-tree-id4666 . -140) (undo-tree-id4667 . -140) (undo-tree-id4668 . -140) (undo-tree-id4669 . -140) (undo-tree-id4670 . -140) (undo-tree-id4671 . -140) (undo-tree-id4672 . -140) (undo-tree-id4673 . -140) (undo-tree-id4674 . -140) (undo-tree-id4675 . -140) (undo-tree-id4676 . -140) (undo-tree-id4677 . -140) (undo-tree-id4678 . -140) (undo-tree-id4679 . -140) (undo-tree-id4680 . -140) (undo-tree-id4681 . -140) (undo-tree-id4682 . -140) (undo-tree-id4683 . -140) (undo-tree-id4684 . -140) (undo-tree-id4685 . -140) (undo-tree-id4686 . -140) (undo-tree-id4687 . -140) (undo-tree-id4688 . -140) (undo-tree-id4689 . -140) (undo-tree-id4690 . -140) (undo-tree-id4691 . -140) (undo-tree-id4692 . -140) (undo-tree-id4693 . -144) (undo-tree-id4694 . -144) (undo-tree-id4695 . -144) (undo-tree-id4696 . -144) (undo-tree-id4697 . -144) (undo-tree-id4698 . -144) (undo-tree-id4699 . -144) (undo-tree-id4700 . -144) (undo-tree-id4701 . -144) (undo-tree-id4702 . -147) (undo-tree-id4703 . -197) (undo-tree-id4704 . -197) (undo-tree-id4705 . -197) (undo-tree-id4706 . -197) (undo-tree-id4707 . -197) (undo-tree-id4708 . -155) (undo-tree-id4709 . -207) (undo-tree-id4710 . -249) (undo-tree-id4711 . -249) (undo-tree-id4712 . -249) (undo-tree-id4713 . -249) (undo-tree-id4714 . -249) (undo-tree-id4715 . -150) (undo-tree-id4716 . -150) (undo-tree-id4717 . -150) (undo-tree-id4718 . -150) (undo-tree-id4719 . -150) (undo-tree-id4720 . -150) (undo-tree-id4721 . -259) (undo-tree-id4722 . -150) (undo-tree-id4723 . -150) (undo-tree-id4724 . -151) (undo-tree-id4725 . -150) (undo-tree-id4726 . -153) (undo-tree-id4727 . -151) (undo-tree-id4728 . -155) (undo-tree-id4729 . -153) (undo-tree-id4730 . -157) (undo-tree-id4731 . -155) (undo-tree-id4732 . -155) (undo-tree-id4733 . -157) (undo-tree-id4734 . -153) (undo-tree-id4735 . -155) (undo-tree-id4736 . -153) (undo-tree-id4737 . -153) (undo-tree-id4738 . -153) (undo-tree-id4739 . -153) (undo-tree-id4740 . -153) (undo-tree-id4741 . -259) (4426 . 4683) (#("|:-----------------------------------------------------:|:-------------------------------------------------------:|:--------------------------------------------------:|---|---|
" 0 176 (face (markdown-table-face) fontified nil wrap-prefix "  ") 176 177 (font-lock-multiline t face (markdown-table-face) fontified nil wrap-prefix "  ")) . 4426) (undo-tree-id4742 . -177) (undo-tree-id4743 . -177) (4169 . 4426) (#("| 1                                                 | 2                                                 | 3                                          |  4 |  5 |
" 0 160 (face (markdown-table-face) fontified nil wrap-prefix "  ") 160 161 (font-lock-multiline t face (markdown-table-face) fontified nil wrap-prefix "  ")) . 4169) (3912 . 4169) 4403 (t 26429 24212 379730 994000)) nil (26429 24239 150942 332000) 0 nil])
([nil nil ((4323 . 4324)) nil (26429 24239 149282 909000) 0 nil])
([nil nil ((4374 . 4375)) nil (26429 24239 149282 639000) 0 nil])
([nil nil ((4376 . 4377)) nil (26429 24239 149282 17000) 0 nil])
([nil nil ((4427 . 4428)) nil (26429 24239 149276 6000) 0 nil])
([nil nil ((4688 . 4697) (#("
" 0 1 (fontified t wrap-prefix "  ")) . -4688) (undo-tree-id4859 . -1) (undo-tree-id4860 . -1) (undo-tree-id4861 . -1) (undo-tree-id4862 . -1) (undo-tree-id4863 . -1) (undo-tree-id4864 . -1) (undo-tree-id4865 . -1) (undo-tree-id4866 . -1) (undo-tree-id4867 . -1) (undo-tree-id4868 . -1) (undo-tree-id4869 . -1) 4689 (t 26429 24239 168126 923000)) nil (26429 24284 935432 819000) 0 nil])
([nil nil ((4777 . 4778) (#(" " 0 1 (fontified t wrap-prefix "  ")) . -4777) (undo-tree-id4744 . -1) (undo-tree-id4745 . -1) (undo-tree-id4746 . -1) 4778 (4764 . 4778) (4743 . 4764) (4736 . 4743) (#("mox " 0 4 (fontified t wrap-prefix "  ")) . -4736) (undo-tree-id4747 . -4) (undo-tree-id4748 . -1) (undo-tree-id4749 . -2) (undo-tree-id4750 . -1) (undo-tree-id4751 . -3) (undo-tree-id4752 . -2) (undo-tree-id4753 . -4) (undo-tree-id4754 . -3) (undo-tree-id4755 . -4) 4740 (4734 . 4740) (#("use " 0 4 (fontified t wrap-prefix "  ")) . -4734) (undo-tree-id4756 . -4) (undo-tree-id4757 . -1) (undo-tree-id4758 . -2) (undo-tree-id4759 . -1) (undo-tree-id4760 . -3) (undo-tree-id4761 . -2) (undo-tree-id4762 . -4) (undo-tree-id4763 . -3) (undo-tree-id4764 . -4) (undo-tree-id4765 . -4) (undo-tree-id4766 . -4) (undo-tree-id4767 . -4) (undo-tree-id4768 . -4) (undo-tree-id4769 . -4) (undo-tree-id4770 . -4) (undo-tree-id4771 . -4) 4738 (#("a " 0 2 (fontified t wrap-prefix "  ")) . -4738) (undo-tree-id4772 . -2) (undo-tree-id4773 . -1) (undo-tree-id4774 . -2) (undo-tree-id4775 . -1) (undo-tree-id4776 . -2) 4740 (4726 . 4740) (4718 . 4726) (#("sampling" 0 8 (fontified t wrap-prefix "  ")) . -4718) (undo-tree-id4777 . -8) (undo-tree-id4778 . -1) (undo-tree-id4779 . -2) (undo-tree-id4780 . -1) (undo-tree-id4781 . -3) (undo-tree-id4782 . -2) (undo-tree-id4783 . -4) (undo-tree-id4784 . -3) (undo-tree-id4785 . -5) (undo-tree-id4786 . -4) (undo-tree-id4787 . -6) (undo-tree-id4788 . -5) (undo-tree-id4789 . -7) (undo-tree-id4790 . -6) (undo-tree-id4791 . -7) (undo-tree-id4792 . -8) (undo-tree-id4793 . -7) (undo-tree-id4794 . -8) (undo-tree-id4795 . -8) (undo-tree-id4796 . -8) (undo-tree-id4797 . -8) (undo-tree-id4798 . -8) 4726 (4721 . 4726) (4700 . 4721) (4698 . 4700) (4694 . 4698) (#("Classifi" 0 1 (face markdown-header-face-1 markdown-heading-1-atx (4688 4702 nil nil nil nil nil nil 4688 4690 4690 4702 4702 4702 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (4688 4702 nil nil nil nil nil nil 4688 4690 4690 4702 4702 4702 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ") 1 2 (face markdown-header-face-1 markdown-heading-1-atx (4688 4702 nil nil nil nil nil nil 4688 4690 4690 4702 4702 4702 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (4688 4702 nil nil nil nil nil nil 4688 4690 4690 4702 4702 4702 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ") 2 3 (face markdown-header-face-1 markdown-heading-1-atx (4688 4702 nil nil nil nil nil nil 4688 4690 4690 4702 4702 4702 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (4688 4702 nil nil nil nil nil nil 4688 4690 4690 4702 4702 4702 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ") 3 4 (face markdown-header-face-1 markdown-heading-1-atx (4688 4702 nil nil nil nil nil nil 4688 4690 4690 4702 4702 4702 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (4688 4702 nil nil nil nil nil nil 4688 4690 4690 4702 4702 4702 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ") 4 5 (face markdown-header-face-1 markdown-heading-1-atx (4688 4702 nil nil nil nil nil nil 4688 4690 4690 4702 4702 4702 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (4688 4702 nil nil nil nil nil nil 4688 4690 4690 4702 4702 4702 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ") 5 6 (face markdown-header-face-1 markdown-heading-1-atx (4688 4702 nil nil nil nil nil nil 4688 4690 4690 4702 4702 4702 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (4688 4702 nil nil nil nil nil nil 4688 4690 4690 4702 4702 4702 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ") 6 7 (face markdown-header-face-1 markdown-heading-1-atx (4688 4702 nil nil nil nil nil nil 4688 4690 4690 4702 4702 4702 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (4688 4702 nil nil nil nil nil nil 4688 4690 4690 4702 4702 4702 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ") 7 8 (font-lock-multiline t face markdown-header-face-1 markdown-heading-1-atx (4688 4702 nil nil nil nil nil nil 4688 4690 4690 4702 4702 4702 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (4688 4702 nil nil nil nil nil nil 4688 4690 4690 4702 4702 4702 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ")) . -4694) (undo-tree-id4799 . -8) (undo-tree-id4800 . -1) (undo-tree-id4801 . -1) (undo-tree-id4802 . -1) (undo-tree-id4803 . -1) (undo-tree-id4804 . -1) (undo-tree-id4805 . -1) (undo-tree-id4806 . -1) (undo-tree-id4807 . -1) (undo-tree-id4808 . -1) (undo-tree-id4809 . -1) (undo-tree-id4810 . -1) (undo-tree-id4811 . -1) (undo-tree-id4812 . -1) (undo-tree-id4813 . -1) (undo-tree-id4814 . -1) (undo-tree-id4815 . -1) (undo-tree-id4816 . -1) (undo-tree-id4817 . -1) (undo-tree-id4818 . -1) (undo-tree-id4819 . -2) (undo-tree-id4820 . -1) (undo-tree-id4821 . -3) (undo-tree-id4822 . -2) (undo-tree-id4823 . -4) (undo-tree-id4824 . -3) (undo-tree-id4825 . -5) (undo-tree-id4826 . -4) (undo-tree-id4827 . -6) (undo-tree-id4828 . -5) (undo-tree-id4829 . -7) (undo-tree-id4830 . -6) (undo-tree-id4831 . -7) (undo-tree-id4832 . -7) (undo-tree-id4833 . -8) (undo-tree-id4834 . -7) (undo-tree-id4835 . -8) 4702 (4695 . 4702) (#("F" 0 1 (font-lock-multiline t face markdown-header-face-1 markdown-heading-1-atx (4688 4696 nil nil nil nil nil nil 4688 4690 4690 4696 4696 4696 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (4688 4696 nil nil nil nil nil nil 4688 4690 4690 4696 4696 4696 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ")) . -4695) (undo-tree-id4836 . -1) (undo-tree-id4837 . -1) (undo-tree-id4838 . -1) (undo-tree-id4839 . -1) (undo-tree-id4840 . -1) (undo-tree-id4841 . -1) (undo-tree-id4842 . -1) (undo-tree-id4843 . -1) (undo-tree-id4844 . -1) (undo-tree-id4845 . -1) (undo-tree-id4846 . -1) (undo-tree-id4847 . -1) (undo-tree-id4848 . -1) (undo-tree-id4849 . -1) (undo-tree-id4850 . -1) (undo-tree-id4851 . -1) (undo-tree-id4852 . -1) 4696 (#("G" 0 1 (font-lock-multiline t face markdown-header-face-1 markdown-heading-1-atx (4688 4697 nil nil nil nil nil nil 4688 4690 4690 4697 4697 4697 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (4688 4697 nil nil nil nil nil nil 4688 4690 4690 4697 4697 4697 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ")) . -4696) (undo-tree-id4853 . -1) (undo-tree-id4854 . -1) (undo-tree-id4855 . -1) (undo-tree-id4856 . -1) (undo-tree-id4857 . -1) (undo-tree-id4858 . -1) 4697) nil (26429 24284 935423 942000) 0 nil])
([nil nil ((4778 . 4779) 4777) nil (26429 24284 933245 296000) 0 nil])
([nil nil ((4778 . 4798) (t 26429 24284 949803 570000)) nil (26429 24349 53921 978000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5574 . 5575) (nil fontified nil 4799 . 5575) (4799 . 5575)) nil (26429 24349 53921 127000) 0 nil])
([nil nil ((5357 . 5358) (#("5" 0 1 (wrap-prefix "  " font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t)) . -5357) (undo-tree-id4882 . -1) (undo-tree-id4883 . -1) (undo-tree-id4884 . -1) (undo-tree-id4885 . -1) (undo-tree-id4886 . -1) 5358) nil (26429 24349 53920 14000) 0 nil])
([nil nil ((5408 . 5409) (#("5" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -5408) (undo-tree-id4877 . -1) (undo-tree-id4878 . -1) (undo-tree-id4879 . -1) (undo-tree-id4880 . -1) (undo-tree-id4881 . -1) 5409) nil (26429 24349 53915 195000) 0 nil])
([nil nil ((5459 . 5460) (#("5" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -5459) (undo-tree-id4872 . -1) (undo-tree-id4873 . -1) (undo-tree-id4874 . -1) (undo-tree-id4875 . -1) (undo-tree-id4876 . -1) 5460) nil (26429 24349 53910 66000) 0 nil])
([nil nil ((5510 . 5511) (#("5" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . 5510)) nil (26429 24349 53904 846000) 0 nil])
([nil nil ((5561 . 5562) (#("5" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . 5561) (undo-tree-id4870 . -1) (undo-tree-id4871 . -1)) nil (26429 24349 53899 696000) 0 nil])
([nil nil ((4798 . 4799) (t 26429 24349 72751 296000) 4797) nil (26429 24354 144888 77000) 0 nil])
([nil nil ((4798 . 4815) (#("wtiht" 0 5 (fontified t wrap-prefix "  ")) . -4798) (undo-tree-id4919 . -5) (undo-tree-id4920 . -1) (undo-tree-id4921 . -2) (undo-tree-id4922 . -1) (undo-tree-id4923 . -3) (undo-tree-id4924 . -2) (undo-tree-id4925 . -4) (undo-tree-id4926 . -3) (undo-tree-id4927 . -5) (undo-tree-id4928 . -3) (undo-tree-id4929 . -5) 4803 (4797 . 4803) (t 26429 24354 152826 377000)) nil (26429 24381 739174 887000) 0 nil])
([nil nil ((4807 . 4812) (#("scsale" 0 6 (fontified t wrap-prefix "  ")) . 4807) (undo-tree-id4907 . -1) (undo-tree-id4908 . -2) (undo-tree-id4909 . -1) (undo-tree-id4910 . -3) (undo-tree-id4911 . -2) (undo-tree-id4912 . -4) (undo-tree-id4913 . -3) (undo-tree-id4914 . -5) (undo-tree-id4915 . -4) (undo-tree-id4916 . -6) (undo-tree-id4917 . -5) (undo-tree-id4918 . -6)) nil (26429 24381 739163 385000) 0 nil])
([nil nil ((4816 . 4817) (#("6" 0 1 (fontified t wrap-prefix "  ")) . -4816) (undo-tree-id4887 . -1) (undo-tree-id4888 . -1) (undo-tree-id4889 . -1) 4817 (4816 . 4817) (#("6" 0 1 (fontified t wrap-prefix "  ")) . -4816) (undo-tree-id4890 . -1) (undo-tree-id4891 . -1) (undo-tree-id4892 . -1) (undo-tree-id4893 . -1) (undo-tree-id4894 . -1) (undo-tree-id4895 . -1) (#("7" 0 1 (fontified t wrap-prefix "  ")) . -4817) (undo-tree-id4896 . -1) (undo-tree-id4897 . -1) (undo-tree-id4898 . -1) 4818 (4813 . 4818) (#("$" 0 1 (fontified t wrap-prefix "  ")) . -4813) (undo-tree-id4899 . -1) (undo-tree-id4900 . -1) (undo-tree-id4901 . -1) (undo-tree-id4902 . -1) (undo-tree-id4903 . -1) (undo-tree-id4904 . -1) (undo-tree-id4905 . -1) (undo-tree-id4906 . -1) 4814) nil (26429 24381 739147 364000) 0 nil])
([nil nil ((5596 . 5597) (t 26429 24381 757234 369000) 5596) nil (26429 24477 648936 37000) 0 nil])
([nil nil ((5611 . 5627) (5609 . 5611) (#(" " 0 1 (font-lock-multiline t face markdown-header-delimiter-face markdown-heading-1-atx (5597 5610 nil nil nil nil nil nil 5597 5599 5599 5609 5609 5610 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (5597 5610 nil nil nil nil nil nil 5597 5599 5599 5609 5609 5610 #<buffer 2024-11-19-proj5.markdown>) wrap-prefix "  " fontified t)) . -5609) (undo-tree-id4930 . -1) (undo-tree-id4931 . -1) (undo-tree-id4932 . -1) (undo-tree-id4933 . -1) (undo-tree-id4934 . -1) (undo-tree-id4935 . -1) (undo-tree-id4936 . -1) (undo-tree-id4937 . -1) (undo-tree-id4938 . -1) (#("2" 0 1 (font-lock-multiline t face markdown-header-face-1 markdown-heading-1-atx (5597 5611 nil nil nil nil nil nil 5597 5599 5599 5611 5611 5611 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (5597 5611 nil nil nil nil nil nil 5597 5599 5599 5611 5611 5611 #<buffer 2024-11-19-proj5.markdown>) wrap-prefix "  " fontified t)) . -5610) (undo-tree-id4939 . -1) (undo-tree-id4940 . -1) (undo-tree-id4941 . -1) 5611 (5602 . 5611) (#(" " 0 1 (font-lock-multiline t face markdown-header-delimiter-face markdown-heading-1-atx (5597 5603 nil nil nil nil nil nil 5597 5599 5599 5602 5602 5603 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (5597 5603 nil nil nil nil nil nil 5597 5599 5599 5602 5602 5603 #<buffer 2024-11-19-proj5.markdown>) wrap-prefix "  " fontified t)) . -5602) (undo-tree-id4942 . -1) (undo-tree-id4943 . -1) (undo-tree-id4944 . -1) (undo-tree-id4945 . -1) (undo-tree-id4946 . -1) (undo-tree-id4947 . -1) (undo-tree-id4948 . -1) (undo-tree-id4949 . -1) (undo-tree-id4950 . -1) (undo-tree-id4951 . -1) (undo-tree-id4952 . -1) (undo-tree-id4953 . -1) (undo-tree-id4954 . -1) (undo-tree-id4955 . -1) (undo-tree-id4956 . -1) (undo-tree-id4957 . -1) (undo-tree-id4958 . -1) (undo-tree-id4959 . -1) (undo-tree-id4960 . -1) (undo-tree-id4961 . -1) (undo-tree-id4962 . -1) 5603 (#("Image" 0 1 (face markdown-header-face-1 markdown-heading-1-atx (5597 5608 nil nil nil nil nil nil 5597 5599 5599 5608 5608 5608 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (5597 5608 nil nil nil nil nil nil 5597 5599 5599 5608 5608 5608 #<buffer 2024-11-19-proj5.markdown>) wrap-prefix "  " fontified t) 1 2 (face markdown-header-face-1 markdown-heading-1-atx (5597 5608 nil nil nil nil nil nil 5597 5599 5599 5608 5608 5608 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (5597 5608 nil nil nil nil nil nil 5597 5599 5599 5608 5608 5608 #<buffer 2024-11-19-proj5.markdown>) wrap-prefix "  " fontified t) 2 3 (face markdown-header-face-1 markdown-heading-1-atx (5597 5608 nil nil nil nil nil nil 5597 5599 5599 5608 5608 5608 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (5597 5608 nil nil nil nil nil nil 5597 5599 5599 5608 5608 5608 #<buffer 2024-11-19-proj5.markdown>) wrap-prefix "  " fontified t) 3 4 (face markdown-header-face-1 markdown-heading-1-atx (5597 5608 nil nil nil nil nil nil 5597 5599 5599 5608 5608 5608 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (5597 5608 nil nil nil nil nil nil 5597 5599 5599 5608 5608 5608 #<buffer 2024-11-19-proj5.markdown>) wrap-prefix "  " fontified t) 4 5 (font-lock-multiline t face markdown-header-face-1 markdown-heading-1-atx (5597 5608 nil nil nil nil nil nil 5597 5599 5599 5608 5608 5608 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (5597 5608 nil nil nil nil nil nil 5597 5599 5599 5608 5608 5608 #<buffer 2024-11-19-proj5.markdown>) wrap-prefix "  " fontified t)) . -5603) (undo-tree-id4963 . -5) (undo-tree-id4964 . -1) (undo-tree-id4965 . -2) (undo-tree-id4966 . -1) (undo-tree-id4967 . -3) (undo-tree-id4968 . -2) (undo-tree-id4969 . -4) (undo-tree-id4970 . -3) (undo-tree-id4971 . -5) (undo-tree-id4972 . -4) (undo-tree-id4973 . -5) (undo-tree-id4974 . -5) (undo-tree-id4975 . -5) (undo-tree-id4976 . -5) (undo-tree-id4977 . -5) (undo-tree-id4978 . -5) 5608 (#("-" 0 1 (font-lock-multiline t face markdown-header-face-1 markdown-heading-1-atx (5597 5609 nil nil nil nil nil nil 5597 5599 5599 5609 5609 5609 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (5597 5609 nil nil nil nil nil nil 5597 5599 5599 5609 5609 5609 #<buffer 2024-11-19-proj5.markdown>) wrap-prefix "  " fontified t)) . -5608) (undo-tree-id4979 . -1) (undo-tree-id4980 . -1) (undo-tree-id4981 . -1) 5609 (5602 . 5609) (#("6" 0 1 (font-lock-multiline t face markdown-header-face-1 markdown-heading-1-atx (5597 5603 nil nil nil nil nil nil 5597 5599 5599 5603 5603 5603 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (5597 5603 nil nil nil nil nil nil 5597 5599 5599 5603 5603 5603 #<buffer 2024-11-19-proj5.markdown>) wrap-prefix "  " fontified t)) . -5602) (undo-tree-id4982 . -1) (undo-tree-id4983 . -1) (undo-tree-id4984 . -1) 5603 (5597 . 5603) (#("1" 0 1 (wrap-prefix "  " fontified t)) . -5597) (undo-tree-id4985 . -1) (undo-tree-id4986 . -1) (undo-tree-id4987 . -1) (undo-tree-id4988 . -1) (undo-tree-id4989 . -1) (undo-tree-id4990 . -1) (undo-tree-id4991 . -1) (undo-tree-id4992 . -1) (undo-tree-id4993 . -1) (undo-tree-id4994 . -1) (undo-tree-id4995 . -1) (#("." 0 1 (wrap-prefix "  " fontified t)) . -5598) (undo-tree-id4996 . -1) (undo-tree-id4997 . -1) (undo-tree-id4998 . -1) (undo-tree-id4999 . -1) (undo-tree-id5000 . -1) (undo-tree-id5001 . -1) (undo-tree-id5002 . -1) (#("6" 0 1 (wrap-prefix "  " fontified t)) . -5599) (undo-tree-id5003 . -1) (undo-tree-id5004 . -1) (undo-tree-id5005 . -1) 5600 (5597 . 5600)) nil (26429 24477 648928 653000) 0 nil])
([nil nil ((5627 . 5628)) nil (26429 24477 645156 469000) 0 nil])
([nil nil ((5628 . 5629) 5627) nil (26429 24477 645150 718000) 0 nil])
([nil nil ((5629 . 5630) (5628 . 5629) (t 26429 24477 661651 844000) 5627) nil (26429 24538 474152 928000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6405 . 6406) (nil fontified nil 5630 . 6406) (5630 . 6406)) nil (26429 24538 474152 36000) 0 nil])
([nil nil ((#("6" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -6189) (undo-tree-id5008 . -1) (undo-tree-id5009 . -1) (undo-tree-id5010 . -1) 6190 (6188 . 6190) (#("6" 0 1 (wrap-prefix "  " font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t)) . -6188) (undo-tree-id5011 . -1) (undo-tree-id5012 . -1) (undo-tree-id5013 . -1) (undo-tree-id5014 . -1) (undo-tree-id5015 . -1) 6189) nil (26429 24538 474150 894000) 0 nil])
([nil nil ((#("m" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . 6191)) nil (26429 24538 474138 59000) 0 nil])
([nil nil ((6238 . 6239) (#("6" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . 6238)) nil (26429 24538 474137 528000) 0 nil])
([nil nil ((#("m" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . 6241)) nil (26429 24538 474136 647000) 0 nil])
([nil nil ((6288 . 6289) (#("6" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . 6288)) nil (26429 24538 474136 6000) 0 nil])
([nil nil ((#("m" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . 6291) (undo-tree-id5006 . -1) (undo-tree-id5007 . -1)) nil (26429 24538 474135 14000) 0 nil])
([nil nil ((6338 . 6339) (#("6" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . 6338)) nil (26429 24538 474122 660000) 0 nil])
([nil nil ((#("m" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . 6341)) nil (26429 24538 474121 869000) 0 nil])
([nil nil ((6388 . 6389) (#("6" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . 6388)) nil (26429 24538 474121 137000) 0 nil])
([nil nil ((#("m" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . 6391)) nil (26429 24538 474114 335000) 0 nil])
([nil nil ((6241 . 6242) (#("2" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -6241) (undo-tree-id5035 . -1) (undo-tree-id5036 . -1) (undo-tree-id5037 . -1) (undo-tree-id5038 . -1) (undo-tree-id5039 . -1) (undo-tree-id5040 . -1) (undo-tree-id5041 . -1) 6242 (t 26429 24538 496561 453000)) nil (26429 24576 297365 140000) 0 nil])
([nil nil ((6291 . 6292) (#("3" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -6291) (undo-tree-id5028 . -1) (undo-tree-id5029 . -1) (undo-tree-id5030 . -1) (undo-tree-id5031 . -1) (undo-tree-id5032 . -1) (undo-tree-id5033 . -1) (undo-tree-id5034 . -1) 6292) nil (26429 24576 297360 701000) 0 nil])
([nil nil ((6341 . 6342) (#("4" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -6341) (undo-tree-id5022 . -1) (undo-tree-id5023 . -1) (undo-tree-id5024 . -1) (undo-tree-id5025 . -1) (undo-tree-id5026 . -1) (undo-tree-id5027 . -1) 6342) nil (26429 24576 297350 963000) 0 nil])
([nil nil ((6391 . 6393) (#("5" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -6391) (undo-tree-id5016 . -1) (undo-tree-id5017 . -1) (undo-tree-id5018 . -1) (undo-tree-id5019 . -1) (undo-tree-id5020 . -1) (undo-tree-id5021 . -1) 6392) nil (26429 24576 297341 946000) 0 nil])
([nil nil ((5632 . 5641) (#("1" 0 1 (face (markdown-table-face) wrap-prefix "  " fontified t)) . -5632) (undo-tree-id5068 . -1) (undo-tree-id5069 . -1) (undo-tree-id5070 . -1) (undo-tree-id5071 . -1) (undo-tree-id5072 . -1) 5633 (t 26429 24576 317134 588000)) nil (26429 24614 541346 208000) 0 nil])
([nil nil ((#("4" 0 1 (face (markdown-table-face) wrap-prefix "  " fontified t)) . -5700) (undo-tree-id5060 . -1) (undo-tree-id5061 . -1) (undo-tree-id5062 . -1) 5701 (5691 . 5701) (#("2" 0 1 (font-lock-multiline t face (markdown-table-face markdown-italic-face) wrap-prefix "  " fontified t)) . -5691) (undo-tree-id5063 . -1) (undo-tree-id5064 . -1) (undo-tree-id5065 . -1) (undo-tree-id5066 . -1) (undo-tree-id5067 . -1) 5692) nil (26429 24614 541342 210000) 0 nil])
([nil nil ((5750 . 5759) (#("3" 0 1 (face (markdown-table-face) wrap-prefix "  " fontified t)) . -5750) (undo-tree-id5055 . -1) (undo-tree-id5056 . -1) (undo-tree-id5057 . -1) (undo-tree-id5058 . -1) (undo-tree-id5059 . -1) 5751) nil (26429 24614 541331 740000) 0 nil])
([nil nil ((5810 . 5818) (#("s" 0 1 (font-lock-multiline t face (markdown-table-face markdown-italic-face) wrap-prefix "  " fontified t)) . -5810) (undo-tree-id5047 . -1) (undo-tree-id5048 . -1) (undo-tree-id5049 . -1) 5811 (5809 . 5811) (#("4" 0 1 (font-lock-multiline t face (markdown-table-face markdown-italic-face) wrap-prefix "  " fontified t)) . -5809) (undo-tree-id5050 . -1) (undo-tree-id5051 . -1) (undo-tree-id5052 . -1) (undo-tree-id5053 . -1) (undo-tree-id5054 . -1) 5810) nil (26429 24614 541326 821000) 0 nil])
([nil nil ((5868 . 5878) (#("5" 0 1 (face (markdown-table-face) wrap-prefix "  " fontified t)) . -5868) (undo-tree-id5042 . -1) (undo-tree-id5043 . -1) (undo-tree-id5044 . -1) (undo-tree-id5045 . -1) (undo-tree-id5046 . -1) 5869) nil (26429 24614 541314 418000) 0 nil])
([nil nil ((5927 . 5929) (t 26429 24614 562714 162000)) nil (26429 25165 737051 630000) 0 nil])
([nil nil ((#("| ![dx]({{site.baseurl}}/assets/proj5/1.7_i1.png) | ![dx]({{site.baseurl}}/assets/proj5/1.7_i3.png) | ![dx]({{site.baseurl}}/assets/proj5/1.7_i5.png) | ![dx]({{site.baseurl}}/assets/proj5/1.7_i7.png) | ![dx]({{site.baseurl}}/assets/proj5/1.7_i10.png) |
" 0 2 (font-lock-multiline t face (markdown-table-face markdown-italic-face) wrap-prefix "  " fontified nil) 2 3 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face markdown-italic-face) wrap-prefix "  " fontified nil) 3 4 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face markdown-italic-face) wrap-prefix "  " fontified nil) 4 6 (help-echo "{{site.baseurl}}/assets/proj5/1.7_i1.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face markdown-italic-face) wrap-prefix "  " fontified nil) 6 7 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face markdown-italic-face) wrap-prefix "  " fontified nil) 7 8 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face markdown-italic-face) wrap-prefix "  " fontified nil) 8 41 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face markdown-italic-face) wrap-prefix "  " fontified nil) 41 42 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-markup-face markdown-url-face markdown-table-face) wrap-prefix "  " fontified nil) 42 48 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified nil) 48 49 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 49 52 (face (markdown-table-face) wrap-prefix "  " fontified nil) 52 53 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 53 54 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 54 56 (help-echo "{{site.baseurl}}/assets/proj5/1.7_i3.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) wrap-prefix "  " fontified nil) 56 57 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 57 58 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 58 90 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified nil) 90 91 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified nil) 91 98 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified nil) 98 99 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 99 102 (face (markdown-table-face) wrap-prefix "  " fontified nil) 102 103 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 103 104 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 104 106 (help-echo "{{site.baseurl}}/assets/proj5/1.7_i5.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) wrap-prefix "  " fontified nil) 106 107 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 107 108 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 108 140 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified nil) 140 141 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified nil) 141 148 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified nil) 148 149 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 149 152 (face (markdown-table-face) wrap-prefix "  " fontified nil) 152 153 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 153 154 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 154 156 (help-echo "{{site.baseurl}}/assets/proj5/1.7_i7.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) wrap-prefix "  " fontified nil) 156 157 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 157 158 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 158 190 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified nil) 190 191 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified nil) 191 198 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified nil) 198 199 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 199 202 (face (markdown-table-face) wrap-prefix "  " fontified nil) 202 203 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 203 204 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 204 206 (help-echo "{{site.baseurl}}/assets/proj5/1.7_i10.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) wrap-prefix "  " fontified nil) 206 207 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 207 208 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 208 240 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified nil) 240 241 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified nil) 241 249 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified nil) 249 250 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 250 252 (face (markdown-table-face) wrap-prefix "  " fontified nil) 252 253 (font-lock-multiline t face (markdown-table-face) wrap-prefix "  " fontified t)) . 6401) (undo-tree-id5080 . -137) (undo-tree-id5081 . -137) (undo-tree-id5082 . 253) (undo-tree-id5083 . -40) (undo-tree-id5084 . -40) (undo-tree-id5085 . -143) (undo-tree-id5086 . -143) (undo-tree-id5087 . -193) (undo-tree-id5088 . -193) (undo-tree-id5089 . -193) (undo-tree-id5090 . -253) (undo-tree-id5091 . -137) (undo-tree-id5092 . -137) (undo-tree-id5093 . -137) (undo-tree-id5094 . -137) (undo-tree-id5095 . -137) (undo-tree-id5096 . -137) (undo-tree-id5097 . -137) (undo-tree-id5098 . -137) (undo-tree-id5099 . -137) (undo-tree-id5100 . -137) (undo-tree-id5101 . -137) (undo-tree-id5102 . -137) (undo-tree-id5103 . -132) (undo-tree-id5104 . -137) (undo-tree-id5105 . -253) (undo-tree-id5106 . -132) (undo-tree-id5107 . -132) (undo-tree-id5108 . -253) (undo-tree-id5109 . -132) (undo-tree-id5110 . -253) (undo-tree-id5111 . -253) (6144 . 6401) (#("|:------------------------------------------------:|:------------------------------------------------:|:------------------------------------------------:|:--------------------------------------------------:|:--------------------------------------------------:|
" 0 260 (font-lock-multiline t face (markdown-table-face markdown-italic-face) wrap-prefix "  " fontified nil) 260 261 (font-lock-multiline t face (markdown-table-face markdown-italic-face) wrap-prefix "  " fontified nil)) . 6144) (undo-tree-id5112 . 261) (undo-tree-id5113 . -40) (undo-tree-id5114 . -2) (undo-tree-id5115 . -2) (undo-tree-id5116 . -2) (undo-tree-id5117 . -2) (undo-tree-id5118 . -2) (undo-tree-id5119 . -132) (undo-tree-id5120 . -132) (5887 . 6144) (#("| i_start=1                                                | i_start=3                                                | i_start=5                                                | i_start=7                                                | i_start=10                                                | |
" 0 3 (face (markdown-table-face) wrap-prefix "  " fontified nil) 3 4 (invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 4 62 (face (markdown-table-face markdown-italic-face) wrap-prefix "  " fontified nil) 62 63 (invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 63 70 (face (markdown-table-face) wrap-prefix "  " fontified nil) 70 121 (face (markdown-table-face) wrap-prefix "  " fontified nil) 121 122 (invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 122 180 (face (markdown-table-face markdown-italic-face) wrap-prefix "  " fontified nil) 180 181 (invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 181 188 (face (markdown-table-face) wrap-prefix "  " fontified nil) 188 239 (face (markdown-table-face) wrap-prefix "  " fontified nil) 239 240 (invisible markdown-markup font-lock-multiline t face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 240 299 (font-lock-multiline t face (markdown-table-face markdown-italic-face) wrap-prefix "  " fontified nil) 299 300 (font-lock-multiline t face (markdown-table-face markdown-italic-face) wrap-prefix "  " fontified nil)) . 5887) (undo-tree-id5121 . 1) (undo-tree-id5122 . -48) (undo-tree-id5123 . -2) (undo-tree-id5124 . -2) (undo-tree-id5125 . -2) (undo-tree-id5126 . -61) (undo-tree-id5127 . -61) (undo-tree-id5128 . -61) (undo-tree-id5129 . -70) (undo-tree-id5130 . -120) (undo-tree-id5131 . -120) (undo-tree-id5132 . -120) (undo-tree-id5133 . -179) (undo-tree-id5134 . -179) (undo-tree-id5135 . -179) (undo-tree-id5136 . -180) (undo-tree-id5137 . -238) (undo-tree-id5138 . -238) (undo-tree-id5139 . -238) (undo-tree-id5140 . -247) (undo-tree-id5141 . -247) (undo-tree-id5142 . -247) (undo-tree-id5143 . -247) (undo-tree-id5144 . -247) (undo-tree-id5145 . -247) (undo-tree-id5146 . -247) (undo-tree-id5147 . -247) (undo-tree-id5148 . -297) (undo-tree-id5149 . -132) (undo-tree-id5150 . -296) (undo-tree-id5151 . -132) (undo-tree-id5152 . -297) (undo-tree-id5153 . -296) (undo-tree-id5154 . -297) (undo-tree-id5155 . -297) (undo-tree-id5156 . -298) (undo-tree-id5157 . -297) (undo-tree-id5158 . -300) (undo-tree-id5159 . -298) (undo-tree-id5160 . -299) (undo-tree-id5161 . -298) (undo-tree-id5162 . -300) (undo-tree-id5163 . -298) (undo-tree-id5164 . -298) (undo-tree-id5165 . -298) (undo-tree-id5166 . -298) (undo-tree-id5167 . -298) (undo-tree-id5168 . -298) (undo-tree-id5169 . -297) (undo-tree-id5170 . -298) (undo-tree-id5171 . -297) (undo-tree-id5172 . -297) (undo-tree-id5173 . -297) (undo-tree-id5174 . -297) (undo-tree-id5175 . -297) (5630 . 5887) 5927) nil (26429 25165 737049 326000) 0 nil])
([nil nil ((6139 . 6140)) nil (26429 25165 736974 885000) 0 nil])
([nil nil ((6143 . 6144)) nil (26429 25165 736974 353000) 0 nil])
([nil nil ((5883 . 5893)) nil (26429 25165 736973 873000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6456 . 6457) (nil fontified nil 6409 . 6457) (6409 . 6457) 6408) nil (26429 25165 736973 91000) 0 nil])
([nil nil ((6450 . 6451) (#("1" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -6450) (undo-tree-id5073 . -1) (undo-tree-id5074 . -1) (undo-tree-id5075 . -1) (undo-tree-id5076 . -1) (undo-tree-id5077 . -1) (undo-tree-id5078 . -1) (undo-tree-id5079 . -1) 6451) nil (26429 25165 736965 517000) 0 nil])
([nil nil ((6542 . 6846) (#("| ![dx]({{site.baseurl}}/assets/proj5/1.7_i1.png) | ![dx]({{site.baseurl}}/assets/proj5/1.7_i3.png) | ![dx]({{site.baseurl}}/assets/proj5/1.7_i5.png) | ![dx]({{site.baseurl}}/assets/proj5/1.7_i7.png) | ![dx]({{site.baseurl}}/assets/proj5/1.7_i10.png) | ![dx]({{site.baseurl}}/assets/proj5/1.7_i20.png)  |
" 0 2 (face (markdown-table-face) fontified nil wrap-prefix "  ") 2 3 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 3 4 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 4 6 (help-echo "{{site.baseurl}}/assets/proj5/1.7_i1.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) fontified nil wrap-prefix "  ") 6 7 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 7 8 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 8 41 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified nil wrap-prefix "  ") 41 42 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified nil wrap-prefix "  ") 42 48 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified nil wrap-prefix "  ") 48 49 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 49 52 (face (markdown-table-face) fontified nil wrap-prefix "  ") 52 53 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 53 54 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 54 56 (help-echo "{{site.baseurl}}/assets/proj5/1.7_i3.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) fontified nil wrap-prefix "  ") 56 57 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 57 58 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 58 98 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified nil wrap-prefix "  ") 98 99 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 99 102 (face (markdown-table-face) fontified nil wrap-prefix "  ") 102 103 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 103 104 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 104 106 (help-echo "{{site.baseurl}}/assets/proj5/1.7_i5.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) fontified nil wrap-prefix "  ") 106 107 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 107 108 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 108 148 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified nil wrap-prefix "  ") 148 149 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 149 152 (face (markdown-table-face) fontified nil wrap-prefix "  ") 152 153 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 153 154 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 154 156 (help-echo "{{site.baseurl}}/assets/proj5/1.7_i7.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) fontified nil wrap-prefix "  ") 156 157 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 157 158 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 158 198 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified nil wrap-prefix "  ") 198 199 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 199 202 (face (markdown-table-face) fontified nil wrap-prefix "  ") 202 203 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 203 204 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 204 206 (help-echo "{{site.baseurl}}/assets/proj5/1.7_i10.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) fontified nil wrap-prefix "  ") 206 207 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 207 208 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 208 249 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified nil wrap-prefix "  ") 249 250 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 250 253 (face (markdown-table-face) fontified nil wrap-prefix "  ") 253 254 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 254 255 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 255 257 (help-echo "{{site.baseurl}}/assets/proj5/1.7_i20.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) fontified nil wrap-prefix "  ") 257 258 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 258 259 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 259 300 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified nil wrap-prefix "  ") 300 301 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 301 304 (face (markdown-table-face) fontified nil wrap-prefix "  ") 304 305 (font-lock-multiline t face (markdown-table-face) fontified t wrap-prefix "  ")) . 6542) (undo-tree-id5176 . -305) (undo-tree-id5177 . -253) (undo-tree-id5178 . -253) (undo-tree-id5179 . -300) (undo-tree-id5180 . 10) (undo-tree-id5181 . -202) (undo-tree-id5182 . 55) (undo-tree-id5183 . -305) (undo-tree-id5184 . -305) (undo-tree-id5185 . -305) (undo-tree-id5186 . -305) (undo-tree-id5187 . -305) (undo-tree-id5188 . -305) (undo-tree-id5189 . -305) (undo-tree-id5190 . -305) (undo-tree-id5191 . -305) (undo-tree-id5192 . -305) (undo-tree-id5193 . -305) (undo-tree-id5194 . -305) (undo-tree-id5195 . -305) (undo-tree-id5196 . -305) (undo-tree-id5197 . -305) (undo-tree-id5198 . -305) (undo-tree-id5199 . -303) (undo-tree-id5200 . -305) (undo-tree-id5201 . -305) (undo-tree-id5202 . -305) (undo-tree-id5203 . -305) (undo-tree-id5204 . -305) (undo-tree-id5205 . -305) (undo-tree-id5206 . -305) (undo-tree-id5207 . -305) (undo-tree-id5208 . -305) (undo-tree-id5209 . -305) (undo-tree-id5210 . -305) (undo-tree-id5211 . -305) (undo-tree-id5212 . -249) (undo-tree-id5213 . -253) (undo-tree-id5214 . -294) (undo-tree-id5215 . -294) (undo-tree-id5216 . -294) (undo-tree-id5217 . -294) (undo-tree-id5218 . -294) (undo-tree-id5219 . -294) (undo-tree-id5220 . -294) (undo-tree-id5221 . -294) (undo-tree-id5222 . -294) (undo-tree-id5223 . -294) (undo-tree-id5224 . -294) (undo-tree-id5225 . -296) (undo-tree-id5226 . -294) (undo-tree-id5227 . -305) (undo-tree-id5228 . -303) (undo-tree-id5229 . -296) (undo-tree-id5230 . -303) (undo-tree-id5231 . -303) (undo-tree-id5232 . -303) (undo-tree-id5233 . -303) (undo-tree-id5234 . -303) (undo-tree-id5235 . -305) (6238 . 6542) (#("|:-----------------------------------------------:|:-----------------------------------------------:|:-----------------------------------------------:|:-----------------------------------------------:|:------------------------------------------------:|:---:|
" 0 258 (face (markdown-table-face) fontified nil wrap-prefix "  ") 258 259 (font-lock-multiline t face (markdown-table-face) fontified nil wrap-prefix "  ")) . 6238) (undo-tree-id5236 . -259) (undo-tree-id5237 . -259) (undo-tree-id5238 . -259) (undo-tree-id5239 . -259) (undo-tree-id5240 . -259) (undo-tree-id5241 . -259) (undo-tree-id5242 . -259) (undo-tree-id5243 . -259) (undo-tree-id5244 . -259) (undo-tree-id5245 . -259) (5934 . 6238) (#("| i_start=1                                       | i_start=3                                       | i_start=5                                       | i_start=7                                       | i_start=10                                       | i_start=20  |
" 0 3 (face (markdown-table-face) fontified nil wrap-prefix "  ") 3 4 (invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 4 53 (face (markdown-table-face markdown-italic-face) fontified nil wrap-prefix "  ") 53 54 (invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 54 103 (face (markdown-table-face) fontified nil wrap-prefix "  ") 103 104 (invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 104 153 (face (markdown-table-face markdown-italic-face) fontified nil wrap-prefix "  ") 153 154 (invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 154 203 (face (markdown-table-face) fontified nil wrap-prefix "  ") 203 204 (invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 204 254 (face (markdown-table-face markdown-italic-face) fontified nil wrap-prefix "  ") 254 255 (invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 255 263 (face (markdown-table-face) fontified nil wrap-prefix "  ") 263 266 (face (markdown-table-face) fontified nil wrap-prefix "  ") 266 267 (font-lock-multiline t face (markdown-table-face) fontified nil wrap-prefix "  ")) . 5934) (undo-tree-id5246 . -267) (undo-tree-id5247 . -267) (undo-tree-id5248 . -267) (undo-tree-id5249 . -267) (undo-tree-id5250 . -267) (undo-tree-id5251 . -267) (undo-tree-id5252 . -267) (undo-tree-id5253 . -267) (undo-tree-id5254 . -267) (undo-tree-id5255 . -267) (undo-tree-id5256 . -267) (undo-tree-id5257 . -267) (undo-tree-id5258 . -267) (undo-tree-id5259 . -267) (undo-tree-id5260 . -267) (undo-tree-id5261 . -267) (undo-tree-id5262 . -267) (undo-tree-id5263 . -267) (undo-tree-id5264 . -267) (undo-tree-id5265 . -267) (undo-tree-id5266 . -267) (undo-tree-id5267 . -267) (undo-tree-id5268 . -267) (undo-tree-id5269 . -267) (undo-tree-id5270 . -267) (undo-tree-id5271 . -267) (undo-tree-id5272 . -267) (undo-tree-id5273 . -267) (undo-tree-id5274 . -267) (undo-tree-id5275 . -267) (undo-tree-id5276 . -267) (undo-tree-id5277 . -267) (undo-tree-id5278 . -267) (undo-tree-id5279 . -267) (undo-tree-id5280 . -267) (undo-tree-id5281 . -267) (undo-tree-id5282 . -267) (undo-tree-id5283 . -267) (undo-tree-id5284 . -267) (undo-tree-id5285 . -267) (undo-tree-id5286 . -267) (undo-tree-id5287 . -267) (undo-tree-id5288 . -267) (undo-tree-id5289 . -267) (undo-tree-id5290 . -267) (undo-tree-id5291 . -267) (undo-tree-id5292 . -267) (undo-tree-id5293 . -267) (undo-tree-id5294 . -267) (undo-tree-id5295 . -267) (undo-tree-id5296 . -267) (undo-tree-id5297 . -267) (5630 . 5934) 6459 (t 26429 25165 744066 814000)) nil (26429 25168 848513 352000) 0 nil])
([nil nil ((#("|                                                 |                                                 |                                                 |                                                 |                                                  |                                                  |
" 0 303 (wrap-prefix "  " face (markdown-table-face) fontified t) 303 304 (wrap-prefix "  " font-lock-multiline t face (markdown-table-face) fontified t)) . 6542) (undo-tree-id5298 . -304) (undo-tree-id5299 . -304) (undo-tree-id5300 . -304) (undo-tree-id5301 . -304) (undo-tree-id5302 . 302) (undo-tree-id5303 . -304) (undo-tree-id5304 . -304) (undo-tree-id5305 . -304) (undo-tree-id5306 . -304) (undo-tree-id5307 . -304) (undo-tree-id5308 . -304) (undo-tree-id5309 . -304) (undo-tree-id5310 . -304) (undo-tree-id5311 . -304) (undo-tree-id5312 . -304) (undo-tree-id5313 . -304) (undo-tree-id5314 . -304) (undo-tree-id5315 . -304) (undo-tree-id5316 . -304) (undo-tree-id5317 . -304) (undo-tree-id5318 . -304) (undo-tree-id5319 . -304) (undo-tree-id5320 . -302) (undo-tree-id5321 . -304) (undo-tree-id5322 . -304) (undo-tree-id5323 . -304) (undo-tree-id5324 . -304) (undo-tree-id5325 . -304) (undo-tree-id5326 . -304) (undo-tree-id5327 . -304) (undo-tree-id5328 . -304) (undo-tree-id5329 . -304) (undo-tree-id5330 . -304) (undo-tree-id5331 . -304) (undo-tree-id5332 . -304) (undo-tree-id5333 . -304) (undo-tree-id5334 . -304) (undo-tree-id5335 . -304) (undo-tree-id5336 . -304) (undo-tree-id5337 . -304) (undo-tree-id5338 . -304) (undo-tree-id5339 . -304) (undo-tree-id5340 . -304) (undo-tree-id5341 . -304) (undo-tree-id5342 . -304) (undo-tree-id5343 . -304) (undo-tree-id5344 . -304) (undo-tree-id5345 . -304) (undo-tree-id5346 . -304) (undo-tree-id5347 . -304) (undo-tree-id5348 . -304) (undo-tree-id5349 . -304) (undo-tree-id5350 . -304) (undo-tree-id5351 . -304) (undo-tree-id5352 . -304) (undo-tree-id5353 . -304) (undo-tree-id5354 . -304) (undo-tree-id5355 . -1) (undo-tree-id5356 . -1) (undo-tree-id5357 . -1) (undo-tree-id5358 . -1) (undo-tree-id5359 . -1) (undo-tree-id5360 . -1) (undo-tree-id5361 . -1) (undo-tree-id5362 . -1) (undo-tree-id5363 . -304) (undo-tree-id5364 . -1) (undo-tree-id5365 . -1) (undo-tree-id5366 . -304) (undo-tree-id5367 . -302) (undo-tree-id5368 . -1) (undo-tree-id5369 . -302) (undo-tree-id5370 . -302) (undo-tree-id5371 . -302) 6844 (t 26429 25168 867114 140000)) nil (26429 25175 329523 876000) 0 nil])
([nil nil ((6573 . 6586) (6552 . 6573) (#("E" 0 1 (font-lock-multiline t face markdown-header-face-1 markdown-heading-1-atx (6544 6553 nil nil nil nil nil nil 6544 6546 6546 6553 6553 6553 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (6544 6553 nil nil nil nil nil nil 6544 6546 6546 6553 6553 6553 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ")) . -6552) (undo-tree-id5372 . -1) (undo-tree-id5373 . -1) (undo-tree-id5374 . -1) (undo-tree-id5375 . -1) (undo-tree-id5376 . -1) (undo-tree-id5377 . -1) (undo-tree-id5378 . -1) (undo-tree-id5379 . -1) (undo-tree-id5380 . -1) (undo-tree-id5381 . -1) (undo-tree-id5382 . -1) (undo-tree-id5383 . -1) (undo-tree-id5384 . -1) (undo-tree-id5385 . -1) (undo-tree-id5386 . -1) 6553 (6549 . 6553) (#("1" 0 1 (font-lock-multiline t face markdown-header-face-1 markdown-heading-1-atx (6544 6550 nil nil nil nil nil nil 6544 6546 6546 6550 6550 6550 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (6544 6550 nil nil nil nil nil nil 6544 6546 6546 6550 6550 6550 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ")) . -6549) (undo-tree-id5387 . -1) (undo-tree-id5388 . -1) (undo-tree-id5389 . -1) 6550 (6549 . 6550) (#("6" 0 1 (font-lock-multiline t face markdown-header-face-1 markdown-heading-1-atx (6544 6550 nil nil nil nil nil nil 6544 6546 6546 6550 6550 6550 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (6544 6550 nil nil nil nil nil nil 6544 6546 6546 6550 6550 6550 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ")) . -6549) (undo-tree-id5390 . -1) (undo-tree-id5391 . -1) (undo-tree-id5392 . -1) 6550 (6544 . 6550) (t 26429 25175 348212 352000)) nil (26429 25342 980683 491000) 0 nil])
([nil nil ((6587 . 6588) (6586 . 6587) 6585) nil (26429 25342 978372 924000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7501 . 7502) (nil fontified nil 6588 . 7502) (6588 . 7502) (t 26429 25342 999752 957000)) nil (26429 26194 245551 86000) 0 nil])
([nil nil ((7237 . 7239)) nil (26429 26194 245550 595000) 0 nil])
([nil nil ((7242 . 7245)) nil (26429 26194 245549 703000) 0 nil])
([nil nil ((#("{{site.baseurl}}/assets/proj5/1.7_i3.png" 0 40 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . 7259) (undo-tree-id5467 . -30) (undo-tree-id5468 . -2) (undo-tree-id5469 . -6) (undo-tree-id5470 . -2) (undo-tree-id5471 . -7) (undo-tree-id5472 . -6) (undo-tree-id5473 . -14) (undo-tree-id5474 . -7) (undo-tree-id5475 . -17) (undo-tree-id5476 . -14) (undo-tree-id5477 . -23) (undo-tree-id5478 . -17) (undo-tree-id5479 . -24) (undo-tree-id5480 . -23) (undo-tree-id5481 . -29) (undo-tree-id5482 . -24) (undo-tree-id5483 . -30) (undo-tree-id5484 . -24) (undo-tree-id5485 . -30) (undo-tree-id5486 . -30) (undo-tree-id5487 . -30) 7289) nil (26429 26194 245548 461000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7303 . 7304) (nil fontified nil 7259 . 7304) (7259 . 7304) 7258) nil (26429 26194 245531 488000) 0 nil])
([nil nil ((7299 . 7300) (#("1" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -7299) (undo-tree-id5460 . -1) (undo-tree-id5461 . -1) (undo-tree-id5462 . -1) (undo-tree-id5463 . -1) (undo-tree-id5464 . -1) (undo-tree-id5465 . -1) (undo-tree-id5466 . -1) 7300) nil (26429 26194 245530 677000) 0 nil])
([nil nil ((7299 . 7300) (#("2" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -7299) (undo-tree-id5454 . -1) (undo-tree-id5455 . -1) (undo-tree-id5456 . -1) (undo-tree-id5457 . -1) (undo-tree-id5458 . -1) (undo-tree-id5459 . -1) 7300) nil (26429 26194 245523 183000) 0 nil])
([nil nil ((#("{{site.baseurl}}/assets/proj5/1.7_i5.png" 0 40 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . 7314) (undo-tree-id5449 . -2) (undo-tree-id5450 . -2) (undo-tree-id5451 . -2) (undo-tree-id5452 . -2) (undo-tree-id5453 . -2) 7316) nil (26429 26194 245519 275000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7358 . 7359) (nil fontified nil 7314 . 7359) (7314 . 7359) 7313) nil (26429 26194 245516 440000) 0 nil])
([nil nil ((7354 . 7355) (#("3" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -7354) (undo-tree-id5442 . -1) (undo-tree-id5443 . -1) (undo-tree-id5444 . -1) (undo-tree-id5445 . -1) (undo-tree-id5446 . -1) (undo-tree-id5447 . -1) (undo-tree-id5448 . -1) 7355) nil (26429 26194 245515 608000) 0 nil])
([nil nil ((#("{{site.baseurl}}/assets/proj5/1.7_i7.png" 0 40 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . 7369) (undo-tree-id5425 . -6) (undo-tree-id5426 . -2) (undo-tree-id5427 . -6) (undo-tree-id5428 . -2) (undo-tree-id5429 . -7) (undo-tree-id5430 . -2) (undo-tree-id5431 . -6) (undo-tree-id5432 . -7) (undo-tree-id5433 . -2) (undo-tree-id5434 . -6) (undo-tree-id5435 . -6) (undo-tree-id5436 . -2) (undo-tree-id5437 . -6) (undo-tree-id5438 . -2) (undo-tree-id5439 . -6) (undo-tree-id5440 . -6) (undo-tree-id5441 . -6) 7375) nil (26429 26194 245509 807000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7413 . 7414) (nil fontified nil 7369 . 7414) (7369 . 7414) 7368) nil (26429 26194 245492 535000) 0 nil])
([nil nil ((7409 . 7410) (#("5" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -7409) (undo-tree-id5418 . -1) (undo-tree-id5419 . -1) (undo-tree-id5420 . -1) (undo-tree-id5421 . -1) (undo-tree-id5422 . -1) (undo-tree-id5423 . -1) (undo-tree-id5424 . -1) 7410) nil (26429 26194 245491 803000) 0 nil])
([nil nil ((#("{{site.baseurl}}/assets/proj5/1.7_i10.png" 0 41 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . 7424) (undo-tree-id5409 . -6) (undo-tree-id5410 . -2) (undo-tree-id5411 . -2) (undo-tree-id5412 . -2) (undo-tree-id5413 . -6) (undo-tree-id5414 . -2) (undo-tree-id5415 . -6) (undo-tree-id5416 . -6) (undo-tree-id5417 . -6) 7430) nil (26429 26194 245481 203000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7468 . 7469) (nil fontified nil 7424 . 7469) (7424 . 7469) 7423) nil (26429 26194 245471 695000) 0 nil])
([nil nil ((7465 . 7466) (#("9" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -7465) (undo-tree-id5393 . -1) (undo-tree-id5394 . -1) (undo-tree-id5395 . -1) (undo-tree-id5396 . -1) (undo-tree-id5397 . -1) (undo-tree-id5398 . -1) (#("0" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -7466) (undo-tree-id5399 . -1) (undo-tree-id5400 . -1) (undo-tree-id5401 . -1) 7467 (7464 . 7467) (#("7" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -7464) (undo-tree-id5402 . -1) (undo-tree-id5403 . -1) (undo-tree-id5404 . -1) (undo-tree-id5405 . -1) (undo-tree-id5406 . -1) (undo-tree-id5407 . -1) (undo-tree-id5408 . -1) 7465) nil (26429 26194 245464 532000) 0 nil])
([nil nil ((#("{{site.baseurl}}/assets/proj5/1.7_i20.png" 0 41 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . 7480) (undo-tree-id5495 . -2) (undo-tree-id5496 . -2) (undo-tree-id5497 . -2) (undo-tree-id5498 . -2) (undo-tree-id5499 . -2) (undo-tree-id5500 . -2) (undo-tree-id5501 . -2) (undo-tree-id5502 . -2) (undo-tree-id5503 . -2) (undo-tree-id5504 . -2) (undo-tree-id5505 . -2) 7482 (t 26429 26194 272638 582000)) nil (26429 26206 641887 597000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7525 . 7526) (nil fontified nil 7480 . 7526) (7480 . 7526) 7479) nil (26429 26206 641873 400000) 0 nil])
([nil nil ((7520 . 7521) (#("1" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -7520) (undo-tree-id5488 . -1) (undo-tree-id5489 . -1) (undo-tree-id5490 . -1) (undo-tree-id5491 . -1) (undo-tree-id5492 . -1) (undo-tree-id5493 . -1) (undo-tree-id5494 . -1) 7521) nil (26429 26206 641868 190000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7529 . 7530) (#("
" 0 1 (fontified nil wrap-prefix "  " face (markdown-table-face) font-lock-multiline t)) . -7863) (7529 . 7864) 7196 (t 26429 26206 661826 64000)) nil (26429 26346 487601 17000) 0 nil])
([nil nil ((7575 . 7576) (#("1" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -7575) (undo-tree-id5506 . -1) (undo-tree-id5507 . -1) (undo-tree-id5508 . -1) (undo-tree-id5509 . -1) (undo-tree-id5510 . -1) 7576) nil (26429 26346 487596 177000) 0 nil])
([nil nil ((7630 . 7631) (#("1" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -7630) (undo-tree-id5531 . -1) (undo-tree-id5532 . -1) (undo-tree-id5533 . -1) (undo-tree-id5534 . -1) (undo-tree-id5535 . -1) 7631 (t 26429 26346 509942 338000)) nil (26429 26368 969859 898000) 0 nil])
([nil nil ((7685 . 7686) (#("1" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -7685) (undo-tree-id5526 . -1) (undo-tree-id5527 . -1) (undo-tree-id5528 . -1) (undo-tree-id5529 . -1) (undo-tree-id5530 . -1) 7686) nil (26429 26368 969854 799000) 0 nil])
([nil nil ((7740 . 7741) (#("1" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -7740) (undo-tree-id5521 . -1) (undo-tree-id5522 . -1) (undo-tree-id5523 . -1) (undo-tree-id5524 . -1) (undo-tree-id5525 . -1) 7741) nil (26429 26368 969849 378000) 0 nil])
([nil nil ((7795 . 7796) (#("1" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -7795) (undo-tree-id5516 . -1) (undo-tree-id5517 . -1) (undo-tree-id5518 . -1) (undo-tree-id5519 . -1) (undo-tree-id5520 . -1) 7796) nil (26429 26368 969835 542000) 0 nil])
([nil nil ((7851 . 7852) (#("1" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -7851) (undo-tree-id5511 . -1) (undo-tree-id5512 . -1) (undo-tree-id5513 . -1) (undo-tree-id5514 . -1) (undo-tree-id5515 . -1) 7852) nil (26429 26368 969821 566000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7863 . 7864) (#("
" 0 1 (fontified nil wrap-prefix "  " face (markdown-table-face) font-lock-multiline t)) . -8197) (7863 . 8198) 7530 (t 26429 26368 990282 522000)) nil (26429 26849 460214 183000) 0 nil])
([nil nil ((7909 . 7910) (#("2" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -7909) (undo-tree-id5536 . -1) (undo-tree-id5537 . -1) (undo-tree-id5538 . -1) (undo-tree-id5539 . -1) (undo-tree-id5540 . -1) 7910) nil (26429 26849 460212 290000) 0 nil])
([nil nil ((7964 . 7965) (#("2" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . 7964)) nil (26429 26849 460196 950000) 0 nil])
([nil nil ((8019 . 8020) (#("2" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . 8019)) nil (26429 26849 460196 279000) 0 nil])
([nil nil ((8074 . 8075) (#("2" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . 8074)) nil (26429 26849 460195 247000) 0 nil])
([nil nil ((8129 . 8130) (#("2" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . 8129)) nil (26429 26849 460194 185000) 0 nil])
([nil nil ((8185 . 8186) (#("2" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . 8185)) nil (26429 26849 460186 871000) 0 nil])
([nil nil ((#("
" 0 1 (font-lock-multiline t wrap-prefix "  " fontified t)) . -6586) (undo-tree-id5554 . -1) (undo-tree-id5555 . -1) (undo-tree-id5556 . -1) (undo-tree-id5557 . -1) (undo-tree-id5558 . -1) (undo-tree-id5559 . -1) (undo-tree-id5560 . -1) (undo-tree-id5561 . -1) (undo-tree-id5562 . -1) (undo-tree-id5563 . -1) (undo-tree-id5564 . -1) (undo-tree-id5565 . -1) (undo-tree-id5566 . -1) (undo-tree-id5567 . -1) (undo-tree-id5568 . -1) (undo-tree-id5569 . -1) 6587 (6587 . 6588) (t 26429 26849 484553 733000)) nil (26429 26882 70376 565000) 0 nil])
([nil nil ((8217 . 8218) (#(":" 0 1 (face markdown-header-face-1 markdown-heading-1-atx (8199 8218 nil nil nil nil nil nil 8199 8201 8201 8218 8218 8218 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (8199 8218 nil nil nil nil nil nil 8199 8201 8201 8218 8218 8218 #<buffer 2024-11-19-proj5.markdown>) wrap-prefix "  " fontified t)) . -8217) (undo-tree-id5541 . -1) (undo-tree-id5542 . -1) (undo-tree-id5543 . -1) 8218 (8206 . 8218) (8199 . 8206) (#("1" 0 1 (wrap-prefix "  " fontified t)) . -8199) (undo-tree-id5544 . -1) (undo-tree-id5545 . -1) (undo-tree-id5546 . -1) (undo-tree-id5547 . -1) (undo-tree-id5548 . -1) (undo-tree-id5549 . -1) (undo-tree-id5550 . -1) (#("." 0 1 (wrap-prefix "  " fontified t)) . -8200) (undo-tree-id5551 . -1) (undo-tree-id5552 . -1) (undo-tree-id5553 . -1) 8201 (8199 . 8201) (8198 . 8199) 8198) nil (26429 26882 70359 172000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8727 . 8728) (nil fontified nil 8220 . 8728) (8220 . 8728) (t 26429 26882 91047 157000)) nil (26429 27023 873840 84000) 0 nil])
([nil nil ((8222 . 8230) (#("Gauss" 0 5 (face (markdown-table-face) fontified t wrap-prefix "  ")) . 8222)) nil (26429 27038 293605 575000) 0 nil] [nil nil ((#(" ![dx]({{site.baseurl}}/assets/proj5/1.4_clean.png) |" 0 1 (wrap-prefix "  " face (markdown-table-face) fontified nil) 1 2 (wrap-prefix "  " font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil) 2 3 (wrap-prefix "  " font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil) 3 5 (wrap-prefix "  " help-echo "{{site.baseurl}}/assets/proj5/1.4_clean.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) fontified nil) 5 6 (wrap-prefix "  " font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil) 6 7 (wrap-prefix "  " font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil) 7 50 (wrap-prefix "  " font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified nil) 50 51 (wrap-prefix "  " font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil) 51 53 (wrap-prefix "  " face (markdown-table-face) fontified nil)) . 8567) (undo-tree-id5570 . -53) (undo-tree-id5571 . -53) (undo-tree-id5572 . -53) (undo-tree-id5573 . -53) (undo-tree-id5574 . -53) (undo-tree-id5575 . -53) (#(":--------------------------------------------------:|" 0 53 (wrap-prefix "  " face (markdown-table-face) fontified nil)) . 8451) (#(" Iterative                                          |" 0 53 (wrap-prefix "  " face (markdown-table-face) fontified t)) . 8335) (undo-tree-id5576 . -1) (undo-tree-id5577 . -52) (undo-tree-id5578 . -1) (undo-tree-id5579 . -52) (undo-tree-id5580 . -52) (undo-tree-id5581 . -1) (undo-tree-id5582 . -52) (undo-tree-id5583 . -1) 8726) ((8335 . 8388) (8451 . 8504) (8567 . 8620)) (26429 27023 471260 931000) 0 nil])
([nil nil ((8281 . 8285) (#("OneStep" 0 7 (face (markdown-table-face) fontified t wrap-prefix "  ")) . 8281)) nil (26429 27038 293604 243000) 0 nil])
([nil nil ((8223 . 8230) (8222 . 8223) (#("Gauss" 0 5 (face (markdown-table-face) wrap-prefix "  " fontified t)) . 8222)) ((8222 . 8227) (#("O" 0 1 (face (markdown-table-face) wrap-prefix "  " fontified nil)) . 8222) (#("riginal" 0 7 (face (markdown-table-face) wrap-prefix "  " fontified t)) . 8223)) (26429 27023 470599 528000) 0 nil])
([nil nil ((8336 . 8346) (#("Iterative" 0 9 (face (markdown-table-face) fontified t wrap-prefix "  ")) . 8336)) nil (26429 27038 293597 79000) 0 nil])
nil
([nil nil ((8599 . 8602) (#("2" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -8599) (undo-tree-id5654 . -1) (undo-tree-id5655 . -1) (undo-tree-id5656 . -1) (undo-tree-id5657 . -1) (undo-tree-id5658 . -1) (undo-tree-id5659 . -1) (undo-tree-id5660 . -1) (undo-tree-id5661 . -1) 8600 (t 26429 27038 313411 227000)) nil (26429 27095 851189 603000) 0 nil])
([nil nil ((8603 . 8605) (#("gauss750" 0 8 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . 8603) (undo-tree-id5635 . -8) (undo-tree-id5636 . -8) (undo-tree-id5637 . -8) (undo-tree-id5638 . -7) (undo-tree-id5639 . -8) (undo-tree-id5640 . -6) (undo-tree-id5641 . -7) (undo-tree-id5642 . -5) (undo-tree-id5643 . -6) (undo-tree-id5644 . -4) (undo-tree-id5645 . -5) (undo-tree-id5646 . -3) (undo-tree-id5647 . -4) (undo-tree-id5648 . -2) (undo-tree-id5649 . -3) (undo-tree-id5650 . -1) (undo-tree-id5651 . -2) (undo-tree-id5652 . -1) (undo-tree-id5653 . -1)) nil (26429 27095 851183 431000) 0 nil])
([nil nil ((8606 . 8608) (#("m" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -8606) (undo-tree-id5632 . -1) (undo-tree-id5633 . -1) (undo-tree-id5634 . -1) 8607 (8605 . 8607)) nil (26429 27095 851165 567000) 0 nil])
([nil nil ((#("1.3_onestep750" 0 14 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . 8652) (undo-tree-id5615 . -13) (undo-tree-id5616 . -13) (undo-tree-id5617 . -13) (undo-tree-id5618 . -1) (undo-tree-id5619 . -2) (undo-tree-id5620 . -1) (undo-tree-id5621 . -3) (undo-tree-id5622 . -2) (undo-tree-id5623 . -4) (undo-tree-id5624 . -3) (undo-tree-id5625 . -14) (undo-tree-id5626 . -4) (undo-tree-id5627 . -14) (undo-tree-id5628 . -14) (undo-tree-id5629 . -13) (undo-tree-id5630 . -14) (undo-tree-id5631 . -13) 8665) nil (26429 27095 851162 431000) 0 nil])
([nil nil ((8652 . 8665)) nil (26429 27095 851147 753000) 0 nil])
([nil nil ((#("1.4_clean.png" 0 13 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . 8709) (undo-tree-id5593 . -12) (undo-tree-id5594 . -12) (undo-tree-id5595 . -13) (undo-tree-id5596 . -12) (undo-tree-id5597 . -13) (undo-tree-id5598 . -12) (undo-tree-id5599 . -12) (undo-tree-id5600 . -12) (undo-tree-id5601 . -12) (undo-tree-id5602 . -10) (undo-tree-id5603 . -12) (undo-tree-id5604 . -9) (undo-tree-id5605 . -10) (undo-tree-id5606 . -4) (undo-tree-id5607 . -9) (undo-tree-id5608 . -3) (undo-tree-id5609 . -4) (undo-tree-id5610 . -2) (undo-tree-id5611 . -3) (undo-tree-id5612 . -1) (undo-tree-id5613 . -2) (undo-tree-id5614 . -1)) nil (26429 27095 851144 818000) 0 nil])
([nil nil ((8712 . 8725) (8709 . 8712)) nil (26429 27095 847174 126000) 0 nil])
([nil nil ((#("n" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . 8723) (undo-tree-id5584 . -1) (undo-tree-id5585 . -1) (undo-tree-id5586 . -1) (undo-tree-id5587 . -1) (undo-tree-id5588 . -1) (undo-tree-id5589 . -1) (undo-tree-id5590 . -1) (undo-tree-id5591 . -1) (undo-tree-id5592 . -1)) nil (26429 27095 847169 77000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8727 . 8728) (#("
" 0 1 (fontified nil wrap-prefix "  " face (markdown-table-face) font-lock-multiline t)) . -8896) (8727 . 8897) 8559 (t 26429 27095 864282 126000)) nil (26429 27351 857850 668000) 0 nil])
([nil nil ((8773 . 8774) (#("1" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -8773) (undo-tree-id5672 . -1) (undo-tree-id5673 . -1) (undo-tree-id5674 . -1) (undo-tree-id5675 . -1) (undo-tree-id5676 . -1) 8774) nil (26429 27351 857849 446000) 0 nil])
([nil nil ((8828 . 8829) (#("1" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -8828) (undo-tree-id5667 . -1) (undo-tree-id5668 . -1) (undo-tree-id5669 . -1) (undo-tree-id5670 . -1) (undo-tree-id5671 . -1) 8829) nil (26429 27351 857844 907000) 0 nil])
([nil nil ((8885 . 8886) (#("1" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -8885) (undo-tree-id5662 . -1) (undo-tree-id5663 . -1) (undo-tree-id5664 . -1) (undo-tree-id5665 . -1) (undo-tree-id5666 . -1) 8886) nil (26429 27351 857830 440000) 0 nil])
([nil nil ((8906 . 8924) (#("P" 0 1 (font-lock-multiline t face markdown-header-face-1 markdown-heading-1-atx (8898 8907 nil nil nil nil nil nil 8898 8900 8900 8907 8907 8907 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (8898 8907 nil nil nil nil nil nil 8898 8900 8900 8907 8907 8907 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ")) . -8906) (undo-tree-id5677 . -1) (undo-tree-id5678 . -1) (undo-tree-id5679 . -1) 8907 (8898 . 8907) (t 26429 27351 875156 276000)) nil (26429 28398 186087 172000) 0 nil])
([nil nil ((8924 . 8925) 8923) nil (26429 28398 186069 38000) 0 nil])
([nil nil ((8925 . 8926) (8924 . 8925) (t 26429 28398 208990 150000) 8923) nil (26429 28399 520758 981000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10536 . 10537) (nil fontified nil 8926 . 10537) (8926 . 10537) (t 26429 28399 535010 216000)) nil (26429 28644 846682 600000) 0 nil])
([nil nil ((9576 . 9577) (#("1" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -9576) (undo-tree-id5680 . -1) (undo-tree-id5681 . -1) (undo-tree-id5682 . -1) (undo-tree-id5683 . -1) (undo-tree-id5684 . -1) (undo-tree-id5685 . -1) (undo-tree-id5686 . -1) (undo-tree-id5687 . -1) (undo-tree-id5688 . -1) 9577) nil (26429 28644 846677 570000) 0 nil])
([nil nil ((9631 . 9632) (#("1" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -9631) (undo-tree-id5724 . -1) (undo-tree-id5725 . -1) (undo-tree-id5726 . -1) (undo-tree-id5727 . -1) (undo-tree-id5728 . -1) (undo-tree-id5729 . -1) (undo-tree-id5730 . -1) 9632 (t 26429 28644 868722 786000)) nil (26429 28671 654644 66000) 0 nil])
([nil nil ((9686 . 9687) (#("1" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -9686) (undo-tree-id5717 . -1) (undo-tree-id5718 . -1) (undo-tree-id5719 . -1) (undo-tree-id5720 . -1) (undo-tree-id5721 . -1) (undo-tree-id5722 . -1) (undo-tree-id5723 . -1) 9687) nil (26429 28671 654639 357000) 0 nil])
([nil nil ((9741 . 9742) (#("1" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -9741) (undo-tree-id5703 . -1) (undo-tree-id5704 . -1) (undo-tree-id5705 . -1) (undo-tree-id5706 . -1) (undo-tree-id5707 . -1) (undo-tree-id5708 . -1) (undo-tree-id5709 . -1) (undo-tree-id5710 . -1) (undo-tree-id5711 . -1) (undo-tree-id5712 . -1) (undo-tree-id5713 . -1) (#("i" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -9742) (undo-tree-id5714 . -1) (undo-tree-id5715 . -1) (undo-tree-id5716 . -1) 9743 (9742 . 9743)) nil (26429 28671 654630 140000) 0 nil])
([nil nil ((9796 . 9797) (#("1" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -9796) (undo-tree-id5696 . -1) (undo-tree-id5697 . -1) (undo-tree-id5698 . -1) (undo-tree-id5699 . -1) (undo-tree-id5700 . -1) (undo-tree-id5701 . -1) (undo-tree-id5702 . -1) 9797) nil (26429 28671 653270 575000) 0 nil])
([nil nil ((9852 . 9853) (#("1" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -9852) (undo-tree-id5689 . -1) (undo-tree-id5690 . -1) (undo-tree-id5691 . -1) (undo-tree-id5692 . -1) (undo-tree-id5693 . -1) (undo-tree-id5694 . -1) (undo-tree-id5695 . -1) 9853) nil (26429 28671 653261 387000) 0 nil])
([nil nil ((#("| ![dx]({{site.baseurl}}/assets/proj5/1.7.1_i2_t1.png) | ![dx]({{site.baseurl}}/assets/proj5/1.7.1_i2_t3.png) | ![dx]({{site.baseurl}}/assets/proj5/1.7.1_i2_t5.png) | ![dx]({{site.baseurl}}/assets/proj5/1.7.1_i2_t7.png) | ![dx]({{site.baseurl}}/assets/proj5/1.7.1_i2_t10.png) | ![dx]({{site.baseurl}}/assets/proj5/1.7.1_i2_t20.png) |
" 0 2 (face (markdown-table-face) wrap-prefix "  " fontified t) 2 3 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 3 4 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 4 6 (help-echo "{{site.baseurl}}/assets/proj5/1.7.1_i2_t1.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) wrap-prefix "  " fontified t) 6 7 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 7 8 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 8 53 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t) 53 54 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 54 57 (face (markdown-table-face) wrap-prefix "  " fontified t) 57 58 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 58 59 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 59 61 (help-echo "{{site.baseurl}}/assets/proj5/1.7.1_i2_t3.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) wrap-prefix "  " fontified t) 61 62 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 62 63 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 63 108 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t) 108 109 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 109 112 (face (markdown-table-face) wrap-prefix "  " fontified t) 112 113 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 113 114 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 114 116 (help-echo "{{site.baseurl}}/assets/proj5/1.7.1_i2_t5.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) wrap-prefix "  " fontified t) 116 117 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 117 118 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 118 163 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t) 163 164 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 164 167 (face (markdown-table-face) wrap-prefix "  " fontified t) 167 168 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 168 169 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 169 171 (help-echo "{{site.baseurl}}/assets/proj5/1.7.1_i2_t7.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) wrap-prefix "  " fontified t) 171 172 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 172 173 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 173 218 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t) 218 219 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 219 222 (face (markdown-table-face) wrap-prefix "  " fontified t) 222 223 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 223 224 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 224 226 (help-echo "{{site.baseurl}}/assets/proj5/1.7.1_i2_t10.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) wrap-prefix "  " fontified t) 226 227 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 227 228 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 228 274 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t) 274 275 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 275 278 (face (markdown-table-face) wrap-prefix "  " fontified t) 278 279 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 279 280 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 280 282 (help-echo "{{site.baseurl}}/assets/proj5/1.7.1_i2_t20.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) wrap-prefix "  " fontified t) 282 283 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 283 284 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 284 330 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t) 330 331 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 331 333 (face (markdown-table-face) wrap-prefix "  " fontified t) 333 334 (font-lock-multiline t face (markdown-table-face) wrap-prefix "  " fontified t)) . 9868) (undo-tree-id5740 . -318) (undo-tree-id5741 . -318) (undo-tree-id5742 . -318) (undo-tree-id5743 . -318) (undo-tree-id5744 . -318) 10186 (t 26429 28671 675128 435000)) nil (26429 28680 965045 954000) 0 nil])
([nil nil ((#("| ![dx]({{site.baseurl}}/assets/proj5/1.7.1_i3_t1.png) | ![dx]({{site.baseurl}}/assets/proj5/1.7.1_i3_t3.png) | ![dx]({{site.baseurl}}/assets/proj5/1.7.1_i3_t5.png) | ![dx]({{site.baseurl}}/assets/proj5/1.7.1_i3_t7.png) | ![dx]({{site.baseurl}}/assets/proj5/1.7.1_i3_t10.png) | ![dx]({{site.baseurl}}/assets/proj5/1.7.1_i3_t20.png) |
" 0 2 (face (markdown-table-face) wrap-prefix "  " fontified t) 2 3 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 3 4 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 4 6 (help-echo "{{site.baseurl}}/assets/proj5/1.7.1_i3_t1.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) wrap-prefix "  " fontified t) 6 7 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 7 8 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 8 53 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t) 53 54 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 54 57 (face (markdown-table-face) wrap-prefix "  " fontified t) 57 58 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 58 59 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 59 61 (help-echo "{{site.baseurl}}/assets/proj5/1.7.1_i3_t3.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) wrap-prefix "  " fontified t) 61 62 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 62 63 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 63 108 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t) 108 109 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 109 112 (face (markdown-table-face) wrap-prefix "  " fontified t) 112 113 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 113 114 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 114 116 (help-echo "{{site.baseurl}}/assets/proj5/1.7.1_i3_t5.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) wrap-prefix "  " fontified t) 116 117 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 117 118 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 118 163 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t) 163 164 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 164 167 (face (markdown-table-face) wrap-prefix "  " fontified t) 167 168 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 168 169 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 169 171 (help-echo "{{site.baseurl}}/assets/proj5/1.7.1_i3_t7.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) wrap-prefix "  " fontified t) 171 172 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 172 173 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 173 218 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t) 218 219 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 219 222 (face (markdown-table-face) wrap-prefix "  " fontified t) 222 223 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 223 224 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 224 226 (help-echo "{{site.baseurl}}/assets/proj5/1.7.1_i3_t10.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) wrap-prefix "  " fontified t) 226 227 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 227 228 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 228 274 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t) 274 275 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 275 278 (face (markdown-table-face) wrap-prefix "  " fontified t) 278 279 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 279 280 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 280 282 (help-echo "{{site.baseurl}}/assets/proj5/1.7.1_i3_t20.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) wrap-prefix "  " fontified t) 282 283 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 283 284 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 284 330 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t) 330 331 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 331 333 (face (markdown-table-face) wrap-prefix "  " fontified t) 333 334 (font-lock-multiline t face (markdown-table-face) wrap-prefix "  " fontified t)) . 9868) (undo-tree-id5731 . -334) (undo-tree-id5732 . -318) (undo-tree-id5733 . -334) (undo-tree-id5734 . -318) (undo-tree-id5735 . -318) (undo-tree-id5736 . -318) (undo-tree-id5737 . -318) (undo-tree-id5738 . -318) (undo-tree-id5739 . -318) 10186) nil (26429 28680 965034 843000) 0 nil])
([nil nil ((9890 . 9891) (9869 . 9890) (t 26429 28680 973269 140000)) nil (26429 28819 800265 821000) 0 nil])
([nil nil ((9892 . 9893) (9891 . 9892) 9890) nil (26429 28819 800265 300000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10570 . 10571) (nil fontified nil 9893 . 10571) (9893 . 10571)) nil (26429 28819 800264 659000) 0 nil])
([nil nil ((#("[dx]({{site.baseurl}}/assets/proj5/1.7.2_i2_in.png) |" 0 1 (wrap-prefix "  " font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil) 1 3 (wrap-prefix "  " help-echo "{{site.baseurl}}/assets/proj5/1.7.2_i2_in.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) fontified nil) 3 4 (wrap-prefix "  " font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil) 4 5 (wrap-prefix "  " font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil) 5 50 (wrap-prefix "  " font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified nil) 50 51 (wrap-prefix "  " font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil) 51 53 (wrap-prefix "  " face (markdown-table-face) fontified nil)) . 10356) (undo-tree-id5756 . -53) (undo-tree-id5757 . -53) (undo-tree-id5758 . -53) (undo-tree-id5759 . -53) (undo-tree-id5760 . -53) (undo-tree-id5761 . -53) (#("[dx]({{site.baseurl}}/assets/proj5/1.7.2_i1_in.png) |" 0 1 (wrap-prefix "  " font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil) 1 3 (wrap-prefix "  " help-echo "{{site.baseurl}}/assets/proj5/1.7.2_i1_in.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) fontified nil) 3 4 (wrap-prefix "  " font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil) 4 5 (wrap-prefix "  " font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil) 5 50 (wrap-prefix "  " font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified nil) 50 51 (wrap-prefix "  " font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil) 51 53 (wrap-prefix "  " face (markdown-table-face) fontified nil)) . 10240) (#(":--------------------------------------------------:|" 0 53 (wrap-prefix "  " face (markdown-table-face) fontified nil)) . 10124) (#(" Inpainting                                          |" 0 54 (wrap-prefix "  " face (markdown-table-face) fontified t)) . 10008) (undo-tree-id5762 . -53) (undo-tree-id5763 . -53) 10569) nil (26429 28819 800263 547000) 0 nil])
([nil nil ((#("!" 0 1 (face (markdown-table-face) wrap-prefix "  " fontified t)) . 10239) (undo-tree-id5752 . -1) (undo-tree-id5753 . -1) (undo-tree-id5754 . -1) (undo-tree-id5755 . -1)) nil (26429 28819 800257 956000) 0 nil])
([nil nil ((#(" " 0 1 (face (markdown-table-face) wrap-prefix "  " fontified t)) . 10353)) nil (26429 28819 800248 979000) 0 nil])
([nil nil ((#("!" 0 1 (face (markdown-table-face) wrap-prefix "  " fontified t)) . 10353) (undo-tree-id5745 . -1) (undo-tree-id5746 . -1) (undo-tree-id5747 . -1) (undo-tree-id5748 . -1) (undo-tree-id5749 . -1) (undo-tree-id5750 . -1) (undo-tree-id5751 . -1)) nil (26429 28819 800243 970000) 0 nil])
([nil nil ((9895 . 9900) (#("Original" 0 8 (face (markdown-table-face) wrap-prefix "  " fontified t)) . 9895) (t 26429 28819 824370 336000)) nil (26429 28858 352806 150000) 0 nil])
([nil nil ((9951 . 9957) (#("Mask" 0 4 (face (markdown-table-face) wrap-prefix "  " fontified t)) . 9951)) nil (26429 28858 352805 358000) 0 nil])
([nil nil ((10174 . 10180) (#("-" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -10174) (undo-tree-id5891 . -1) (undo-tree-id5892 . -1) (undo-tree-id5893 . -1) 10175 (10164 . 10175) (#("_" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -10164) (undo-tree-id5894 . -1) (undo-tree-id5895 . -1) (undo-tree-id5896 . -1) 10165 (10164 . 10165) (#("8" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -10164) (undo-tree-id5897 . -1) (undo-tree-id5898 . -1) (undo-tree-id5899 . -1) (undo-tree-id5900 . -1) (undo-tree-id5901 . -1) (undo-tree-id5902 . -1) (undo-tree-id5903 . -1) (undo-tree-id5904 . -1) (undo-tree-id5905 . -1) (undo-tree-id5906 . -1) (undo-tree-id5907 . -1) (undo-tree-id5908 . -1) (undo-tree-id5909 . -1) (undo-tree-id5910 . -1) (undo-tree-id5911 . -1) (undo-tree-id5912 . -1) (undo-tree-id5913 . -1) (undo-tree-id5914 . -1) (undo-tree-id5915 . -1) (undo-tree-id5916 . -1) (undo-tree-id5917 . -1) (undo-tree-id5918 . -1) (undo-tree-id5919 . -1) (undo-tree-id5920 . -1) (undo-tree-id5921 . -1) (undo-tree-id5922 . -1) (undo-tree-id5923 . -1) (#("." 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -10165) (undo-tree-id5924 . -1) (undo-tree-id5925 . -1) (undo-tree-id5926 . -1) (undo-tree-id5927 . -1) (undo-tree-id5928 . -1) (undo-tree-id5929 . -1) (undo-tree-id5930 . -1) (undo-tree-id5931 . -1) (undo-tree-id5932 . -1) (undo-tree-id5933 . -1) (undo-tree-id5934 . -1) (undo-tree-id5935 . -1) (undo-tree-id5936 . -1) (undo-tree-id5937 . -1) (undo-tree-id5938 . -1) (undo-tree-id5939 . -1) (undo-tree-id5940 . -1) (undo-tree-id5941 . -1) (undo-tree-id5942 . -1) (#("a" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -10166) (undo-tree-id5943 . -1) (undo-tree-id5944 . -1) (undo-tree-id5945 . -1) (undo-tree-id5946 . -1) (undo-tree-id5947 . -1) (undo-tree-id5948 . -1) (undo-tree-id5949 . -1) (undo-tree-id5950 . -1) (undo-tree-id5951 . -1) (undo-tree-id5952 . -1) (undo-tree-id5953 . -1) (undo-tree-id5954 . -1) (undo-tree-id5955 . -1) (undo-tree-id5956 . -1) (undo-tree-id5957 . -1) (#("n" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -10167) (undo-tree-id5958 . -1) (undo-tree-id5959 . -1) (undo-tree-id5960 . -1) (undo-tree-id5961 . -1) (undo-tree-id5962 . -1) (undo-tree-id5963 . -1) (undo-tree-id5964 . -1) (undo-tree-id5965 . -1) (undo-tree-id5966 . -1) (undo-tree-id5967 . -1) (undo-tree-id5968 . -1) (#("a" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -10168) (undo-tree-id5969 . -1) (undo-tree-id5970 . -1) (undo-tree-id5971 . -1) (undo-tree-id5972 . -1) (undo-tree-id5973 . -1) 10169 (10165 . 10169) (#("_" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -10165) (undo-tree-id5974 . -1) (undo-tree-id5975 . -1) (undo-tree-id5976 . -1) 10166 (10164 . 10166) (#("7." 0 2 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -10164) (undo-tree-id5977 . -2) (undo-tree-id5978 . -2) (undo-tree-id5979 . -2) (undo-tree-id5980 . -2) (undo-tree-id5981 . -2) (undo-tree-id5982 . -2) (undo-tree-id5983 . -2) (undo-tree-id5984 . -2) (undo-tree-id5985 . -2) (undo-tree-id5986 . -2) (undo-tree-id5987 . -2) (undo-tree-id5988 . -2) (undo-tree-id5989 . -2) (undo-tree-id5990 . -2) (undo-tree-id5991 . -2) 10166 (#("2_" 0 2 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -10166) (undo-tree-id5992 . -2) (undo-tree-id5993 . -2) (undo-tree-id5994 . -2) (undo-tree-id5995 . -2) (undo-tree-id5996 . -2) (undo-tree-id5997 . -2) (undo-tree-id5998 . -2) (undo-tree-id5999 . -2) (undo-tree-id6000 . -2) (undo-tree-id6001 . -2) (undo-tree-id6002 . -2) (undo-tree-id6003 . -2) (undo-tree-id6004 . -2) 10168 (#("i1_" 0 3 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -10168) (undo-tree-id6005 . -3) (undo-tree-id6006 . -3) (undo-tree-id6007 . -3) (undo-tree-id6008 . -3) (undo-tree-id6009 . -3) (undo-tree-id6010 . -3) (undo-tree-id6011 . -3) (undo-tree-id6012 . -3) (undo-tree-id6013 . -3) (undo-tree-id6014 . -3) (undo-tree-id6015 . -3) 10171 (#("og." 0 3 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -10171) (undo-tree-id6016 . -3) (undo-tree-id6017 . -3) (undo-tree-id6018 . -3) (undo-tree-id6019 . -3) (undo-tree-id6020 . -3) (undo-tree-id6021 . -3) (undo-tree-id6022 . -3) (undo-tree-id6023 . -3) (undo-tree-id6024 . -3) 10174 (#("png" 0 3 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -10174) (undo-tree-id6025 . -3) (undo-tree-id6026 . -3) (undo-tree-id6027 . -3) (undo-tree-id6028 . -3) (undo-tree-id6029 . -3) (undo-tree-id6030 . -3) (undo-tree-id6031 . -3) 10177) nil (26429 28858 352801 221000) 0 nil])
([nil nil ((10222 . 10238) (#("7" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -10222) (undo-tree-id5764 . -1) (undo-tree-id5765 . -1) (undo-tree-id5766 . -1) (undo-tree-id5767 . -1) (undo-tree-id5768 . -1) (undo-tree-id5769 . -1) (undo-tree-id5770 . -1) (undo-tree-id5771 . -1) (undo-tree-id5772 . -1) (undo-tree-id5773 . -1) (undo-tree-id5774 . -1) (undo-tree-id5775 . -1) (undo-tree-id5776 . -1) (undo-tree-id5777 . -1) (undo-tree-id5778 . -1) (undo-tree-id5779 . -1) (undo-tree-id5780 . -1) (undo-tree-id5781 . -1) (undo-tree-id5782 . -1) (undo-tree-id5783 . -1) (undo-tree-id5784 . -1) (undo-tree-id5785 . -1) (undo-tree-id5786 . -1) (undo-tree-id5787 . -1) (undo-tree-id5788 . -1) (undo-tree-id5789 . -1) 10223 (#("." 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -10223) (undo-tree-id5790 . -1) (undo-tree-id5791 . -1) (undo-tree-id5792 . -1) (undo-tree-id5793 . -1) (undo-tree-id5794 . -1) (undo-tree-id5795 . -1) (undo-tree-id5796 . -1) (undo-tree-id5797 . -1) (undo-tree-id5798 . -1) (undo-tree-id5799 . -1) (undo-tree-id5800 . -1) (undo-tree-id5801 . -1) (undo-tree-id5802 . -1) (undo-tree-id5803 . -1) (undo-tree-id5804 . -1) (undo-tree-id5805 . -1) (undo-tree-id5806 . -1) (undo-tree-id5807 . -1) (undo-tree-id5808 . -1) (undo-tree-id5809 . -1) (undo-tree-id5810 . -1) (undo-tree-id5811 . -1) (undo-tree-id5812 . -1) 10224 (#("2" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -10224) (undo-tree-id5813 . -1) (undo-tree-id5814 . -1) (undo-tree-id5815 . -1) (undo-tree-id5816 . -1) (undo-tree-id5817 . -1) (undo-tree-id5818 . -1) (undo-tree-id5819 . -1) (undo-tree-id5820 . -1) (undo-tree-id5821 . -1) (undo-tree-id5822 . -1) (undo-tree-id5823 . -1) (undo-tree-id5824 . -1) (undo-tree-id5825 . -1) (undo-tree-id5826 . -1) (undo-tree-id5827 . -1) (undo-tree-id5828 . -1) (undo-tree-id5829 . -1) (undo-tree-id5830 . -1) (undo-tree-id5831 . -1) (undo-tree-id5832 . -1) 10225 (#("_" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -10225) (undo-tree-id5833 . -1) (undo-tree-id5834 . -1) (undo-tree-id5835 . -1) (undo-tree-id5836 . -1) (undo-tree-id5837 . -1) (undo-tree-id5838 . -1) (undo-tree-id5839 . -1) (undo-tree-id5840 . -1) (undo-tree-id5841 . -1) (undo-tree-id5842 . -1) (undo-tree-id5843 . -1) (undo-tree-id5844 . -1) (undo-tree-id5845 . -1) (undo-tree-id5846 . -1) (undo-tree-id5847 . -1) (undo-tree-id5848 . -1) (undo-tree-id5849 . -1) 10226 (#("i1" 0 2 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -10226) (undo-tree-id5850 . -2) (undo-tree-id5851 . -2) (undo-tree-id5852 . -2) (undo-tree-id5853 . -2) (undo-tree-id5854 . -2) (undo-tree-id5855 . -2) (undo-tree-id5856 . -2) (undo-tree-id5857 . -2) (undo-tree-id5858 . -2) (undo-tree-id5859 . -2) (undo-tree-id5860 . -2) (undo-tree-id5861 . -2) (undo-tree-id5862 . -2) (undo-tree-id5863 . -2) 10228 (#("_" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -10228) (undo-tree-id5864 . -1) (undo-tree-id5865 . -1) (undo-tree-id5866 . -1) (undo-tree-id5867 . -1) (undo-tree-id5868 . -1) (undo-tree-id5869 . -1) (undo-tree-id5870 . -1) (undo-tree-id5871 . -1) (undo-tree-id5872 . -1) (undo-tree-id5873 . -1) (undo-tree-id5874 . -1) 10229 (#("mask." 0 5 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -10229) (undo-tree-id5875 . -5) (undo-tree-id5876 . -5) (undo-tree-id5877 . -5) (undo-tree-id5878 . -5) (undo-tree-id5879 . -5) (undo-tree-id5880 . -5) (undo-tree-id5881 . -5) (undo-tree-id5882 . -5) (undo-tree-id5883 . -5) 10234 (#("png" 0 3 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -10234) (undo-tree-id5884 . -3) (undo-tree-id5885 . -3) (undo-tree-id5886 . -3) (undo-tree-id5887 . -3) (undo-tree-id5888 . -3) (undo-tree-id5889 . -3) (undo-tree-id5890 . -3) 10237) nil (26429 28858 352724 545000) 0 nil])
([nil nil ((#("| ![dx]({{site.baseurl}}/assets/proj5/1.7.2_i2_og.png) | ![dx]({{site.baseurl}}/assets/proj5/1.7.2_i2_mask.png) |
" 0 2 (face (markdown-table-face) wrap-prefix "  " fontified t) 2 3 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 3 4 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 4 6 (help-echo "{{site.baseurl}}/assets/proj5/1.7.2_i2_og.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) wrap-prefix "  " fontified t) 6 7 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 7 8 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 8 53 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t) 53 54 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 54 57 (face (markdown-table-face) wrap-prefix "  " fontified t) 57 58 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 58 59 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 59 61 (help-echo "{{site.baseurl}}/assets/proj5/1.7.2_i2_mask.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) wrap-prefix "  " fontified t) 61 62 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 62 63 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 63 110 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t) 110 111 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified t) 111 113 (face (markdown-table-face) wrap-prefix "  " fontified t) 113 114 (font-lock-multiline t face (markdown-table-face) wrap-prefix "  " fontified t)) . 10243) (undo-tree-id6043 . -3) (undo-tree-id6044 . -114) (undo-tree-id6045 . -114) (undo-tree-id6046 . -114) (undo-tree-id6047 . -3) (undo-tree-id6048 . -114) (undo-tree-id6049 . -114) (undo-tree-id6050 . -114) (undo-tree-id6051 . -114) (undo-tree-id6052 . -114) (undo-tree-id6053 . -114) (undo-tree-id6054 . -114) (undo-tree-id6055 . -3) (undo-tree-id6056 . -3) (undo-tree-id6057 . -3) (undo-tree-id6058 . -3) (undo-tree-id6059 . -3) (undo-tree-id6060 . -3) (undo-tree-id6061 . -3) (undo-tree-id6062 . -3) (undo-tree-id6063 . -3) (undo-tree-id6064 . -3) (undo-tree-id6065 . -3) 10246 (t 26429 28858 372953 683000)) nil (26429 28931 148094 106000) 0 nil])
([nil nil ((9895 . 9902) (#("Image" 0 5 (face (markdown-table-face) wrap-prefix "  " fontified t)) . 9895)) nil (26429 28931 148067 576000) 0 nil])
([nil nil ((9953 . 9961) (#("~" 0 1 (face (markdown-table-face) wrap-prefix "  " fontified t)) . -9953) (undo-tree-id6032 . -1) (undo-tree-id6033 . -1) (undo-tree-id6034 . -1) (undo-tree-id6035 . -1) (undo-tree-id6036 . -1) (undo-tree-id6037 . -1) (undo-tree-id6038 . -1) (undo-tree-id6039 . -1) (undo-tree-id6040 . -1) (undo-tree-id6041 . -1) (undo-tree-id6042 . -1) 9954 (#("Image" 0 5 (face (markdown-table-face) wrap-prefix "  " fontified t)) . 9954)) nil (26429 28931 148062 456000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10603 . 10604) (nil fontified nil 10249 . 10604) (10249 . 10604) (t 26429 28931 169055 288000)) nil (26429 28941 277997 437000) 0 nil])
([nil nil ((10309 . 10316) (#("Campfire" 0 8 (wrap-prefix "  " face (markdown-table-face) fontified t)) . 10309)) nil (26429 28941 277982 348000) 0 nil])
([nil nil ((10532 . 10533) (#("1" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -10532) (undo-tree-id6073 . -1) (undo-tree-id6074 . -1) (undo-tree-id6075 . -1) (undo-tree-id6076 . -1) (undo-tree-id6077 . -1) (undo-tree-id6078 . -1) (undo-tree-id6079 . -1) (undo-tree-id6080 . -1) (undo-tree-id6081 . -1) (undo-tree-id6082 . -1) 10533 (t 26429 28941 288208 415000)) nil (26429 28995 597321 874000) 0 nil])
([nil nil ((10590 . 10591) (#("1" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -10590) (undo-tree-id6066 . -1) (undo-tree-id6067 . -1) (undo-tree-id6068 . -1) (undo-tree-id6069 . -1) (undo-tree-id6070 . -1) (undo-tree-id6071 . -1) (undo-tree-id6072 . -1) 10591) nil (26429 28995 597310 102000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10956 . 10957) (nil fontified nil 10603 . 10957) (10603 . 10957) (t 26429 28995 607030 410000)) nil (26429 29024 680514 365000) 0 nil])
([nil nil ((10663 . 10666) (#("Barista" 0 7 (wrap-prefix "  " face (markdown-table-face) fontified t)) . 10663)) nil (26429 29024 680507 11000) 0 nil])
([nil nil ((10882 . 10883) (#("2" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -10882) (undo-tree-id6090 . -1) (undo-tree-id6091 . -1) (undo-tree-id6092 . -1) (undo-tree-id6093 . -1) (undo-tree-id6094 . -1) 10883 (t 26429 29024 702470 701000)) nil (26429 29070 887126 816000) 0 nil])
([nil nil ((10940 . 10941) (#("2" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -10940) (undo-tree-id6083 . -1) (undo-tree-id6084 . -1) (undo-tree-id6085 . -1) (undo-tree-id6086 . -1) (undo-tree-id6087 . -1) (undo-tree-id6088 . -1) (undo-tree-id6089 . -1) 10941) nil (26429 29070 886103 878000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9867 . 9868) (#("
" 0 1 (fontified nil wrap-prefix "  " face (markdown-table-face) font-lock-multiline t)) . -10201) (9867 . 10202) 9555 (t 26429 29070 901169 811000)) nil (26429 29166 571054 385000) 0 nil])
([nil nil ((9913 . 9914) (#("1" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -9913) (undo-tree-id6124 . -1) (undo-tree-id6125 . -1) (undo-tree-id6126 . -1) (undo-tree-id6127 . -1) (undo-tree-id6128 . -1) (undo-tree-id6129 . -1) (undo-tree-id6130 . -1) 9914) nil (26429 29166 571053 213000) 0 nil])
([nil nil ((9968 . 9969) (#("1" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -9968) (undo-tree-id6119 . -1) (undo-tree-id6120 . -1) (undo-tree-id6121 . -1) (undo-tree-id6122 . -1) (undo-tree-id6123 . -1) 9969) nil (26429 29166 571046 280000) 0 nil])
([nil nil ((10023 . 10024) (#("1" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -10023) (undo-tree-id6114 . -1) (undo-tree-id6115 . -1) (undo-tree-id6116 . -1) (undo-tree-id6117 . -1) (undo-tree-id6118 . -1) 10024) nil (26429 29166 571042 343000) 0 nil])
([nil nil ((10078 . 10079) (#("1" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -10078) (undo-tree-id6109 . -1) (undo-tree-id6110 . -1) (undo-tree-id6111 . -1) (undo-tree-id6112 . -1) (undo-tree-id6113 . -1) 10079) nil (26429 29166 571038 626000) 0 nil])
([nil nil ((10133 . 10134) (#("1" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -10133) (undo-tree-id6102 . -1) (undo-tree-id6103 . -1) (undo-tree-id6104 . -1) (undo-tree-id6105 . -1) (undo-tree-id6106 . -1) (undo-tree-id6107 . -1) (undo-tree-id6108 . -1) 10134) nil (26429 29166 571024 799000) 0 nil])
([nil nil ((10189 . 10190) (#("1" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -10189) (undo-tree-id6095 . -1) (undo-tree-id6096 . -1) (undo-tree-id6097 . -1) (undo-tree-id6098 . -1) (undo-tree-id6099 . -1) (undo-tree-id6100 . -1) (undo-tree-id6101 . -1) 10190) nil (26429 29166 571014 830000) 0 nil])
([nil nil ((11309 . 11316) (11307 . 11309) (11287 . 11307) (#("
" 0 1 (fontified t wrap-prefix "  ")) . -11287) (undo-tree-id6218 . -1) (undo-tree-id6219 . -1) (undo-tree-id6220 . -1) (undo-tree-id6221 . -1) (undo-tree-id6222 . -1) 11288 (11287 . 11288) (t 26429 29166 593617 901000)) nil (26429 29297 368497 202000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11657 . 11658) (nil fontified nil 11308 . 11658) (11308 . 11658)) nil (26429 29297 368493 626000) 0 nil])
([nil nil ((#("
Hybrid " 0 1 (fontified t wrap-prefix "  ") 1 8 (fontified t wrap-prefix "  ")) . 11658) (undo-tree-id6174 . -1) (undo-tree-id6175 . -1) (undo-tree-id6176 . -1) (undo-tree-id6177 . -1) (undo-tree-id6178 . -1) (undo-tree-id6179 . -1) (undo-tree-id6180 . -1) (undo-tree-id6181 . -1) (undo-tree-id6182 . -1) (undo-tree-id6183 . -1) (undo-tree-id6184 . -1) (undo-tree-id6185 . -1) (undo-tree-id6186 . -1) (undo-tree-id6187 . -2) (undo-tree-id6188 . -1) (undo-tree-id6189 . -3) (undo-tree-id6190 . -2) (undo-tree-id6191 . -4) (undo-tree-id6192 . -3) (undo-tree-id6193 . -5) (undo-tree-id6194 . -4) (undo-tree-id6195 . -6) (undo-tree-id6196 . -5) (undo-tree-id6197 . -6) (undo-tree-id6198 . -7) (undo-tree-id6199 . -6) (undo-tree-id6200 . -7) (undo-tree-id6201 . -7) (undo-tree-id6202 . -8) (undo-tree-id6203 . -7) (undo-tree-id6204 . -8) (undo-tree-id6205 . -8) (undo-tree-id6206 . -7) (undo-tree-id6207 . -7) (undo-tree-id6208 . -7) (undo-tree-id6209 . -7) (undo-tree-id6210 . -7) (undo-tree-id6211 . -7) (undo-tree-id6212 . -7) (undo-tree-id6213 . -1) (undo-tree-id6214 . -1) (undo-tree-id6215 . -1) (undo-tree-id6216 . -1) (undo-tree-id6217 . -1) 11659) nil (26429 29297 368491 762000) 0 nil])
([nil nil ((11308 . 11309)) nil (26429 29297 365137 28000) 0 nil])
([nil nil ((#(" ![dx]({{site.baseurl}}/assets/proj5/1.8_anagram3_2.png) | " 0 1 (face (markdown-table-face) fontified nil wrap-prefix "  ") 1 2 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 2 3 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 3 5 (help-echo "{{site.baseurl}}/assets/proj5/1.8_anagram3_2.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) fontified nil wrap-prefix "  ") 5 6 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 6 7 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 7 55 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified nil wrap-prefix "  ") 55 56 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified nil wrap-prefix "  ") 56 59 (face (markdown-table-face) fontified nil wrap-prefix "  ")) . 11488) (undo-tree-id6168 . -59) (undo-tree-id6169 . -59) (undo-tree-id6170 . -59) (undo-tree-id6171 . -59) (undo-tree-id6172 . -59) (undo-tree-id6173 . -59) (#("------------------------------------------------------:|" 0 56 (face (markdown-table-face) fontified nil wrap-prefix "  ")) . 11428) (#(" Dog                                                 |" 0 54 (face (markdown-table-face) wrap-prefix "  " fontified t)) . 11368) 11657) nil (26429 29297 365136 306000) 0 nil])
([nil nil ((#("-" 0 1 (face (markdown-table-face) fontified t wrap-prefix "  ")) . 11427) (undo-tree-id6166 . -1) (undo-tree-id6167 . -1)) nil (26429 29297 365129 153000) 0 nil])
([nil nil ((#(":" 0 1 (face (markdown-table-face) fontified t wrap-prefix "  ")) . 11426) (undo-tree-id6161 . -1) (undo-tree-id6162 . -1) (undo-tree-id6163 . -1) (undo-tree-id6164 . -1) (undo-tree-id6165 . -1)) nil (26429 29297 365127 961000) 0 nil])
([nil nil ((#("Old man                                          " 0 49 (face (markdown-table-face) fontified t wrap-prefix "  ")) . 11311) (undo-tree-id6150 . -48) (undo-tree-id6151 . -48) (undo-tree-id6152 . -48) (undo-tree-id6153 . -4) (undo-tree-id6154 . -4) (undo-tree-id6155 . -4) (undo-tree-id6156 . -4) (undo-tree-id6157 . -49) (undo-tree-id6158 . -48) (undo-tree-id6159 . -49) (undo-tree-id6160 . -48) 11359) nil (26429 29297 365124 223000) 0 nil])
([nil nil ((11329 . 11340) (11323 . 11329) (#("i" 0 1 (face (markdown-table-face) fontified t wrap-prefix "  ")) . -11323) (undo-tree-id6147 . -1) (undo-tree-id6148 . -1) (undo-tree-id6149 . -1) 11324 (11311 . 11324)) nil (26429 29297 365113 323000) 0 nil])
([nil nil ((#("8_anagram3_1" 0 12 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . 11447) (undo-tree-id6131 . -11) (undo-tree-id6132 . -11) (undo-tree-id6133 . -12) (undo-tree-id6134 . -11) (undo-tree-id6135 . -12) (undo-tree-id6136 . -11) (undo-tree-id6137 . -11) (undo-tree-id6138 . -11) (undo-tree-id6139 . -11) (undo-tree-id6140 . -10) (undo-tree-id6141 . -11) (undo-tree-id6142 . -2) (undo-tree-id6143 . -10) (undo-tree-id6144 . -1) (undo-tree-id6145 . -2) (undo-tree-id6146 . -1)) nil (26429 29297 365110 37000) 0 nil])
([nil nil ((11447 . 11456)) nil (26429 29297 365085 490000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11620 . 11621) (nil fontified nil 11465 . 11621) (11465 . 11621) (t 26429 29297 385597 139000)) nil (26429 29369 832922 437000) 0 nil])
([nil nil ((11487 . 11490) (#("Waterfall" 0 9 (wrap-prefix "  " face (markdown-table-face) fontified t)) . 11487)) nil (26429 29369 832921 264000) 0 nil])
([nil nil ((11605 . 11606) (#("1" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -11605) (undo-tree-id6223 . -1) (undo-tree-id6224 . -1) (undo-tree-id6225 . -1) (undo-tree-id6226 . -1) (undo-tree-id6227 . -1) (undo-tree-id6228 . -1) (undo-tree-id6229 . -1) 11606) nil (26429 29369 832916 636000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11764 . 11765) (nil fontified nil 11615 . 11765) (11615 . 11765) (t 26429 29369 847693 686000)) nil (26429 29406 783020 820000) 0 nil])
([nil nil ((11637 . 11645) (#("Dog" 0 3 (wrap-prefix "  " face (markdown-table-face) fontified t)) . 11637)) nil (26429 29406 783019 748000) 0 nil])
([nil nil ((11760 . 11761) (#("2" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -11760) (undo-tree-id6230 . -1) (undo-tree-id6231 . -1) (undo-tree-id6232 . -1) (undo-tree-id6233 . -1) (undo-tree-id6234 . -1) (undo-tree-id6235 . -1) (undo-tree-id6236 . -1) 11761) nil (26429 29406 783014 979000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11770 . 11771) (#("
" 0 1 (fontified nil wrap-prefix "  " font-lock-multiline t)) . -11802) (11770 . 11803) (t 26429 29406 836253 418000)) nil (26429 29541 305935 73000) 0 nil])
([nil nil ((11780 . 11781) (#("A" 0 1 (face markdown-header-face-3 markdown-heading-3-atx (11771 11802 nil nil nil nil nil nil 11771 11775 11775 11802 11802 11802 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (11771 11802 nil nil nil nil nil nil 11771 11775 11775 11802 11802 11802 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ")) . -11780) (undo-tree-id6237 . -1) (undo-tree-id6238 . -1) (undo-tree-id6239 . -1) (undo-tree-id6240 . -1) (undo-tree-id6241 . -1) (undo-tree-id6242 . -1) (undo-tree-id6243 . -1) (undo-tree-id6244 . -1) (undo-tree-id6245 . -1) (undo-tree-id6246 . -1) 11781) nil (26429 29541 305933 970000) 0 nil])
([nil nil ((11846 . 11851) (11825 . 11846) (11804 . 11825) (11803 . 11804) (11802 . 11803) 11801) nil (26429 29541 305917 48000) 0 nil])
([nil nil ((11852 . 11853) (11851 . 11852) 11850) nil (26429 29541 305910 726000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -11909) (11909 . 11910) (#(")" 0 1 (wrap-prefix "  " fontified nil)) . -11909) (11897 . 11910) (11876 . 11898) (#("noise" 0 5 (wrap-prefix "  " fontified t)) . -11876) (undo-tree-id6411 . -1) (undo-tree-id6412 . -2) (undo-tree-id6413 . -1) (undo-tree-id6414 . -3) (undo-tree-id6415 . -2) (undo-tree-id6416 . -4) (undo-tree-id6417 . -3) (undo-tree-id6418 . -5) (undo-tree-id6419 . -4) (undo-tree-id6420 . -5) (undo-tree-id6421 . -5) (undo-tree-id6422 . -5) (undo-tree-id6423 . -5) (undo-tree-id6424 . -5) (undo-tree-id6425 . -5) (undo-tree-id6426 . -5) (undo-tree-id6427 . -5) (undo-tree-id6428 . -5) (undo-tree-id6429 . -5) (undo-tree-id6430 . -5) (undo-tree-id6431 . -5) (undo-tree-id6432 . -5) 11881 (11872 . 11881) (#("create " 0 7 (wrap-prefix "  " fontified t)) . -11872) (undo-tree-id6433 . -7) (undo-tree-id6434 . -1) (undo-tree-id6435 . -2) (undo-tree-id6436 . -1) (undo-tree-id6437 . -3) (undo-tree-id6438 . -2) (undo-tree-id6439 . -4) (undo-tree-id6440 . -3) (undo-tree-id6441 . -5) (undo-tree-id6442 . -4) (undo-tree-id6443 . -5) (undo-tree-id6444 . -6) (undo-tree-id6445 . -5) (undo-tree-id6446 . -6) (undo-tree-id6447 . -6) (undo-tree-id6448 . -7) (undo-tree-id6449 . -6) (undo-tree-id6450 . -7) (undo-tree-id6451 . -7) (undo-tree-id6452 . -7) (undo-tree-id6453 . -7) (undo-tree-id6454 . -7) (undo-tree-id6455 . -7) (undo-tree-id6456 . -7) (undo-tree-id6457 . -7) 11879 (#("a " 0 2 (wrap-prefix "  " fontified t)) . -11879) (undo-tree-id6458 . -2) (undo-tree-id6459 . -1) (undo-tree-id6460 . -2) (undo-tree-id6461 . -1) (undo-tree-id6462 . -2) 11881 (11862 . 11881) (11860 . 11862) (11854 . 11860) (#("$" 0 1 (wrap-prefix "  " fontified t)) . -11854) (undo-tree-id6463 . -1) (undo-tree-id6464 . -1) (undo-tree-id6465 . -1) (undo-tree-id6466 . -1) 11855 (11853 . 11855) (t 26429 29541 325288 608000)) nil (26429 29647 653211 737000) 0 nil])
([nil nil ((11968 . 11987) (#("a " 0 2 (wrap-prefix "  " fontified t)) . -11968) (undo-tree-id6403 . -2) (undo-tree-id6404 . -1) (undo-tree-id6405 . -2) (undo-tree-id6406 . -1) (undo-tree-id6407 . -2) 11970 (11950 . 11970) (11929 . 11950) (11911 . 11929) (#("r" 0 1 (wrap-prefix "  " fontified t)) . -11911) (undo-tree-id6408 . -1) (undo-tree-id6409 . -1) (undo-tree-id6410 . -1) 11912 (11910 . 11912)) nil (26429 29647 653180 508000) 0 nil])
([nil nil ((11988 . 11989) (11987 . 11988) 11986) nil (26429 29647 653139 390000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12040 . 12041) (nil fontified nil 11989 . 12041) (11989 . 12041)) nil (26429 29647 653138 729000) 0 nil])
([nil nil ((#("1.9_hybrid3.png" 0 15 (wrap-prefix "  " face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t)) . 12025) (undo-tree-id6378 . -14) (undo-tree-id6379 . -14) (undo-tree-id6380 . -14) (undo-tree-id6381 . -15) (undo-tree-id6382 . -15) (undo-tree-id6383 . -15) (undo-tree-id6384 . -15) (undo-tree-id6385 . -15) (undo-tree-id6386 . -12) (undo-tree-id6387 . -15) (undo-tree-id6388 . -11) (undo-tree-id6389 . -12) (undo-tree-id6390 . -4) (undo-tree-id6391 . -11) (undo-tree-id6392 . -3) (undo-tree-id6393 . -4) (undo-tree-id6394 . -2) (undo-tree-id6395 . -3) (undo-tree-id6396 . -1) (undo-tree-id6397 . -2) (undo-tree-id6398 . -1) (undo-tree-id6399 . -15) (undo-tree-id6400 . -14) (undo-tree-id6401 . -15) (undo-tree-id6402 . -14) 12039) nil (26429 29647 653137 486000) 0 nil])
([nil nil ((12029 . 12035) (#("." 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) wrap-prefix "  " fontified t)) . -12029) (undo-tree-id6375 . -1) (undo-tree-id6376 . -1) (undo-tree-id6377 . -1) 12030 (12025 . 12030)) nil (26429 29647 647467 717000) 0 nil])
([nil nil ((12037 . 12039) (12035 . 12037)) nil (26429 29647 647465 362000) 0 nil])
([nil nil ((12030 . 12042) (#("n" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) wrap-prefix "  " fontified t)) . -12030) (undo-tree-id6247 . -1) (undo-tree-id6248 . -1) (undo-tree-id6249 . -1) (undo-tree-id6250 . -1) (undo-tree-id6251 . -1) (undo-tree-id6252 . -1) (undo-tree-id6253 . -1) (undo-tree-id6254 . -1) (undo-tree-id6255 . -1) (undo-tree-id6256 . -1) (undo-tree-id6257 . -1) (undo-tree-id6258 . -1) (undo-tree-id6259 . -1) (undo-tree-id6260 . -1) (undo-tree-id6261 . -1) (undo-tree-id6262 . -1) (undo-tree-id6263 . -1) (undo-tree-id6264 . -1) (undo-tree-id6265 . -1) (undo-tree-id6266 . -1) (undo-tree-id6267 . -1) (undo-tree-id6268 . -1) (undo-tree-id6269 . -1) (undo-tree-id6270 . -1) (undo-tree-id6271 . -1) (undo-tree-id6272 . -1) (undo-tree-id6273 . -1) (undo-tree-id6274 . -1) (undo-tree-id6275 . -1) (undo-tree-id6276 . -1) (undo-tree-id6277 . -1) (undo-tree-id6278 . -1) (undo-tree-id6279 . -1) (undo-tree-id6280 . -1) (undo-tree-id6281 . -1) (#("o" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) wrap-prefix "  " fontified t)) . -12031) (undo-tree-id6282 . -1) (undo-tree-id6283 . -1) (undo-tree-id6284 . -1) (undo-tree-id6285 . -1) (undo-tree-id6286 . -1) (undo-tree-id6287 . -1) (undo-tree-id6288 . -1) (undo-tree-id6289 . -1) (undo-tree-id6290 . -1) (undo-tree-id6291 . -1) (undo-tree-id6292 . -1) (undo-tree-id6293 . -1) (undo-tree-id6294 . -1) (undo-tree-id6295 . -1) (undo-tree-id6296 . -1) (undo-tree-id6297 . -1) (undo-tree-id6298 . -1) (undo-tree-id6299 . -1) (undo-tree-id6300 . -1) (undo-tree-id6301 . -1) (undo-tree-id6302 . -1) (undo-tree-id6303 . -1) (undo-tree-id6304 . -1) (undo-tree-id6305 . -1) (undo-tree-id6306 . -1) (undo-tree-id6307 . -1) (undo-tree-id6308 . -1) (undo-tree-id6309 . -1) (undo-tree-id6310 . -1) (undo-tree-id6311 . -1) (undo-tree-id6312 . -1) (#("i" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) wrap-prefix "  " fontified t)) . -12032) (undo-tree-id6313 . -1) (undo-tree-id6314 . -1) (undo-tree-id6315 . -1) (undo-tree-id6316 . -1) (undo-tree-id6317 . -1) (undo-tree-id6318 . -1) (undo-tree-id6319 . -1) (undo-tree-id6320 . -1) (undo-tree-id6321 . -1) (undo-tree-id6322 . -1) (undo-tree-id6323 . -1) (undo-tree-id6324 . -1) (undo-tree-id6325 . -1) (undo-tree-id6326 . -1) (undo-tree-id6327 . -1) (undo-tree-id6328 . -1) (undo-tree-id6329 . -1) (undo-tree-id6330 . -1) (undo-tree-id6331 . -1) (undo-tree-id6332 . -1) (undo-tree-id6333 . -1) (undo-tree-id6334 . -1) (undo-tree-id6335 . -1) (undo-tree-id6336 . -1) (undo-tree-id6337 . -1) (undo-tree-id6338 . -1) (undo-tree-id6339 . -1) (#("s" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) wrap-prefix "  " fontified t)) . -12033) (undo-tree-id6340 . -1) (undo-tree-id6341 . -1) (undo-tree-id6342 . -1) (undo-tree-id6343 . -1) (undo-tree-id6344 . -1) (undo-tree-id6345 . -1) (undo-tree-id6346 . -1) (undo-tree-id6347 . -1) (undo-tree-id6348 . -1) (undo-tree-id6349 . -1) (undo-tree-id6350 . -1) (undo-tree-id6351 . -1) (undo-tree-id6352 . -1) (undo-tree-id6353 . -1) (undo-tree-id6354 . -1) (undo-tree-id6355 . -1) (undo-tree-id6356 . -1) (undo-tree-id6357 . -1) (undo-tree-id6358 . -1) (undo-tree-id6359 . -1) (undo-tree-id6360 . -1) (undo-tree-id6361 . -1) (undo-tree-id6362 . -1) (#("e" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) wrap-prefix "  " fontified t)) . -12034) (undo-tree-id6363 . -1) (undo-tree-id6364 . -1) (undo-tree-id6365 . -1) (undo-tree-id6366 . -1) (undo-tree-id6367 . -1) (undo-tree-id6368 . -1) (undo-tree-id6369 . -1) (undo-tree-id6370 . -1) (undo-tree-id6371 . -1) (undo-tree-id6372 . -1) (undo-tree-id6373 . -1) (undo-tree-id6374 . -1) 12035) nil (26429 29647 647462 206000) 0 nil])
([nil nil ((12047 . 12048) 12041) nil (26429 29647 647362 337000) 0 nil])
([nil nil ((11860 . 11867) (t 26429 29647 669897 845000)) nil (26429 29655 639835 400000) 0 nil])
([nil nil ((12140 . 12153) (#("-" 0 1 (wrap-prefix "  " fontified t)) . -12140) (undo-tree-id6467 . -1) (undo-tree-id6468 . -1) (undo-tree-id6469 . -1) (undo-tree-id6470 . -1) (undo-tree-id6471 . -1) (undo-tree-id6472 . -1) (undo-tree-id6473 . -1) (#("9" 0 1 (wrap-prefix "  " fontified t)) . -12141) (undo-tree-id6474 . -1) (undo-tree-id6475 . -1) (undo-tree-id6476 . -1) 12142 (12128 . 12142) (#("l" 0 1 (wrap-prefix "  " fontified t)) . -12128) (undo-tree-id6477 . -1) (undo-tree-id6478 . -1) (undo-tree-id6479 . -1) (undo-tree-id6480 . -1) (undo-tree-id6481 . -1) 12129 (12123 . 12129) (12110 . 12123) (12101 . 12110) (12094 . 12101) (#("e" 0 1 (wrap-prefix "  " fontified t)) . -12094) (undo-tree-id6482 . -1) (undo-tree-id6483 . -1) (undo-tree-id6484 . -1) (undo-tree-id6485 . -1) (undo-tree-id6486 . -1) (undo-tree-id6487 . -1) (undo-tree-id6488 . -1) (undo-tree-id6489 . -1) (undo-tree-id6490 . -1) (undo-tree-id6491 . -1) (undo-tree-id6492 . -1) (#("t" 0 1 (wrap-prefix "  " fontified t)) . -12095) (undo-tree-id6493 . -1) (undo-tree-id6494 . -1) (undo-tree-id6495 . -1) (undo-tree-id6496 . -1) (undo-tree-id6497 . -1) (undo-tree-id6498 . -1) (undo-tree-id6499 . -1) (#(" " 0 1 (wrap-prefix "  " fontified t)) . -12096) (undo-tree-id6500 . -1) (undo-tree-id6501 . -1) (undo-tree-id6502 . -1) 12097 (12094 . 12097) (#("N" 0 1 (wrap-prefix "  " fontified t)) . -12094) (undo-tree-id6503 . -1) (undo-tree-id6504 . -1) (undo-tree-id6505 . -1) (undo-tree-id6506 . -1) (undo-tree-id6507 . -1) (undo-tree-id6508 . -1) (undo-tree-id6509 . -1) (undo-tree-id6510 . -1) (undo-tree-id6511 . -1) (undo-tree-id6512 . -1) (undo-tree-id6513 . -1) (undo-tree-id6514 . -1) (undo-tree-id6515 . -1) (undo-tree-id6516 . -1) (undo-tree-id6517 . -1) (#("E" 0 1 (wrap-prefix "  " fontified t)) . -12095) (undo-tree-id6518 . -1) (undo-tree-id6519 . -1) (undo-tree-id6520 . -1) (undo-tree-id6521 . -1) (undo-tree-id6522 . -1) (undo-tree-id6523 . -1) (undo-tree-id6524 . -1) (undo-tree-id6525 . -1) (undo-tree-id6526 . -1) (#("t" 0 1 (wrap-prefix "  " fontified t)) . -12096) (undo-tree-id6527 . -1) (undo-tree-id6528 . -1) (undo-tree-id6529 . -1) (undo-tree-id6530 . -1) (undo-tree-id6531 . -1) 12097 (12095 . 12097) (12075 . 12095) (#("W" 0 1 (wrap-prefix "  " fontified t)) . -12075) (undo-tree-id6532 . -1) (undo-tree-id6533 . -1) (undo-tree-id6534 . -1) (undo-tree-id6535 . -1) (undo-tree-id6536 . -1) (undo-tree-id6537 . -1) (undo-tree-id6538 . -1) (#("N" 0 1 (wrap-prefix "  " fontified t)) . -12076) (undo-tree-id6539 . -1) (undo-tree-id6540 . -1) (undo-tree-id6541 . -1) 12077 (12075 . 12077) (12073 . 12075) (12058 . 12073) (#("`" 0 1 (font-lock-multiline t face markdown-header-face-1 markdown-heading-1-atx (12056 12059 nil nil nil nil nil nil 12056 12058 12058 12059 12059 12059 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (12056 12059 nil nil nil nil nil nil 12056 12058 12058 12059 12059 12059 #<buffer 2024-11-19-proj5.markdown>) wrap-prefix "  " fontified t)) . -12058) (undo-tree-id6542 . -1) (undo-tree-id6543 . -1) (undo-tree-id6544 . -1) (undo-tree-id6545 . -1) (undo-tree-id6546 . -1) (undo-tree-id6547 . -1) (undo-tree-id6548 . -1) (#("1" 0 1 (font-lock-multiline t face markdown-header-face-1 markdown-heading-1-atx (12056 12060 nil nil nil nil nil nil 12056 12058 12058 12060 12060 12060 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (12056 12060 nil nil nil nil nil nil 12056 12058 12058 12060 12060 12060 #<buffer 2024-11-19-proj5.markdown>) wrap-prefix "  " fontified t)) . -12059) (undo-tree-id6549 . -1) (undo-tree-id6550 . -1) (undo-tree-id6551 . -1) 12060 (12056 . 12060) (12055 . 12056) (t 26429 29655 654018 596000) 12055) nil (26429 29761 732805 891000) 0 nil])
([nil nil ((12152 . 12158)) nil (26429 29761 732741 479000) 0 nil])
([nil nil ((12159 . 12160) 12157) nil (26429 29761 732735 417000) 0 nil])
([nil nil ((12183 . 12185) (12172 . 12183) (#("training " 0 9 (wrap-prefix "  " fontified t)) . -12172) (undo-tree-id6591 . -9) (undo-tree-id6592 . -1) (undo-tree-id6593 . -2) (undo-tree-id6594 . -1) (undo-tree-id6595 . -3) (undo-tree-id6596 . -2) (undo-tree-id6597 . -4) (undo-tree-id6598 . -3) (undo-tree-id6599 . -5) (undo-tree-id6600 . -4) (undo-tree-id6601 . -6) (undo-tree-id6602 . -5) (undo-tree-id6603 . -7) (undo-tree-id6604 . -6) (undo-tree-id6605 . -8) (undo-tree-id6606 . -7) (undo-tree-id6607 . -9) (undo-tree-id6608 . -8) (undo-tree-id6609 . -9) (undo-tree-id6610 . -9) (undo-tree-id6611 . -9) (undo-tree-id6612 . -9) (undo-tree-id6613 . -9) (undo-tree-id6614 . -9) (undo-tree-id6615 . -9) (undo-tree-id6616 . -9) (undo-tree-id6617 . -9) (undo-tree-id6618 . -9) (undo-tree-id6619 . -9) (undo-tree-id6620 . -9) (undo-tree-id6621 . -9) (undo-tree-id6622 . -9) 12181 (#("curve" 0 5 (wrap-prefix "  " fontified t)) . -12181) (undo-tree-id6623 . -5) (undo-tree-id6624 . -1) (undo-tree-id6625 . -2) (undo-tree-id6626 . -1) (undo-tree-id6627 . -3) (undo-tree-id6628 . -2) (undo-tree-id6629 . -4) (undo-tree-id6630 . -3) (undo-tree-id6631 . -5) (undo-tree-id6632 . -4) (undo-tree-id6633 . -5) 12186 (12182 . 12186) (12161 . 12182) (12160 . 12161) (t 26429 29761 759623 316000) 12160) nil (26429 29786 61738 140000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12185 . 12186) (#("
" 0 1 (fontified nil wrap-prefix "  ")) . -12244) (12185 . 12245)) nil (26429 29786 61718 222000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix "  " fontified t)) . 12184) (undo-tree-id6579 . -1) (undo-tree-id6580 . -1) (undo-tree-id6581 . -1) (undo-tree-id6582 . -1) (undo-tree-id6583 . -1) (undo-tree-id6584 . -1) (undo-tree-id6585 . -1) (undo-tree-id6586 . -1) (undo-tree-id6587 . -1) (undo-tree-id6588 . -1) (undo-tree-id6589 . -1) (undo-tree-id6590 . -1)) nil (26429 29786 61716 830000) 0 nil])
([nil nil ((12225 . 12238) (#("_" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -12225) (undo-tree-id6552 . -1) (undo-tree-id6553 . -1) (undo-tree-id6554 . -1) (undo-tree-id6555 . -1) (undo-tree-id6556 . -1) (undo-tree-id6557 . -1) (undo-tree-id6558 . -1) (undo-tree-id6559 . -1) (undo-tree-id6560 . -1) (undo-tree-id6561 . -1) (undo-tree-id6562 . -1) 12226 (#("adding_" 0 7 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -12226) (undo-tree-id6563 . -7) (undo-tree-id6564 . -7) (undo-tree-id6565 . -7) (undo-tree-id6566 . -7) (undo-tree-id6567 . -7) (undo-tree-id6568 . -7) (undo-tree-id6569 . -7) (undo-tree-id6570 . -7) (undo-tree-id6571 . -7) 12233 (#("noise" 0 5 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -12233) (undo-tree-id6572 . -5) (undo-tree-id6573 . -5) (undo-tree-id6574 . -5) (undo-tree-id6575 . -5) (undo-tree-id6576 . -5) (undo-tree-id6577 . -5) (undo-tree-id6578 . -5) 12238) nil (26429 29786 60075 641000) 0 nil])
([nil nil ((12243 . 12244) 12237) nil (26429 29786 60042 288000) 0 nil])
([nil nil ((12296 . 12297) (12295 . 12296) (12281 . 12295) (#("p" 0 1 (wrap-prefix "  " fontified t)) . -12281) (undo-tree-id6696 . -1) (undo-tree-id6697 . -1) (undo-tree-id6698 . -1) (undo-tree-id6699 . -1) (undo-tree-id6700 . -1) (undo-tree-id6701 . -1) (undo-tree-id6702 . -1) (#("o" 0 1 (wrap-prefix "  " fontified t)) . -12282) (undo-tree-id6703 . -1) (undo-tree-id6704 . -1) (undo-tree-id6705 . -1) 12283 (12278 . 12283) (#("some" 0 4 (wrap-prefix "  " fontified t)) . -12278) (undo-tree-id6706 . -1) (undo-tree-id6707 . -2) (undo-tree-id6708 . -1) (undo-tree-id6709 . -3) (undo-tree-id6710 . -2) (undo-tree-id6711 . -4) (undo-tree-id6712 . -3) (undo-tree-id6713 . -4) (undo-tree-id6714 . -4) (undo-tree-id6715 . -4) (undo-tree-id6716 . -4) (undo-tree-id6717 . -4) (undo-tree-id6718 . -4) (undo-tree-id6719 . -4) (undo-tree-id6720 . -4) (undo-tree-id6721 . -4) (undo-tree-id6722 . -4) (undo-tree-id6723 . -4) (undo-tree-id6724 . -4) (undo-tree-id6725 . -4) 12282 (12278 . 12282) (#("iamge " 0 6 (wrap-prefix "  " fontified t)) . -12278) (undo-tree-id6726 . -6) (undo-tree-id6727 . -1) (undo-tree-id6728 . -2) (undo-tree-id6729 . -1) (undo-tree-id6730 . -3) (undo-tree-id6731 . -1) (undo-tree-id6732 . -4) (undo-tree-id6733 . -3) (undo-tree-id6734 . -5) (undo-tree-id6735 . -4) (undo-tree-id6736 . -6) (undo-tree-id6737 . -5) (undo-tree-id6738 . -6) (undo-tree-id6739 . -6) (undo-tree-id6740 . -6) (undo-tree-id6741 . -6) (undo-tree-id6742 . -6) (undo-tree-id6743 . -6) (undo-tree-id6744 . -6) (undo-tree-id6745 . -6) 12284 (#("at" 0 2 (wrap-prefix "  " fontified t)) . -12284) (undo-tree-id6746 . -2) (undo-tree-id6747 . -1) (undo-tree-id6748 . -2) (undo-tree-id6749 . -1) (undo-tree-id6750 . -2) 12286 (12270 . 12286) (12249 . 12270) (#("e" 0 1 (wrap-prefix "  " fontified t)) . -12249) (undo-tree-id6751 . -1) (undo-tree-id6752 . -1) (undo-tree-id6753 . -1) (undo-tree-id6754 . -1) (undo-tree-id6755 . -1) (undo-tree-id6756 . -1) (undo-tree-id6757 . -1) (#("h" 0 1 (wrap-prefix "  " fontified t)) . -12250) (undo-tree-id6758 . -1) (undo-tree-id6759 . -1) (undo-tree-id6760 . -1) 12251 (12245 . 12251) (#(" " 0 1 (wrap-prefix "   " fontified t)) . -12245) (undo-tree-id6761 . -1) (undo-tree-id6762 . -1) (undo-tree-id6763 . -1) (undo-tree-id6764 . -1) (undo-tree-id6765 . -1) (undo-tree-id6766 . -1) (undo-tree-id6767 . -1) 12246 (#("a" 0 1 (wrap-prefix "   " fontified t)) . -12246) (undo-tree-id6768 . -1) (undo-tree-id6769 . -1) (undo-tree-id6770 . -1) 12247 (12245 . 12247) (12244 . 12245) (#("o" 0 1 (wrap-prefix "  " fontified t)) . -12244) (undo-tree-id6771 . -1) (undo-tree-id6772 . -1) (undo-tree-id6773 . -1) 12245 (12244 . 12245) (12243 . 12244) (t 26429 29786 79991 132000) 12242) nil (26429 29888 245829 714000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12297 . 12298) (#("
" 0 1 (fontified nil wrap-prefix "  ")) . -12356) (12297 . 12357)) nil (26429 29888 245782 725000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix "  " fontified t)) . 12297) (undo-tree-id6693 . -1) (undo-tree-id6694 . -1) (undo-tree-id6695 . -1)) nil (26429 29888 245782 214000) 0 nil])
([nil nil ((12347 . 12354) (12340 . 12347) (#("p" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -12340) (undo-tree-id6641 . -1) (undo-tree-id6642 . -1) (undo-tree-id6643 . -1) (undo-tree-id6644 . -1) (undo-tree-id6645 . -1) (undo-tree-id6646 . -1) (undo-tree-id6647 . -1) (undo-tree-id6648 . -1) (undo-tree-id6649 . -1) (undo-tree-id6650 . -1) (undo-tree-id6651 . -1) (undo-tree-id6652 . -1) (undo-tree-id6653 . -1) (undo-tree-id6654 . -1) (undo-tree-id6655 . -1) (#("o" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -12341) (undo-tree-id6656 . -1) (undo-tree-id6657 . -1) (undo-tree-id6658 . -1) (undo-tree-id6659 . -1) (undo-tree-id6660 . -1) (undo-tree-id6661 . -1) (undo-tree-id6662 . -1) (undo-tree-id6663 . -1) (undo-tree-id6664 . -1) (undo-tree-id6665 . -1) (undo-tree-id6666 . -1) (#("c" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -12342) (undo-tree-id6667 . -1) (undo-tree-id6668 . -1) (undo-tree-id6669 . -1) (undo-tree-id6670 . -1) (undo-tree-id6671 . -1) (undo-tree-id6672 . -1) (undo-tree-id6673 . -1) (#("h" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -12343) (undo-tree-id6674 . -1) (undo-tree-id6675 . -1) (undo-tree-id6676 . -1) 12344 (12340 . 12344) (#("loss_" 0 5 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -12340) (undo-tree-id6677 . -5) (undo-tree-id6678 . -5) (undo-tree-id6679 . -5) (undo-tree-id6680 . -5) (undo-tree-id6681 . -5) (undo-tree-id6682 . -5) (undo-tree-id6683 . -5) (undo-tree-id6684 . -5) (undo-tree-id6685 . -5) 12345 (#("curve" 0 5 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -12345) (undo-tree-id6686 . -5) (undo-tree-id6687 . -5) (undo-tree-id6688 . -5) (undo-tree-id6689 . -5) (undo-tree-id6690 . -5) (undo-tree-id6691 . -5) (undo-tree-id6692 . -5) 12350) nil (26429 29888 245778 698000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12359 . 12360) (#("
" 0 1 (fontified nil wrap-prefix "  ")) . -12422) (12359 . 12423) 12353) nil (26429 29888 245747 529000) 0 nil])
([nil nil ((12408 . 12409) (#("5" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -12408) (undo-tree-id6634 . -1) (undo-tree-id6635 . -1) (undo-tree-id6636 . -1) (undo-tree-id6637 . -1) (undo-tree-id6638 . -1) (undo-tree-id6639 . -1) (undo-tree-id6640 . -1) 12409) nil (26429 29888 245742 870000) 0 nil])
([nil nil ((#(" and 1" 0 6 (wrap-prefix "  " fontified t)) . 12288) (undo-tree-id6774 . -5) (undo-tree-id6775 . -5) (undo-tree-id6776 . -5) (undo-tree-id6777 . -5) (undo-tree-id6778 . -5) (undo-tree-id6779 . -5) (undo-tree-id6780 . -5) (undo-tree-id6781 . -1) (undo-tree-id6782 . -5) (undo-tree-id6783 . -1) (t 26429 29888 271536 675000)) nil (26429 29901 478750 112000) 0 nil])
([nil nil ((12370 . 12371) (12355 . 12370) (12354 . 12355) (12353 . 12354) 12334) nil (26429 29901 478722 860000) 0 nil])
([nil nil ((12606 . 12617) (#("7" 0 1 (wrap-prefix "  " fontified t)) . -12606) (undo-tree-id6784 . -1) (undo-tree-id6785 . -1) (undo-tree-id6786 . -1) 12607 (12605 . 12607) (12584 . 12605) (12566 . 12585) (12545 . 12566) (#("here" 0 4 (wrap-prefix "  " fontified t)) . -12545) (undo-tree-id6787 . -1) (undo-tree-id6788 . -2) (undo-tree-id6789 . -1) (undo-tree-id6790 . -3) (undo-tree-id6791 . -2) (undo-tree-id6792 . -4) (undo-tree-id6793 . -3) (undo-tree-id6794 . -4) (undo-tree-id6795 . -4) (undo-tree-id6796 . -4) (undo-tree-id6797 . -4) (undo-tree-id6798 . -4) (undo-tree-id6799 . -4) (undo-tree-id6800 . -4) 12549 (12537 . 12549) (#("i" 0 1 (wrap-prefix "  " fontified t)) . -12537) (undo-tree-id6801 . -1) (undo-tree-id6802 . -1) (undo-tree-id6803 . -1) 12538 (12536 . 12538) (12515 . 12536) (#("lvels" 0 5 (wrap-prefix "  " fontified t)) . -12515) (undo-tree-id6804 . -5) (undo-tree-id6805 . -1) (undo-tree-id6806 . -2) (undo-tree-id6807 . -1) (undo-tree-id6808 . -3) (undo-tree-id6809 . -2) (undo-tree-id6810 . -4) (undo-tree-id6811 . -3) (undo-tree-id6812 . -4) (undo-tree-id6813 . -4) (undo-tree-id6814 . -5) (undo-tree-id6815 . -4) (undo-tree-id6816 . -5) 12520 (12510 . 12520) (12509 . 12510) (#("l" 0 1 (wrap-prefix "  " fontified t)) . -12509) (undo-tree-id6817 . -1) (undo-tree-id6818 . -1) (undo-tree-id6819 . -1) 12510 (12491 . 12510) (#("denoi" 0 5 (wrap-prefix "  " fontified t)) . -12491) (undo-tree-id6820 . -1) (undo-tree-id6821 . -2) (undo-tree-id6822 . -1) (undo-tree-id6823 . -3) (undo-tree-id6824 . -2) (undo-tree-id6825 . -4) (undo-tree-id6826 . -3) (undo-tree-id6827 . -5) (undo-tree-id6828 . -4) (undo-tree-id6829 . -5) (undo-tree-id6830 . -5) (undo-tree-id6831 . -5) (undo-tree-id6832 . -5) (undo-tree-id6833 . -5) (undo-tree-id6834 . -5) (undo-tree-id6835 . -5) (undo-tree-id6836 . -5) (undo-tree-id6837 . -5) (undo-tree-id6838 . -5) (undo-tree-id6839 . -5) (undo-tree-id6840 . -5) (undo-tree-id6841 . -5) 12496 (12476 . 12496) (12474 . 12476) (12472 . 12474) (12451 . 12472) (#("d" 0 1 (font-lock-multiline t face markdown-header-face-1 markdown-heading-1-atx (12436 12452 nil nil nil nil nil nil 12436 12438 12438 12452 12452 12452 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (12436 12452 nil nil nil nil nil nil 12436 12438 12438 12452 12452 12452 #<buffer 2024-11-19-proj5.markdown>) wrap-prefix "  " fontified t)) . -12451) (undo-tree-id6842 . -1) (undo-tree-id6843 . -1) (undo-tree-id6844 . -1) 12452 (12436 . 12452) (12435 . 12436) (t 26429 29901 499736 737000) 12435) nil (26429 29966 807318 209000) 0 nil])
([nil nil ((12618 . 12619)) nil (26429 29966 807265 98000) 0 nil])
([nil nil ((12619 . 12620) 12618) nil (26429 29966 807258 766000) 0 nil])
([nil nil ((12620 . 12621) (12619 . 12620) (t 26429 29966 831724 804000) 12618) nil (26429 30115 432772 518000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12621 . 12622) (#("
" 0 1 (fontified nil wrap-prefix "  ")) . -12684) (12621 . 12685)) nil (26429 30115 432771 456000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix "  " fontified t)) . 12621) (undo-tree-id6854 . -1) (undo-tree-id6855 . -1) (undo-tree-id6856 . -1)) nil (26429 30115 432770 144000) 0 nil])
([nil nil ((12664 . 12672) (#("epoch1" 0 6 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . 12664) (undo-tree-id6845 . -4) (undo-tree-id6846 . -6) (undo-tree-id6847 . -5) (undo-tree-id6848 . -6) (undo-tree-id6849 . -4) (undo-tree-id6850 . -5) (undo-tree-id6851 . -4) (undo-tree-id6852 . -4) (undo-tree-id6853 . -4) 12668) nil (26429 30115 432762 620000) 0 nil])
([nil nil ((12662 . 12663) (#("1" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -12662) (undo-tree-id6857 . 1) (undo-tree-id6858 . -1) (undo-tree-id6859 . -1) (undo-tree-id6860 . -1) (undo-tree-id6861 . -1) (undo-tree-id6862 . -1) (undo-tree-id6863 . -1) 12663 (t 26429 30115 450972 513000)) nil (26429 30130 576597 350000) 0 nil])
([nil nil ((12729 . 12741) (12708 . 12729) (#("e" 0 1 (wrap-prefix "  " fontified t)) . -12708) (undo-tree-id7105 . -1) (undo-tree-id7106 . -1) (undo-tree-id7107 . -1) (undo-tree-id7108 . -1) (undo-tree-id7109 . -1) (undo-tree-id7110 . -1) (undo-tree-id7111 . -1) (#("q" 0 1 (wrap-prefix "  " fontified t)) . -12709) (undo-tree-id7112 . -1) (undo-tree-id7113 . -1) (undo-tree-id7114 . -1) 12710 (12709 . 12710) (12708 . 12709) (12687 . 12708) (12686 . 12687) (12685 . 12686) (t 26429 30130 599201 608000) 12662) nil (26429 30242 250495 377000) 0 nil])
([nil nil ((12742 . 12743) (12741 . 12742) 12740) nil (26429 30242 250489 987000) 0 nil])
([nil nil ((12781 . 12783) (12770 . 12781) (#("c" 0 1 (face markdown-header-face-2 markdown-heading-2-atx (12743 12771 nil nil nil nil nil nil 12743 12746 12746 12771 12771 12771 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (12743 12771 nil nil nil nil nil nil 12743 12746 12746 12771 12771 12771 #<buffer 2024-11-19-proj5.markdown>) wrap-prefix "  " fontified t)) . -12770) (undo-tree-id7076 . -1) (undo-tree-id7077 . -1) (undo-tree-id7078 . -1) (undo-tree-id7079 . -1) (undo-tree-id7080 . -1) (undo-tree-id7081 . -1) (undo-tree-id7082 . -1) (undo-tree-id7083 . -1) (undo-tree-id7084 . -1) (undo-tree-id7085 . -1) (undo-tree-id7086 . -1) (undo-tree-id7087 . -1) (undo-tree-id7088 . -1) (#("s" 0 1 (face markdown-header-face-2 markdown-heading-2-atx (12743 12772 nil nil nil nil nil nil 12743 12746 12746 12772 12772 12772 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (12743 12772 nil nil nil nil nil nil 12743 12746 12746 12772 12772 12772 #<buffer 2024-11-19-proj5.markdown>) wrap-prefix "  " fontified t)) . -12771) (undo-tree-id7089 . -1) (undo-tree-id7090 . -1) (undo-tree-id7091 . -1) (undo-tree-id7092 . -1) (undo-tree-id7093 . -1) (undo-tree-id7094 . -1) (undo-tree-id7095 . -1) (#("i" 0 1 (face markdown-header-face-2 markdown-heading-2-atx (12743 12773 nil nil nil nil nil nil 12743 12746 12746 12773 12773 12773 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (12743 12773 nil nil nil nil nil nil 12743 12746 12746 12773 12773 12773 #<buffer 2024-11-19-proj5.markdown>) wrap-prefix "  " fontified t)) . -12772) (undo-tree-id7096 . -1) (undo-tree-id7097 . -1) (undo-tree-id7098 . -1) 12773 (12769 . 12773) (#("i" 0 1 (face markdown-header-face-2 markdown-heading-2-atx (12743 12770 nil nil nil nil nil nil 12743 12746 12746 12770 12770 12770 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (12743 12770 nil nil nil nil nil nil 12743 12746 12746 12770 12770 12770 #<buffer 2024-11-19-proj5.markdown>) wrap-prefix "  " fontified t)) . -12769) (undo-tree-id7099 . -1) (undo-tree-id7100 . -1) (undo-tree-id7101 . -1) 12770 (12768 . 12770) (12747 . 12768) (12744 . 12747) (#(" " 0 1 (face markdown-header-delimiter-face markdown-heading-1-atx (12743 12745 nil nil nil nil nil nil 12743 12745 12745 12745 12745 12745 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (12743 12745 nil nil nil nil nil nil 12743 12745 12745 12745 12745 12745 #<buffer 2024-11-19-proj5.markdown>) wrap-prefix "  " fontified t)) . -12744) (undo-tree-id7102 . -1) (undo-tree-id7103 . -1) (undo-tree-id7104 . -1) 12745 (12743 . 12745)) nil (26429 30242 250488 394000) 0 nil])
([nil nil ((12877 . 12879) (12858 . 12877) (12840 . 12858) (#("c" 0 1 (wrap-prefix "  " fontified t)) . -12840) (undo-tree-id7058 . -1) (undo-tree-id7059 . -1) (undo-tree-id7060 . -1) (undo-tree-id7061 . -1) (undo-tree-id7062 . -1) 12841 (12833 . 12841) (12812 . 12833) (#("a" 0 1 (wrap-prefix "  " fontified t)) . -12812) (undo-tree-id7063 . -1) (undo-tree-id7064 . -1) (undo-tree-id7065 . -1) (undo-tree-id7066 . -1) (undo-tree-id7067 . -1) (undo-tree-id7068 . -1) (undo-tree-id7069 . -1) 12813 (#("l" 0 1 (wrap-prefix "  " fontified t)) . -12813) (undo-tree-id7070 . -1) (undo-tree-id7071 . -1) (undo-tree-id7072 . -1) 12814 (12809 . 12814) (12807 . 12809) (12804 . 12807) (12783 . 12804) (#("@" 0 1 (wrap-prefix "  " fontified t)) . -12783) (undo-tree-id7073 . -1) (undo-tree-id7074 . -1) (undo-tree-id7075 . -1) 12784 (12783 . 12784)) nil (26429 30242 250469 488000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12879 . 12880) (#("
" 0 1 (fontified nil wrap-prefix "  ")) . -12944) (12879 . 12945)) nil (26429 30242 250266 243000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix "  " fontified t)) . 12879) (undo-tree-id7055 . -1) (undo-tree-id7056 . -1) (undo-tree-id7057 . -1)) nil (26429 30242 250265 81000) 0 nil])
([nil nil ((12919 . 12936) (#("d" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -12919) (undo-tree-id6864 . -1) (undo-tree-id6865 . -1) (undo-tree-id6866 . -1) 12920 (12915 . 12920) (#("b1" 0 2 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -12915) (undo-tree-id6867 . -2) (undo-tree-id6868 . -2) (undo-tree-id6869 . -2) (undo-tree-id6870 . -2) (undo-tree-id6871 . -2) (undo-tree-id6872 . -2) (undo-tree-id6873 . -2) (undo-tree-id6874 . -2) (undo-tree-id6875 . -2) (undo-tree-id6876 . -2) (undo-tree-id6877 . -2) (undo-tree-id6878 . -2) (undo-tree-id6879 . -2) (undo-tree-id6880 . -2) (undo-tree-id6881 . -2) (undo-tree-id6882 . -2) (undo-tree-id6883 . -2) (undo-tree-id6884 . -2) (undo-tree-id6885 . -2) (undo-tree-id6886 . -2) (undo-tree-id6887 . -2) (undo-tree-id6888 . -2) (undo-tree-id6889 . -2) (undo-tree-id6890 . -2) (undo-tree-id6891 . -2) (undo-tree-id6892 . -2) (undo-tree-id6893 . -2) (undo-tree-id6894 . -2) (undo-tree-id6895 . -2) (undo-tree-id6896 . -2) (undo-tree-id6897 . -2) (undo-tree-id6898 . -2) 12917 (#("." 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -12917) (undo-tree-id6899 . -1) (undo-tree-id6900 . -1) (undo-tree-id6901 . -1) (undo-tree-id6902 . -1) (undo-tree-id6903 . -1) (undo-tree-id6904 . -1) (undo-tree-id6905 . -1) (undo-tree-id6906 . -1) (undo-tree-id6907 . -1) (undo-tree-id6908 . -1) (undo-tree-id6909 . -1) (undo-tree-id6910 . -1) (undo-tree-id6911 . -1) (undo-tree-id6912 . -1) (undo-tree-id6913 . -1) (undo-tree-id6914 . -1) (undo-tree-id6915 . -1) (undo-tree-id6916 . -1) (undo-tree-id6917 . -1) (undo-tree-id6918 . -1) (undo-tree-id6919 . -1) (undo-tree-id6920 . -1) (undo-tree-id6921 . -1) (undo-tree-id6922 . -1) (undo-tree-id6923 . -1) (undo-tree-id6924 . -1) (undo-tree-id6925 . -1) (undo-tree-id6926 . -1) (undo-tree-id6927 . -1) 12918 (#("2" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -12918) (undo-tree-id6928 . -1) (undo-tree-id6929 . -1) (undo-tree-id6930 . -1) (undo-tree-id6931 . -1) (undo-tree-id6932 . -1) (undo-tree-id6933 . -1) (undo-tree-id6934 . -1) (undo-tree-id6935 . -1) (undo-tree-id6936 . -1) (undo-tree-id6937 . -1) (undo-tree-id6938 . -1) (undo-tree-id6939 . -1) (undo-tree-id6940 . -1) (undo-tree-id6941 . -1) (undo-tree-id6942 . -1) (undo-tree-id6943 . -1) (undo-tree-id6944 . -1) (undo-tree-id6945 . -1) (undo-tree-id6946 . -1) (undo-tree-id6947 . -1) (undo-tree-id6948 . -1) (undo-tree-id6949 . -1) (undo-tree-id6950 . -1) (undo-tree-id6951 . -1) (undo-tree-id6952 . -1) (undo-tree-id6953 . -1) 12919 (#("." 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -12919) (undo-tree-id6954 . -1) (undo-tree-id6955 . -1) (undo-tree-id6956 . -1) (undo-tree-id6957 . -1) (undo-tree-id6958 . -1) (undo-tree-id6959 . -1) (undo-tree-id6960 . -1) (undo-tree-id6961 . -1) (undo-tree-id6962 . -1) (undo-tree-id6963 . -1) (undo-tree-id6964 . -1) (undo-tree-id6965 . -1) (undo-tree-id6966 . -1) (undo-tree-id6967 . -1) (undo-tree-id6968 . -1) (undo-tree-id6969 . -1) (undo-tree-id6970 . -1) (undo-tree-id6971 . -1) (undo-tree-id6972 . -1) (undo-tree-id6973 . -1) (undo-tree-id6974 . -1) (undo-tree-id6975 . -1) (undo-tree-id6976 . -1) 12920 (#("2" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -12920) (undo-tree-id6977 . -1) (undo-tree-id6978 . -1) (undo-tree-id6979 . -1) (undo-tree-id6980 . -1) (undo-tree-id6981 . -1) (undo-tree-id6982 . -1) (undo-tree-id6983 . -1) (undo-tree-id6984 . -1) (undo-tree-id6985 . -1) (undo-tree-id6986 . -1) (undo-tree-id6987 . -1) (undo-tree-id6988 . -1) (undo-tree-id6989 . -1) (undo-tree-id6990 . -1) (undo-tree-id6991 . -1) (undo-tree-id6992 . -1) (undo-tree-id6993 . -1) (undo-tree-id6994 . -1) (undo-tree-id6995 . -1) (undo-tree-id6996 . -1) 12921 (#("_" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -12921) (undo-tree-id6997 . -1) (undo-tree-id6998 . -1) (undo-tree-id6999 . -1) (undo-tree-id7000 . -1) (undo-tree-id7001 . -1) (undo-tree-id7002 . -1) (undo-tree-id7003 . -1) (undo-tree-id7004 . -1) (undo-tree-id7005 . -1) (undo-tree-id7006 . -1) (undo-tree-id7007 . -1) (undo-tree-id7008 . -1) (undo-tree-id7009 . -1) (undo-tree-id7010 . -1) (undo-tree-id7011 . -1) (undo-tree-id7012 . -1) (undo-tree-id7013 . -1) 12922 (#("out" 0 3 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -12922) (undo-tree-id7014 . -3) (undo-tree-id7015 . -3) (undo-tree-id7016 . -3) (undo-tree-id7017 . -3) (undo-tree-id7018 . -3) (undo-tree-id7019 . -3) (undo-tree-id7020 . -3) (undo-tree-id7021 . -3) (undo-tree-id7022 . -3) (undo-tree-id7023 . -3) (undo-tree-id7024 . -3) (undo-tree-id7025 . -3) (undo-tree-id7026 . -3) (undo-tree-id7027 . -3) 12925 (#("_" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -12925) (undo-tree-id7028 . -1) (undo-tree-id7029 . -1) (undo-tree-id7030 . -1) (undo-tree-id7031 . -1) (undo-tree-id7032 . -1) (undo-tree-id7033 . -1) (undo-tree-id7034 . -1) (undo-tree-id7035 . -1) (undo-tree-id7036 . -1) (undo-tree-id7037 . -1) (undo-tree-id7038 . -1) 12926 (#("dist_" 0 5 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -12926) (undo-tree-id7039 . -5) (undo-tree-id7040 . -5) (undo-tree-id7041 . -5) (undo-tree-id7042 . -5) (undo-tree-id7043 . -5) (undo-tree-id7044 . -5) (undo-tree-id7045 . -5) (undo-tree-id7046 . -5) (undo-tree-id7047 . -5) 12931 (#("results" 0 7 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -12931) (undo-tree-id7048 . -7) (undo-tree-id7049 . -7) (undo-tree-id7050 . -7) (undo-tree-id7051 . -7) (undo-tree-id7052 . -7) (undo-tree-id7053 . -7) (undo-tree-id7054 . -7) 12938) nil (26429 30242 250245 353000) 0 nil])
([nil nil ((13020 . 13022) (13013 . 13020) (#("p" 0 1 (wrap-prefix "  " fontified t)) . -13013) (undo-tree-id7125 . -1) (undo-tree-id7126 . -1) (undo-tree-id7127 . -1) 13014 (13013 . 13014) (#("poc" 0 3 (wrap-prefix "  " fontified t)) . -13013) (undo-tree-id7128 . -3) (undo-tree-id7129 . -1) (undo-tree-id7130 . -2) (undo-tree-id7131 . -1) (undo-tree-id7132 . -3) (undo-tree-id7133 . -2) (undo-tree-id7134 . -3) 13016 (12999 . 13016) (12995 . 12999) (#("w" 0 1 (wrap-prefix "  " fontified t)) . -12995) (undo-tree-id7135 . -1) (undo-tree-id7136 . -1) (undo-tree-id7137 . -1) (undo-tree-id7138 . -1) (undo-tree-id7139 . -1) (undo-tree-id7140 . -1) (undo-tree-id7141 . -1) (#("d" 0 1 (wrap-prefix "  " fontified t)) . -12996) (undo-tree-id7142 . -1) (undo-tree-id7143 . -1) (undo-tree-id7144 . -1) 12997 (12992 . 12997) (12971 . 12992) (12950 . 12971) (#("the " 0 4 (wrap-prefix "  " fontified t)) . -12950) (undo-tree-id7145 . -4) (undo-tree-id7146 . -1) (undo-tree-id7147 . -2) (undo-tree-id7148 . -1) (undo-tree-id7149 . -3) (undo-tree-id7150 . -2) (undo-tree-id7151 . -4) (undo-tree-id7152 . -3) (undo-tree-id7153 . -4) 12954 (12943 . 12954) (12942 . 12943) (t 26429 30242 259890 343000) 12942) nil (26429 30402 703778 117000) 0 nil])
([nil nil ((nil fontified nil 13022 . 13189) (nil fontified nil 13189 . 13190) (nil fontified nil 13190 . 13191) (nil fontified nil 13191 . 13359) (nil fontified nil 13359 . 13360) (13022 . 13530)) ((#("| Gauss                                                 | OneStep                                                 | Iterative                                          |
|:-----------------------------------------------------:|:-------------------------------------------------------:|:--------------------------------------------------:|
| ![dx]({{site.baseurl}}/assets/proj5/1.2_gauss750.png) | ![dx]({{site.baseurl}}/assets/proj5/1.3_onestep750.png) | ![dx]({{site.baseurl}}/assets/proj5/1.4_clean.png) |

" 0 167 (face (markdown-table-face) wrap-prefix "  " fontified nil) 167 168 (face (markdown-table-face) wrap-prefix "  " fontified nil) 168 169 (font-lock-multiline t face (markdown-table-face) wrap-prefix "  " fontified nil) 169 337 (face (markdown-table-face) wrap-prefix "  " fontified nil) 337 338 (font-lock-multiline t face (markdown-table-face) wrap-prefix "  " fontified nil) 338 339 (face (markdown-table-face) wrap-prefix "  " fontified nil) 339 340 (face (markdown-table-face) wrap-prefix "  " fontified nil) 340 341 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 341 342 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 342 344 (help-echo "{{site.baseurl}}/assets/proj5/1.2_gauss750.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) wrap-prefix "  " fontified nil) 344 345 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 345 346 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 346 392 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified nil) 392 393 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 393 396 (face (markdown-table-face) wrap-prefix "  " fontified nil) 396 397 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 397 398 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 398 400 (help-echo "{{site.baseurl}}/assets/proj5/1.3_onestep750.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) wrap-prefix "  " fontified nil) 400 401 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 401 402 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 402 450 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified nil) 450 451 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 451 454 (face (markdown-table-face) wrap-prefix "  " fontified nil) 454 455 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 455 456 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 456 458 (help-echo "{{site.baseurl}}/assets/proj5/1.4_clean.png" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) wrap-prefix "  " fontified nil) 458 459 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 459 460 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 460 503 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified nil) 503 504 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) wrap-prefix "  " fontified nil) 504 506 (face (markdown-table-face) wrap-prefix "  " fontified nil) 506 507 (font-lock-multiline t face (markdown-table-face) wrap-prefix "  " fontified nil) 507 508 (rear-nonsticky nil fontified nil wrap-prefix "  ")) . 13022) (undo-tree-id7158 . -507) (undo-tree-id7159 . 169) (undo-tree-id7160 . -338) (undo-tree-id7161 . -338) (undo-tree-id7162 . -169) (undo-tree-id7163 . -338) (undo-tree-id7164 . -338) (undo-tree-id7165 . -169) (undo-tree-id7166 . -338) (undo-tree-id7167 . -338) (undo-tree-id7168 . -167) (undo-tree-id7169 . -167) (undo-tree-id7170 . -338) (undo-tree-id7171 . -338) (undo-tree-id7172 . -338) (undo-tree-id7173 . -338) (nil fontified t 13359 . 13360) (nil fontified t 13191 . 13359) (nil fontified t 13190 . 13191) (nil fontified t 13189 . 13190) (nil fontified t 13022 . 13189) (nil rear-nonsticky nil 13529 . 13530)) (26429 30403 628168 615000) 0 nil])
([nil nil ((13024 . 13031) (#("Poech" 0 5 (face (markdown-table-face) wrap-prefix "  " fontified t)) . -13024) (undo-tree-id7367 . -5) (undo-tree-id7368 . -1) (undo-tree-id7369 . -2) (undo-tree-id7370 . -1) (undo-tree-id7371 . -3) (undo-tree-id7372 . -2) (undo-tree-id7373 . -4) (undo-tree-id7374 . -3) (undo-tree-id7375 . -5) (undo-tree-id7376 . -4) (undo-tree-id7377 . -5) 13029 (13024 . 13029) (#("Gauss" 0 5 (face (markdown-table-face) wrap-prefix "  " fontified t)) . 13024)) nil (26429 30458 772520 129000) 0 nil] [nil nil ((13189 . 13191) (#("|
|:-----------------------------------------------------:|:-------------------------------------------------------:|:--------------------------------------------------:|
|" 0 1 (wrap-prefix "  " face (markdown-table-face) fontified t) 1 2 (wrap-prefix "  " font-lock-multiline t face (markdown-table-face) fontified t) 2 170 (wrap-prefix "  " face (markdown-table-face) fontified t) 170 171 (wrap-prefix "  " font-lock-multiline t face (markdown-table-face) fontified t) 171 172 (wrap-prefix "  " face (markdown-table-face) fontified t)) . 13189) (undo-tree-id7115 . -171) (undo-tree-id7116 . -171) (undo-tree-id7117 . -2) (undo-tree-id7118 . -171) (undo-tree-id7119 . -171) (undo-tree-id7120 . -171) (undo-tree-id7121 . -2) (undo-tree-id7122 . -171) (undo-tree-id7123 . -171) (undo-tree-id7124 . -171) 13360) ((13189 . 13361) (#("uu" 0 2 (face (markdown-table-face) wrap-prefix "  " fontified t)) . 13189) (undo-tree-id7154 . -1) (undo-tree-id7155 . -1) (undo-tree-id7156 . -1) (undo-tree-id7157 . -1)) (26429 30402 654464 488000) 0 nil])
([nil nil ((13082 . 13089) (#("OneStep" 0 7 (face (markdown-table-face) wrap-prefix "  " fontified t)) . 13082)) nil (26429 30458 772508 196000) 0 nil])
nil
([nil nil ((13140 . 13148) (#("Iterative" 0 9 (face (markdown-table-face) wrap-prefix "  " fontified t)) . 13140)) nil (26429 30458 772507 24000) 0 nil])
([nil nil ((13146 . 13148) (#("1" 0 1 (face (markdown-table-face) wrap-prefix "  " fontified t)) . -13146) (undo-tree-id7344 . -1) (undo-tree-id7345 . -1) (undo-tree-id7346 . -1) (undo-tree-id7347 . -1) (undo-tree-id7348 . -1) (undo-tree-id7349 . -1) (undo-tree-id7350 . -1) (undo-tree-id7351 . -1) (undo-tree-id7352 . -1) (undo-tree-id7353 . -1) (undo-tree-id7354 . -1) (undo-tree-id7355 . -1) (undo-tree-id7356 . -1) (undo-tree-id7357 . -1) (undo-tree-id7358 . -1) (undo-tree-id7359 . -1) (undo-tree-id7360 . -1) (#("0" 0 1 (face (markdown-table-face) wrap-prefix "  " fontified t)) . -13147) (undo-tree-id7361 . -1) (undo-tree-id7362 . -1) (undo-tree-id7363 . -1) (undo-tree-id7364 . -1) (undo-tree-id7365 . -1) (undo-tree-id7366 . -1) 13148) nil (26429 30458 772504 990000) 0 nil])
([nil nil ((13428 . 13435) (13425 . 13428) (#("p" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -13425) (undo-tree-id7174 . -1) (undo-tree-id7175 . -1) (undo-tree-id7176 . -1) (undo-tree-id7177 . -1) (undo-tree-id7178 . -1) (undo-tree-id7179 . -1) (undo-tree-id7180 . -1) (#("o" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -13426) (undo-tree-id7181 . -1) (undo-tree-id7182 . -1) (undo-tree-id7183 . -1) 13427 (13423 . 13427) (13402 . 13423) (#("-" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -13402) (undo-tree-id7184 . -1) (undo-tree-id7185 . -1) (undo-tree-id7186 . -1) 13403 (13399 . 13403) (#("1" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -13399) (undo-tree-id7187 . -1) (undo-tree-id7188 . -1) (undo-tree-id7189 . -1) (undo-tree-id7190 . -1) (undo-tree-id7191 . -1) (undo-tree-id7192 . -1) (undo-tree-id7193 . -1) (undo-tree-id7194 . -1) (undo-tree-id7195 . -1) (undo-tree-id7196 . -1) (undo-tree-id7197 . -1) (undo-tree-id7198 . -1) (undo-tree-id7199 . -1) (undo-tree-id7200 . -1) (undo-tree-id7201 . -1) (undo-tree-id7202 . -1) (undo-tree-id7203 . -1) (undo-tree-id7204 . -1) (undo-tree-id7205 . -1) (undo-tree-id7206 . -1) (undo-tree-id7207 . -1) (undo-tree-id7208 . -1) (undo-tree-id7209 . -1) (undo-tree-id7210 . -1) (undo-tree-id7211 . -1) (undo-tree-id7212 . -1) (undo-tree-id7213 . -1) (undo-tree-id7214 . -1) (undo-tree-id7215 . -1) (undo-tree-id7216 . -1) (undo-tree-id7217 . -1) (undo-tree-id7218 . -1) (#("." 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -13400) (undo-tree-id7219 . -1) (undo-tree-id7220 . -1) (undo-tree-id7221 . -1) (undo-tree-id7222 . -1) (undo-tree-id7223 . -1) (undo-tree-id7224 . -1) (undo-tree-id7225 . -1) (undo-tree-id7226 . -1) (undo-tree-id7227 . -1) (undo-tree-id7228 . -1) (undo-tree-id7229 . -1) (undo-tree-id7230 . -1) (undo-tree-id7231 . -1) (undo-tree-id7232 . -1) (undo-tree-id7233 . -1) (undo-tree-id7234 . -1) (undo-tree-id7235 . -1) (undo-tree-id7236 . -1) (undo-tree-id7237 . -1) (undo-tree-id7238 . -1) (undo-tree-id7239 . -1) (undo-tree-id7240 . -1) (undo-tree-id7241 . -1) (undo-tree-id7242 . -1) (undo-tree-id7243 . -1) (undo-tree-id7244 . -1) (undo-tree-id7245 . -1) (undo-tree-id7246 . -1) (undo-tree-id7247 . -1) (undo-tree-id7248 . -1) (#("2" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -13401) (undo-tree-id7249 . -1) (undo-tree-id7250 . -1) (undo-tree-id7251 . -1) (undo-tree-id7252 . -1) (undo-tree-id7253 . -1) (undo-tree-id7254 . -1) (undo-tree-id7255 . -1) (undo-tree-id7256 . -1) (undo-tree-id7257 . -1) (undo-tree-id7258 . -1) (undo-tree-id7259 . -1) (undo-tree-id7260 . -1) (undo-tree-id7261 . -1) (undo-tree-id7262 . -1) (undo-tree-id7263 . -1) (undo-tree-id7264 . -1) (undo-tree-id7265 . -1) (undo-tree-id7266 . -1) (undo-tree-id7267 . -1) (undo-tree-id7268 . -1) (undo-tree-id7269 . -1) (undo-tree-id7270 . -1) (undo-tree-id7271 . -1) (undo-tree-id7272 . -1) (undo-tree-id7273 . -1) (undo-tree-id7274 . -1) (undo-tree-id7275 . -1) (undo-tree-id7276 . -1) 13402 (#("_" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -13402) (undo-tree-id7277 . -1) (undo-tree-id7278 . -1) (undo-tree-id7279 . -1) (undo-tree-id7280 . -1) (undo-tree-id7281 . -1) (undo-tree-id7282 . -1) (undo-tree-id7283 . -1) (undo-tree-id7284 . -1) (undo-tree-id7285 . -1) (undo-tree-id7286 . -1) (undo-tree-id7287 . -1) (undo-tree-id7288 . -1) (undo-tree-id7289 . -1) (undo-tree-id7290 . -1) (undo-tree-id7291 . -1) (undo-tree-id7292 . -1) (undo-tree-id7293 . -1) (undo-tree-id7294 . -1) (undo-tree-id7295 . -1) (undo-tree-id7296 . -1) (undo-tree-id7297 . -1) (undo-tree-id7298 . -1) (undo-tree-id7299 . -1) (undo-tree-id7300 . -1) (undo-tree-id7301 . -1) 13403 (#("gauss750." 0 9 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -13403) (undo-tree-id7302 . -9) (undo-tree-id7303 . -9) (undo-tree-id7304 . -9) (undo-tree-id7305 . -9) (undo-tree-id7306 . -9) (undo-tree-id7307 . -9) (undo-tree-id7308 . -9) (undo-tree-id7309 . -9) (undo-tree-id7310 . -9) (undo-tree-id7311 . -9) (undo-tree-id7312 . -9) (undo-tree-id7313 . -9) (undo-tree-id7314 . -9) (undo-tree-id7315 . -9) (undo-tree-id7316 . -9) (undo-tree-id7317 . -9) (undo-tree-id7318 . -9) (undo-tree-id7319 . -9) (undo-tree-id7320 . -9) (undo-tree-id7321 . -9) (undo-tree-id7322 . -9) (undo-tree-id7323 . -9) (undo-tree-id7324 . -9) 13412 (#("png" 0 3 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . 13412) (undo-tree-id7325 . -2) (undo-tree-id7326 . -2) (undo-tree-id7327 . -2) (undo-tree-id7328 . -2) (undo-tree-id7329 . -2) (undo-tree-id7330 . -3) (undo-tree-id7331 . -2) (undo-tree-id7332 . -3) (undo-tree-id7333 . -2) (undo-tree-id7334 . -2) (undo-tree-id7335 . -2) (undo-tree-id7336 . -2) (undo-tree-id7337 . -2) (undo-tree-id7338 . -2) (undo-tree-id7339 . -2) (undo-tree-id7340 . -2) (undo-tree-id7341 . -2) (undo-tree-id7342 . -2) (undo-tree-id7343 . -2) 13414) nil (26429 30458 772467 729000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13510 . 13511) (nil fontified nil 13475 . 13511) (13475 . 13511) (#("1.3_onestep750.png" 0 18 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . 13475) (undo-tree-id7407 . -18) (undo-tree-id7408 . -17) (undo-tree-id7409 . -1) (undo-tree-id7410 . -2) (undo-tree-id7411 . -3) (undo-tree-id7412 . -4) (undo-tree-id7413 . -3) (undo-tree-id7414 . -14) (undo-tree-id7415 . -4) (undo-tree-id7416 . -15) (undo-tree-id7417 . -14) (undo-tree-id7418 . -18) (undo-tree-id7419 . -14) (undo-tree-id7420 . -17) (undo-tree-id7421 . -18) (undo-tree-id7422 . -17) (undo-tree-id7423 . -17) (undo-tree-id7424 . -17) (undo-tree-id7425 . -17) (undo-tree-id7426 . -15) (undo-tree-id7427 . -17) (undo-tree-id7428 . -14) (undo-tree-id7429 . -15) (undo-tree-id7430 . -4) (undo-tree-id7431 . -14) (undo-tree-id7432 . -3) (undo-tree-id7433 . -4) (undo-tree-id7434 . -2) (undo-tree-id7435 . -3) (undo-tree-id7436 . -1) (undo-tree-id7437 . -2) (undo-tree-id7438 . -1) (t 26429 30458 786165 34000)) nil (26429 30476 737062 620000) 0 nil])
([nil nil ((13506 . 13507) (#("1" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -13506) (undo-tree-id7400 . -1) (undo-tree-id7401 . -1) (undo-tree-id7402 . -1) (undo-tree-id7403 . -1) (undo-tree-id7404 . -1) (undo-tree-id7405 . -1) (undo-tree-id7406 . -1) 13507) nil (26429 30476 737921 96000) 0 nil])
([nil nil ((#("1.4_clean.png" 0 13 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . 13551) (undo-tree-id7443 . -12) (undo-tree-id7444 . -12) (undo-tree-id7445 . -12) (undo-tree-id7446 . -13) (undo-tree-id7447 . -12) (undo-tree-id7448 . -13) (undo-tree-id7449 . -12) (undo-tree-id7450 . -12) (undo-tree-id7451 . -12) (undo-tree-id7452 . -12) (undo-tree-id7453 . -10) (undo-tree-id7454 . -12) (undo-tree-id7455 . -9) (undo-tree-id7456 . -10) (undo-tree-id7457 . -4) (undo-tree-id7458 . -9) (undo-tree-id7459 . -3) (undo-tree-id7460 . -4) (undo-tree-id7461 . -2) (undo-tree-id7462 . -3) (undo-tree-id7463 . -1) (undo-tree-id7464 . -2) (undo-tree-id7465 . -1) (undo-tree-id7466 . -1) (undo-tree-id7467 . -2) (undo-tree-id7468 . -1) (undo-tree-id7469 . -3) (undo-tree-id7470 . -2) (undo-tree-id7471 . -4) (undo-tree-id7472 . -3) (undo-tree-id7473 . -9) (undo-tree-id7474 . -4) (undo-tree-id7475 . -10) (undo-tree-id7476 . -9) (undo-tree-id7477 . -13) (undo-tree-id7478 . -10) (undo-tree-id7479 . -12) (undo-tree-id7480 . -13) (undo-tree-id7481 . -12) 13563) nil (26429 30488 527456 575000) 0 nil] [nil nil ((nil rear-nonsticky nil 13568 . 13569) (nil fontified nil 13551 . 13569) (13551 . 13569) (#("1.4_clean.png" 0 13 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . 13551) (undo-tree-id7378 . -13) (undo-tree-id7379 . -12) (undo-tree-id7380 . -13) (undo-tree-id7381 . -12) (undo-tree-id7382 . -13) (undo-tree-id7383 . -12) (undo-tree-id7384 . -12) (undo-tree-id7385 . -12) (undo-tree-id7386 . -12) (undo-tree-id7387 . -10) (undo-tree-id7388 . -12) (undo-tree-id7389 . -9) (undo-tree-id7390 . -10) (undo-tree-id7391 . -4) (undo-tree-id7392 . -9) (undo-tree-id7393 . -3) (undo-tree-id7394 . -4) (undo-tree-id7395 . -2) (undo-tree-id7396 . -3) (undo-tree-id7397 . -1) (undo-tree-id7398 . -2) (undo-tree-id7399 . -1)) ((13551 . 13564) (#("1.3_onestep750.png" 0 17 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified nil) 17 18 (rear-nonsticky nil font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified nil)) . 13551) (undo-tree-id7439 . -17) (undo-tree-id7440 . -17) (undo-tree-id7441 . -17) (undo-tree-id7442 . -17) (nil rear-nonsticky nil 13568 . 13569)) (26429 30476 736365 39000) 0 nil])
([nil nil ((13572 . 13584) (13551 . 13572)) nil (26429 30488 525355 175000) 0 nil])
nil
([nil nil ((13584 . 13588) (t 26429 30488 541615 53000)) nil (26429 30499 197027 582000) 0 nil])
([nil nil ((13594 . 13610) (#("
" 0 1 (wrap-prefix "  " fontified t)) . -13594) (undo-tree-id7537 . -1) (undo-tree-id7538 . -1) (undo-tree-id7539 . -1) (undo-tree-id7540 . -1) 13595 (13594 . 13595) (13593 . 13594) (t 26429 30499 210776 413000) 13593) nil (26429 31551 314330 514000) 0 nil])
([nil nil ((13595 . 13597) (#(" " 0 1 (face markdown-header-delimiter-face markdown-heading-1-atx (13594 13612 nil nil nil nil nil nil 13594 13596 13596 13612 13612 13612 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (13594 13612 nil nil nil nil nil nil 13594 13596 13596 13612 13612 13612 #<buffer 2024-11-19-proj5.markdown>) wrap-prefix "  " fontified t)) . -13595) (undo-tree-id7534 . -1) (undo-tree-id7535 . -1) (undo-tree-id7536 . -1) 13596 (13594 . 13596)) nil (26429 31551 314327 538000) 0 nil])
([nil nil ((13636 . 13656) (13615 . 13636) (13614 . 13615) (13613 . 13614) 13596) nil (26429 31551 314325 515000) 0 nil])
([nil nil ((13657 . 13658) (13656 . 13657) 13615) nil (26429 31551 314325 104000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14228 . 14229) (nil fontified nil 13658 . 14229) (13658 . 14229)) nil (26429 31551 314324 673000) 0 nil])
([nil nil ((14250 . 14255) (14229 . 14250) (#("nand " 0 5 (wrap-prefix "  " fontified t)) . -14229) (undo-tree-id7516 . -5) (undo-tree-id7517 . -1) (undo-tree-id7518 . -1) (undo-tree-id7519 . -1) (undo-tree-id7520 . -1) (undo-tree-id7521 . -1) (undo-tree-id7522 . -2) (undo-tree-id7523 . -1) (undo-tree-id7524 . -3) (undo-tree-id7525 . -2) (undo-tree-id7526 . -4) (undo-tree-id7527 . -3) (undo-tree-id7528 . -5) (undo-tree-id7529 . -4) (undo-tree-id7530 . -5) 14234 (14231 . 14234) (14230 . 14231) (#("a" 0 1 (wrap-prefix "  " fontified t)) . -14230) (undo-tree-id7531 . -1) (undo-tree-id7532 . -1) (undo-tree-id7533 . -1) 14231 (14229 . 14231)) nil (26429 31551 314323 300000) 0 nil])
([nil nil ((14256 . 14257) (14255 . 14256) 14229) nil (26429 31551 314310 135000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14827 . 14828) (nil fontified nil 14257 . 14828) (14257 . 14828)) nil (26429 31551 314309 665000) 0 nil])
([nil nil ((14634 . 14635) (#("2" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -14634) (undo-tree-id7501 . -1) (undo-tree-id7502 . -1) (undo-tree-id7503 . -1) (undo-tree-id7504 . -1) (undo-tree-id7505 . -1) (undo-tree-id7506 . -1) (undo-tree-id7507 . -1) (undo-tree-id7508 . -1) (undo-tree-id7509 . -1) (undo-tree-id7510 . -1) (undo-tree-id7511 . -1) (undo-tree-id7512 . -1) (#("3" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -14635) (undo-tree-id7513 . -1) (undo-tree-id7514 . -1) (undo-tree-id7515 . -1) 14636 (14635 . 14636)) nil (26429 31551 314308 703000) 0 nil])
([nil nil ((14638 . 14643) (#("time" 0 4 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . 14638) (undo-tree-id7496 . -1) (undo-tree-id7497 . -1) (undo-tree-id7498 . -1) (undo-tree-id7499 . -1) (undo-tree-id7500 . -1) 14639) nil (26429 31551 314300 948000) 0 nil])
([nil nil ((14711 . 14712) (#("2" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -14711) (undo-tree-id7489 . -1) (undo-tree-id7490 . -1) (undo-tree-id7491 . -1) (undo-tree-id7492 . -1) (undo-tree-id7493 . -1) (undo-tree-id7494 . -1) (undo-tree-id7495 . -1) 14712) nil (26429 31551 314297 241000) 0 nil])
([nil nil ((14715 . 14720) (#("time" 0 4 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . 14715) (undo-tree-id7487 . -4) (undo-tree-id7488 . -4)) nil (26429 31551 314287 352000) 0 nil])
([nil nil ((14788 . 14789) (#("2" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . -14788) (undo-tree-id7482 . -1) (undo-tree-id7483 . -1) (undo-tree-id7484 . -1) (undo-tree-id7485 . -1) (undo-tree-id7486 . -1) 14789) nil (26429 31551 314284 767000) 0 nil])
([nil nil ((14792 . 14797) (#("time" 0 4 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) wrap-prefix "  " fontified t)) . 14792)) nil (26429 31551 314265 611000) 0 nil])
([nil nil ((#("Epoch 1                                                 " 0 56 (face (markdown-table-face) wrap-prefix "  " fontified t)) . 13024) (undo-tree-id8232 . -55) (undo-tree-id8233 . -55) (undo-tree-id8234 . -55) (undo-tree-id8235 . -6) (undo-tree-id8236 . -56) (undo-tree-id8237 . -6) (undo-tree-id8238 . -56) (undo-tree-id8239 . -56) (undo-tree-id8240 . -6) (undo-tree-id8241 . -56) (undo-tree-id8242 . -6) (undo-tree-id8243 . -6) (undo-tree-id8244 . -56) (undo-tree-id8245 . -6) (undo-tree-id8246 . -55) (undo-tree-id8247 . -56) (undo-tree-id8248 . -55) 13079 (t 26429 31551 344688 717000)) nil (26429 32032 470267 481000) 0 nil])
([nil nil ((#("|" 0 1 (face (markdown-table-face) wrap-prefix "  " fontified t)) . 13022)) nil (26429 32032 470261 640000) 0 nil])
([nil nil ((#(" " 0 1 (face (markdown-table-face) wrap-prefix "   " fontified t)) . 13022) (undo-tree-id8185 . -1) (undo-tree-id8186 . -1) (undo-tree-id8187 . -1) (undo-tree-id8188 . -1) (undo-tree-id8189 . -1) (undo-tree-id8190 . -1) (undo-tree-id8191 . -1) (undo-tree-id8192 . -1) (undo-tree-id8193 . -1) (undo-tree-id8194 . -1) (undo-tree-id8195 . -1) (undo-tree-id8196 . -1) (undo-tree-id8197 . -1) (undo-tree-id8198 . -1) (undo-tree-id8199 . -1) (undo-tree-id8200 . -1) (undo-tree-id8201 . -1) (undo-tree-id8202 . -1) (undo-tree-id8203 . -1) (undo-tree-id8204 . -1) (undo-tree-id8205 . -1) (undo-tree-id8206 . -1) (undo-tree-id8207 . -1) (undo-tree-id8208 . -1) (undo-tree-id8209 . -1) (undo-tree-id8210 . -1) (undo-tree-id8211 . -1) (undo-tree-id8212 . -1) (undo-tree-id8213 . -1) (undo-tree-id8214 . -1) (undo-tree-id8215 . -1) (undo-tree-id8216 . -1) (undo-tree-id8217 . -1) (undo-tree-id8218 . -1) (undo-tree-id8219 . -1) (undo-tree-id8220 . -1) (undo-tree-id8221 . -1) (undo-tree-id8222 . -1) (undo-tree-id8223 . -1) (undo-tree-id8224 . -1) (undo-tree-id8225 . -1) (undo-tree-id8226 . -1) (undo-tree-id8227 . -1) (undo-tree-id8228 . -1) (undo-tree-id8229 . -1) (undo-tree-id8230 . -1) (undo-tree-id8231 . -1)) nil (26429 32032 470260 527000) 0 nil])
([nil nil ((#("|:-----------------------------------------------------:" 0 56 (face (markdown-table-face) fontified t wrap-prefix "  ")) . 13134) (undo-tree-id8064 . -55) (undo-tree-id8065 . -55) (undo-tree-id8066 . -55) (undo-tree-id8067 . -2) (undo-tree-id8068 . -2) (undo-tree-id8069 . -2) (undo-tree-id8070 . -2) (undo-tree-id8071 . -1) (undo-tree-id8072 . -2) (undo-tree-id8073 . -1) (undo-tree-id8074 . -3) (undo-tree-id8075 . -2) (undo-tree-id8076 . -4) (undo-tree-id8077 . -2) (undo-tree-id8078 . -5) (undo-tree-id8079 . -4) (undo-tree-id8080 . -6) (undo-tree-id8081 . -5) (undo-tree-id8082 . -7) (undo-tree-id8083 . -5) (undo-tree-id8084 . -8) (undo-tree-id8085 . -7) (undo-tree-id8086 . -9) (undo-tree-id8087 . -8) (undo-tree-id8088 . -10) (undo-tree-id8089 . -8) (undo-tree-id8090 . -11) (undo-tree-id8091 . -10) (undo-tree-id8092 . -12) (undo-tree-id8093 . -11) (undo-tree-id8094 . -13) (undo-tree-id8095 . -11) (undo-tree-id8096 . -14) (undo-tree-id8097 . -13) (undo-tree-id8098 . -15) (undo-tree-id8099 . -14) (undo-tree-id8100 . -16) (undo-tree-id8101 . -14) (undo-tree-id8102 . -17) (undo-tree-id8103 . -16) (undo-tree-id8104 . -18) (undo-tree-id8105 . -17) (undo-tree-id8106 . -19) (undo-tree-id8107 . -17) (undo-tree-id8108 . -20) (undo-tree-id8109 . -19) (undo-tree-id8110 . -21) (undo-tree-id8111 . -20) (undo-tree-id8112 . -22) (undo-tree-id8113 . -20) (undo-tree-id8114 . -23) (undo-tree-id8115 . -22) (undo-tree-id8116 . -24) (undo-tree-id8117 . -23) (undo-tree-id8118 . -25) (undo-tree-id8119 . -23) (undo-tree-id8120 . -26) (undo-tree-id8121 . -25) (undo-tree-id8122 . -27) (undo-tree-id8123 . -26) (undo-tree-id8124 . -28) (undo-tree-id8125 . -26) (undo-tree-id8126 . -29) (undo-tree-id8127 . -28) (undo-tree-id8128 . -30) (undo-tree-id8129 . -29) (undo-tree-id8130 . -31) (undo-tree-id8131 . -29) (undo-tree-id8132 . -32) (undo-tree-id8133 . -31) (undo-tree-id8134 . -33) (undo-tree-id8135 . -32) (undo-tree-id8136 . -34) (undo-tree-id8137 . -32) (undo-tree-id8138 . -35) (undo-tree-id8139 . -34) (undo-tree-id8140 . -36) (undo-tree-id8141 . -35) (undo-tree-id8142 . -37) (undo-tree-id8143 . -35) (undo-tree-id8144 . -38) (undo-tree-id8145 . -37) (undo-tree-id8146 . -39) (undo-tree-id8147 . -38) (undo-tree-id8148 . -40) (undo-tree-id8149 . -38) (undo-tree-id8150 . -41) (undo-tree-id8151 . -40) (undo-tree-id8152 . -42) (undo-tree-id8153 . -41) (undo-tree-id8154 . -43) (undo-tree-id8155 . -41) (undo-tree-id8156 . -44) (undo-tree-id8157 . -43) (undo-tree-id8158 . -45) (undo-tree-id8159 . -44) (undo-tree-id8160 . -46) (undo-tree-id8161 . -44) (undo-tree-id8162 . -47) (undo-tree-id8163 . -44) (undo-tree-id8164 . -48) (undo-tree-id8165 . -47) (undo-tree-id8166 . -49) (undo-tree-id8167 . -48) (undo-tree-id8168 . -50) (undo-tree-id8169 . -49) (undo-tree-id8170 . -51) (undo-tree-id8171 . -49) (undo-tree-id8172 . -52) (undo-tree-id8173 . -51) (undo-tree-id8174 . -53) (undo-tree-id8175 . -52) (undo-tree-id8176 . -54) (undo-tree-id8177 . -52) (undo-tree-id8178 . -55) (undo-tree-id8179 . -54) (undo-tree-id8180 . -56) (undo-tree-id8181 . -55) (undo-tree-id8182 . -55) (undo-tree-id8183 . -56) (undo-tree-id8184 . -55) 13189) nil (26429 32032 470223 577000) 0 nil])
([nil nil ((#("| ![dx]({{site.baseurl}}/assets/proj5/2.1_time_conditioned_unet_epoch1.gif) " 0 1 (face (markdown-table-face) fontified t wrap-prefix "  ") 1 2 (face (markdown-table-face) fontified t wrap-prefix "  ") 2 3 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified t wrap-prefix "  ") 3 4 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified t wrap-prefix "  ") 4 6 (help-echo "{{site.baseurl}}/assets/proj5/2.1_time_conditioned_unet_epoch1.gif" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-link-face markdown-table-face) fontified t wrap-prefix "  ") 6 7 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified t wrap-prefix "  ") 7 8 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified t wrap-prefix "  ") 8 74 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ") 74 75 (font-lock-multiline t rear-nonsticky t invisible markdown-markup face (markdown-markup-face markdown-table-face) fontified t wrap-prefix "  ") 75 76 (face (markdown-table-face) fontified t wrap-prefix "  ")) . 13247) (undo-tree-id8036 . -75) (undo-tree-id8037 . -75) (undo-tree-id8038 . -75) (undo-tree-id8039 . -2) (undo-tree-id8040 . -4) (undo-tree-id8041 . -2) (undo-tree-id8042 . -4) (undo-tree-id8043 . -2) (undo-tree-id8044 . -2) (undo-tree-id8045 . -2) (undo-tree-id8046 . -2) (undo-tree-id8047 . -2) (undo-tree-id8048 . -2) (undo-tree-id8049 . -4) (undo-tree-id8050 . -2) (undo-tree-id8051 . -6) (undo-tree-id8052 . -4) (undo-tree-id8053 . -10) (undo-tree-id8054 . -6) (undo-tree-id8055 . -14) (undo-tree-id8056 . -6) (undo-tree-id8057 . -15) (undo-tree-id8058 . -14) (undo-tree-id8059 . -76) (undo-tree-id8060 . -15) (undo-tree-id8061 . -75) (undo-tree-id8062 . -76) (undo-tree-id8063 . -75) 13322) nil (26429 32032 470178 412000) 0 nil])
([nil nil ((#("|:-------------------------------------------------------:|:--------------------------------------------------:|
" 0 112 (face (markdown-table-face) fontified nil wrap-prefix "  ") 112 113 (font-lock-multiline t face (markdown-table-face) fontified nil wrap-prefix "  ")) . 13332) (undo-tree-id7787 . -113) (undo-tree-id7788 . -113) (undo-tree-id7789 . -113) (undo-tree-id7790 . -113) (undo-tree-id7791 . -113) (undo-tree-id7792 . -113) (undo-tree-id7793 . -113) (undo-tree-id7794 . -113) (undo-tree-id7795 . -113) (undo-tree-id7796 . -113) (undo-tree-id7797 . -113) (undo-tree-id7798 . -113) (undo-tree-id7799 . -113) (undo-tree-id7800 . -113) (undo-tree-id7801 . -113) (undo-tree-id7802 . -113) (undo-tree-id7803 . -113) (undo-tree-id7804 . -113) (undo-tree-id7805 . -113) (undo-tree-id7806 . -113) (undo-tree-id7807 . -113) (undo-tree-id7808 . -113) (undo-tree-id7809 . -113) (undo-tree-id7810 . -113) (undo-tree-id7811 . -113) (undo-tree-id7812 . -113) (undo-tree-id7813 . -113) (undo-tree-id7814 . -113) (undo-tree-id7815 . -113) (undo-tree-id7816 . -113) (undo-tree-id7817 . -113) (undo-tree-id7818 . -113) (undo-tree-id7819 . -113) (undo-tree-id7820 . -113) (undo-tree-id7821 . -113) (undo-tree-id7822 . -113) (undo-tree-id7823 . -113) (undo-tree-id7824 . -113) (undo-tree-id7825 . -113) (undo-tree-id7826 . -113) (undo-tree-id7827 . -113) (undo-tree-id7828 . -113) (undo-tree-id7829 . -113) (undo-tree-id7830 . -113) (undo-tree-id7831 . -113) (undo-tree-id7832 . -113) (undo-tree-id7833 . -113) (undo-tree-id7834 . -113) (undo-tree-id7835 . -113) (undo-tree-id7836 . -113) (undo-tree-id7837 . -113) (undo-tree-id7838 . -113) (undo-tree-id7839 . -113) (13177 . 13332) (#("| Epoch 5                                                 | Epoch 20                                          |
" 0 110 (face (markdown-table-face) wrap-prefix "  " fontified nil) 110 111 (face (markdown-table-face) wrap-prefix "  " fontified nil) 111 112 (font-lock-multiline t face (markdown-table-face) wrap-prefix "  " fontified nil)) . 13177) (undo-tree-id7840 . -111) (undo-tree-id7841 . -112) (undo-tree-id7842 . -110) (undo-tree-id7843 . -112) (undo-tree-id7844 . -112) (undo-tree-id7845 . -2) (undo-tree-id7846 . -8) (undo-tree-id7847 . -2) (undo-tree-id7848 . -58) (undo-tree-id7849 . -8) (undo-tree-id7850 . -60) (undo-tree-id7851 . -8) (undo-tree-id7852 . -66) (undo-tree-id7853 . -60) (undo-tree-id7854 . -110) (undo-tree-id7855 . -66) (undo-tree-id7856 . -112) (undo-tree-id7857 . -110) (undo-tree-id7858 . -112) (undo-tree-id7859 . -112) (undo-tree-id7860 . -110) (undo-tree-id7861 . -112) (undo-tree-id7862 . -66) (undo-tree-id7863 . -110) (undo-tree-id7864 . -60) (undo-tree-id7865 . -66) (undo-tree-id7866 . -58) (undo-tree-id7867 . -60) (undo-tree-id7868 . -8) (undo-tree-id7869 . -58) (undo-tree-id7870 . -2) (undo-tree-id7871 . -8) (undo-tree-id7872 . -2) (undo-tree-id7873 . -112) (undo-tree-id7874 . -112) (undo-tree-id7875 . -112) (undo-tree-id7876 . -112) (undo-tree-id7877 . -112) (undo-tree-id7878 . -112) (undo-tree-id7879 . -112) (undo-tree-id7880 . -112) (undo-tree-id7881 . -112) (undo-tree-id7882 . -112) (undo-tree-id7883 . -112) (undo-tree-id7884 . -112) (undo-tree-id7885 . -112) (undo-tree-id7886 . -112) (undo-tree-id7887 . -112) (undo-tree-id7888 . -112) (undo-tree-id7889 . -112) (undo-tree-id7890 . -112) (undo-tree-id7891 . -112) (undo-tree-id7892 . -112) (undo-tree-id7893 . -112) (undo-tree-id7894 . -112) (undo-tree-id7895 . -112) (undo-tree-id7896 . -112) (undo-tree-id7897 . -112) (undo-tree-id7898 . -112) (undo-tree-id7899 . -112) (undo-tree-id7900 . -112) (undo-tree-id7901 . -112) (undo-tree-id7902 . -112) (undo-tree-id7903 . -112) (undo-tree-id7904 . -112) (undo-tree-id7905 . -112) (undo-tree-id7906 . -112) (undo-tree-id7907 . -112) (undo-tree-id7908 . -112) (undo-tree-id7909 . -112) (undo-tree-id7910 . -112) (undo-tree-id7911 . -112) (undo-tree-id7912 . -112) (undo-tree-id7913 . -112) (undo-tree-id7914 . -112) (undo-tree-id7915 . -112) (undo-tree-id7916 . -112) (undo-tree-id7917 . -112) (undo-tree-id7918 . -112) (undo-tree-id7919 . -112) (undo-tree-id7920 . -112) (undo-tree-id7921 . -112) (undo-tree-id7922 . -112) (undo-tree-id7923 . -112) (undo-tree-id7924 . -112) (undo-tree-id7925 . -112) (undo-tree-id7926 . -112) (undo-tree-id7927 . -112) (undo-tree-id7928 . -112) (undo-tree-id7929 . -112) (undo-tree-id7930 . -112) (undo-tree-id7931 . -112) (undo-tree-id7932 . -112) (undo-tree-id7933 . -112) (undo-tree-id7934 . -112) (undo-tree-id7935 . -112) (undo-tree-id7936 . -112) (undo-tree-id7937 . -112) (undo-tree-id7938 . -112) (undo-tree-id7939 . -112) (undo-tree-id7940 . -112) (undo-tree-id7941 . -112) (undo-tree-id7942 . -112) (undo-tree-id7943 . -112) (undo-tree-id7944 . -112) (undo-tree-id7945 . -112) (undo-tree-id7946 . -112) (undo-tree-id7947 . -112) (undo-tree-id7948 . -112) (undo-tree-id7949 . -112) (undo-tree-id7950 . -112) (undo-tree-id7951 . -112) (undo-tree-id7952 . -112) (undo-tree-id7953 . -112) (undo-tree-id7954 . -112) (undo-tree-id7955 . -112) (undo-tree-id7956 . -112) (undo-tree-id7957 . -112) (undo-tree-id7958 . -112) (undo-tree-id7959 . -112) (undo-tree-id7960 . -112) (undo-tree-id7961 . -112) (undo-tree-id7962 . -112) (undo-tree-id7963 . -112) (undo-tree-id7964 . -112) (undo-tree-id7965 . -112) (undo-tree-id7966 . -112) (undo-tree-id7967 . -112) (undo-tree-id7968 . -112) (undo-tree-id7969 . -112) (undo-tree-id7970 . -112) (undo-tree-id7971 . -112) (undo-tree-id7972 . -112) (undo-tree-id7973 . -112) (undo-tree-id7974 . -112) (undo-tree-id7975 . -112) (undo-tree-id7976 . -112) (undo-tree-id7977 . -112) (undo-tree-id7978 . -112) (undo-tree-id7979 . -112) (undo-tree-id7980 . -112) (undo-tree-id7981 . -112) (undo-tree-id7982 . -112) (undo-tree-id7983 . -112) (undo-tree-id7984 . -112) (undo-tree-id7985 . -112) (undo-tree-id7986 . -112) (undo-tree-id7987 . -112) (undo-tree-id7988 . -112) (undo-tree-id7989 . -112) (undo-tree-id7990 . -112) (undo-tree-id7991 . -112) (undo-tree-id7992 . -112) (undo-tree-id7993 . -112) (undo-tree-id7994 . -112) (undo-tree-id7995 . -112) (undo-tree-id7996 . -112) (undo-tree-id7997 . -112) (undo-tree-id7998 . -112) (undo-tree-id7999 . -112) (undo-tree-id8000 . -112) (undo-tree-id8001 . -112) (undo-tree-id8002 . -112) (undo-tree-id8003 . -112) (undo-tree-id8004 . -112) (undo-tree-id8005 . -112) (undo-tree-id8006 . -112) (undo-tree-id8007 . -112) (undo-tree-id8008 . -112) (undo-tree-id8009 . -112) (undo-tree-id8010 . -112) (undo-tree-id8011 . -112) (undo-tree-id8012 . -112) (undo-tree-id8013 . -112) (undo-tree-id8014 . -112) (undo-tree-id8015 . -112) (undo-tree-id8016 . -112) (undo-tree-id8017 . -112) (undo-tree-id8018 . -112) (undo-tree-id8019 . -112) (undo-tree-id8020 . -112) (undo-tree-id8021 . -112) (undo-tree-id8022 . -112) (undo-tree-id8023 . -111) (undo-tree-id8024 . -111) (undo-tree-id8025 . -110) (undo-tree-id8026 . -111) (undo-tree-id8027 . -110) (undo-tree-id8028 . -111) (undo-tree-id8029 . -110) (undo-tree-id8030 . -110) (undo-tree-id8031 . -110) (undo-tree-id8032 . -110) (undo-tree-id8033 . -110) (undo-tree-id8034 . -110) (undo-tree-id8035 . -110) (13022 . 13177) 13132) nil (26429 32032 470162 973000) 0 nil])
([nil nil ((#("2.1_time_conditioned_unet_epoch5.gif" 0 35 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ") 35 36 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . 13370) (undo-tree-id7727 . -35) (undo-tree-id7728 . -35) (undo-tree-id7729 . -1) (undo-tree-id7730 . -2) (undo-tree-id7731 . -1) (undo-tree-id7732 . -3) (undo-tree-id7733 . -2) (undo-tree-id7734 . -4) (undo-tree-id7735 . -3) (undo-tree-id7736 . -8) (undo-tree-id7737 . -4) (undo-tree-id7738 . -9) (undo-tree-id7739 . -8) (undo-tree-id7740 . -20) (undo-tree-id7741 . -9) (undo-tree-id7742 . -21) (undo-tree-id7743 . -20) (undo-tree-id7744 . -25) (undo-tree-id7745 . -21) (undo-tree-id7746 . -26) (undo-tree-id7747 . -25) (undo-tree-id7748 . -32) (undo-tree-id7749 . -26) (undo-tree-id7750 . -33) (undo-tree-id7751 . -32) (undo-tree-id7752 . -36) (undo-tree-id7753 . -33) (undo-tree-id7754 . -36) (undo-tree-id7755 . -36) (undo-tree-id7756 . -35) (undo-tree-id7757 . -36) (undo-tree-id7758 . -35) (undo-tree-id7759 . -35) (undo-tree-id7760 . -35) (undo-tree-id7761 . -35) (undo-tree-id7762 . -33) (undo-tree-id7763 . -35) (undo-tree-id7764 . -32) (undo-tree-id7765 . -33) (undo-tree-id7766 . -26) (undo-tree-id7767 . -32) (undo-tree-id7768 . -25) (undo-tree-id7769 . -26) (undo-tree-id7770 . -21) (undo-tree-id7771 . -25) (undo-tree-id7772 . -20) (undo-tree-id7773 . -21) (undo-tree-id7774 . -9) (undo-tree-id7775 . -20) (undo-tree-id7776 . -8) (undo-tree-id7777 . -9) (undo-tree-id7778 . -4) (undo-tree-id7779 . -8) (undo-tree-id7780 . -3) (undo-tree-id7781 . -4) (undo-tree-id7782 . -2) (undo-tree-id7783 . -3) (undo-tree-id7784 . -1) (undo-tree-id7785 . -2) (undo-tree-id7786 . -1)) nil (26429 32032 470020 904000) 0 nil])
([nil nil ((13387 . 13397) (#("poech" 0 5 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -13387) (undo-tree-id7716 . -5) (undo-tree-id7717 . -1) (undo-tree-id7718 . -2) (undo-tree-id7719 . -1) (undo-tree-id7720 . -3) (undo-tree-id7721 . -2) (undo-tree-id7722 . -4) (undo-tree-id7723 . -3) (undo-tree-id7724 . -5) (undo-tree-id7725 . -4) (undo-tree-id7726 . -5) 13392 (13391 . 13392) (13370 . 13391)) nil (26429 32032 469984 74000) 0 nil])
([nil nil ((13458 . 13465) (13437 . 13458) (#("2." 0 2 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -13437) (undo-tree-id7541 . -2) (undo-tree-id7542 . -2) (undo-tree-id7543 . -2) (undo-tree-id7544 . -2) (undo-tree-id7545 . -2) (undo-tree-id7546 . -2) (undo-tree-id7547 . -2) (undo-tree-id7548 . -2) (undo-tree-id7549 . -2) (undo-tree-id7550 . -2) (undo-tree-id7551 . -2) (undo-tree-id7552 . -2) (undo-tree-id7553 . -2) (undo-tree-id7554 . -2) (undo-tree-id7555 . -2) (undo-tree-id7556 . -2) (undo-tree-id7557 . -2) (undo-tree-id7558 . -2) (undo-tree-id7559 . -2) (undo-tree-id7560 . -2) (undo-tree-id7561 . -2) (undo-tree-id7562 . -2) (undo-tree-id7563 . -2) (undo-tree-id7564 . -2) (undo-tree-id7565 . -2) (undo-tree-id7566 . -2) (undo-tree-id7567 . -2) (undo-tree-id7568 . -2) (undo-tree-id7569 . -2) (undo-tree-id7570 . -2) (undo-tree-id7571 . -2) 13439 (#("1_" 0 2 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -13439) (undo-tree-id7572 . -2) (undo-tree-id7573 . -2) (undo-tree-id7574 . -2) (undo-tree-id7575 . -2) (undo-tree-id7576 . -2) (undo-tree-id7577 . -2) (undo-tree-id7578 . -2) (undo-tree-id7579 . -2) (undo-tree-id7580 . -2) (undo-tree-id7581 . -2) (undo-tree-id7582 . -2) (undo-tree-id7583 . -2) (undo-tree-id7584 . -2) (undo-tree-id7585 . -2) (undo-tree-id7586 . -2) (undo-tree-id7587 . -2) (undo-tree-id7588 . -2) (undo-tree-id7589 . -2) (undo-tree-id7590 . -2) (undo-tree-id7591 . -2) (undo-tree-id7592 . -2) (undo-tree-id7593 . -2) (undo-tree-id7594 . -2) (undo-tree-id7595 . -2) (undo-tree-id7596 . -2) (undo-tree-id7597 . -2) (undo-tree-id7598 . -2) (undo-tree-id7599 . -2) (undo-tree-id7600 . -2) 13441 (#("time_" 0 5 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified nil wrap-prefix "  ")) . -13441) (undo-tree-id7601 . -5) (undo-tree-id7602 . -5) (undo-tree-id7603 . -5) (undo-tree-id7604 . -5) (undo-tree-id7605 . -5) (undo-tree-id7606 . -5) (undo-tree-id7607 . -5) (undo-tree-id7608 . -5) (undo-tree-id7609 . -5) (undo-tree-id7610 . -5) (undo-tree-id7611 . -5) (undo-tree-id7612 . -5) (undo-tree-id7613 . -5) (undo-tree-id7614 . -5) (undo-tree-id7615 . -5) (undo-tree-id7616 . -5) (undo-tree-id7617 . -5) (undo-tree-id7618 . -5) (undo-tree-id7619 . -5) (undo-tree-id7620 . -5) (undo-tree-id7621 . -5) (undo-tree-id7622 . -5) (undo-tree-id7623 . -5) (undo-tree-id7624 . -5) (undo-tree-id7625 . -5) (undo-tree-id7626 . -5) (undo-tree-id7627 . -5) 13446 (#("conditioned_" 0 12 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -13446) (undo-tree-id7628 . -12) (undo-tree-id7629 . -12) (undo-tree-id7630 . -12) (undo-tree-id7631 . -12) (undo-tree-id7632 . -12) (undo-tree-id7633 . -12) (undo-tree-id7634 . -12) (undo-tree-id7635 . -12) (undo-tree-id7636 . -12) (undo-tree-id7637 . -12) (undo-tree-id7638 . -12) (undo-tree-id7639 . -12) (undo-tree-id7640 . -12) (undo-tree-id7641 . -12) (undo-tree-id7642 . -12) (undo-tree-id7643 . -12) (undo-tree-id7644 . -12) (undo-tree-id7645 . -12) (undo-tree-id7646 . -12) (undo-tree-id7647 . -12) (undo-tree-id7648 . -12) (undo-tree-id7649 . -12) (undo-tree-id7650 . -12) (undo-tree-id7651 . -12) (undo-tree-id7652 . -12) 13458 (#("unet_" 0 5 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -13458) (undo-tree-id7653 . -5) (undo-tree-id7654 . -5) (undo-tree-id7655 . -5) (undo-tree-id7656 . -5) (undo-tree-id7657 . -5) (undo-tree-id7658 . -5) (undo-tree-id7659 . -5) (undo-tree-id7660 . -5) (undo-tree-id7661 . -5) (undo-tree-id7662 . -5) (undo-tree-id7663 . -5) (undo-tree-id7664 . -5) (undo-tree-id7665 . -5) (undo-tree-id7666 . -5) (undo-tree-id7667 . -5) (undo-tree-id7668 . -5) (undo-tree-id7669 . -5) (undo-tree-id7670 . -5) (undo-tree-id7671 . -5) (undo-tree-id7672 . -5) (undo-tree-id7673 . -5) (undo-tree-id7674 . -5) (undo-tree-id7675 . -5) 13463 (#("epoch20." 0 8 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -13463) (undo-tree-id7676 . -8) (undo-tree-id7677 . -8) (undo-tree-id7678 . -8) (undo-tree-id7679 . -8) (undo-tree-id7680 . -8) (undo-tree-id7681 . -8) (undo-tree-id7682 . -8) (undo-tree-id7683 . -8) (undo-tree-id7684 . -8) (undo-tree-id7685 . -8) (undo-tree-id7686 . -8) (undo-tree-id7687 . -8) (undo-tree-id7688 . -8) (undo-tree-id7689 . -8) (undo-tree-id7690 . -8) (undo-tree-id7691 . -8) (undo-tree-id7692 . -8) (undo-tree-id7693 . -8) (undo-tree-id7694 . -8) (undo-tree-id7695 . -8) (undo-tree-id7696 . -8) 13471 (#("gif" 0 3 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -13471) (undo-tree-id7697 . -3) (undo-tree-id7698 . -3) (undo-tree-id7699 . -3) (undo-tree-id7700 . -3) (undo-tree-id7701 . -3) (undo-tree-id7702 . -3) (undo-tree-id7703 . -3) (undo-tree-id7704 . -3) (undo-tree-id7705 . -3) (undo-tree-id7706 . -3) (undo-tree-id7707 . -3) (undo-tree-id7708 . -3) (undo-tree-id7709 . -3) (undo-tree-id7710 . -3) (undo-tree-id7711 . -3) (undo-tree-id7712 . -3) (undo-tree-id7713 . -3) (undo-tree-id7714 . -3) (undo-tree-id7715 . -3) 13474) nil (26429 32032 469961 601000) 0 nil])
([nil nil ((13482 . 13495) (#(" " 0 1 (face markdown-header-delimiter-face markdown-heading-1-atx (13471 13483 nil nil nil nil nil nil 13471 13473 13473 13482 13482 13483 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (13471 13483 nil nil nil nil nil nil 13471 13473 13473 13482 13482 13483 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ")) . -13482) (undo-tree-id8337 . -1) (undo-tree-id8338 . -1) (undo-tree-id8339 . -1) (undo-tree-id8340 . -1) (undo-tree-id8341 . -1) (undo-tree-id8342 . -1) (undo-tree-id8343 . -1) (undo-tree-id8344 . -1) (undo-tree-id8345 . -1) (undo-tree-id8346 . -1) (undo-tree-id8347 . -1) (undo-tree-id8348 . -1) (undo-tree-id8349 . -1) 13483 (#("Con" 0 3 (face markdown-header-face-1 markdown-heading-1-atx (13471 13486 nil nil nil nil nil nil 13471 13473 13473 13486 13486 13486 #<buffer 2024-11-19-proj5.markdown>) markdown-heading (13471 13486 nil nil nil nil nil nil 13471 13473 13473 13486 13486 13486 #<buffer 2024-11-19-proj5.markdown>) fontified t wrap-prefix "  ")) . -13483) (undo-tree-id8350 . -3) (undo-tree-id8351 . -1) (undo-tree-id8352 . -2) (undo-tree-id8353 . -1) (undo-tree-id8354 . -3) (undo-tree-id8355 . -2) (undo-tree-id8356 . -3) 13486 (13471 . 13486) (13470 . 13471) (13470 . 13471) (t 26429 32032 493965 540000)) nil (26429 32109 626573 304000) 0 nil])
([nil nil ((13570 . 13571) (13556 . 13570) (#("e" 0 1 (wrap-prefix "  " fontified t)) . -13556) (undo-tree-id8294 . -1) (undo-tree-id8295 . -1) (undo-tree-id8296 . -1) (undo-tree-id8297 . -1) (undo-tree-id8298 . -1) (undo-tree-id8299 . -1) (undo-tree-id8300 . -1) (undo-tree-id8301 . -1) (undo-tree-id8302 . -1) (#("m" 0 1 (wrap-prefix "  " fontified t)) . -13557) (undo-tree-id8303 . -1) (undo-tree-id8304 . -1) (undo-tree-id8305 . -1) 13558 (13554 . 13558) (#("i" 0 1 (wrap-prefix "  " fontified t)) . -13554) (undo-tree-id8306 . -1) (undo-tree-id8307 . -1) (undo-tree-id8308 . -1) 13555 (13544 . 13555) (#("ontop " 0 6 (wrap-prefix "  " fontified t)) . -13544) (undo-tree-id8309 . -6) (undo-tree-id8310 . -1) (undo-tree-id8311 . -2) (undo-tree-id8312 . -1) (undo-tree-id8313 . -3) (undo-tree-id8314 . -2) (undo-tree-id8315 . -4) (undo-tree-id8316 . -3) (undo-tree-id8317 . -5) (undo-tree-id8318 . -4) (undo-tree-id8319 . -6) (undo-tree-id8320 . -5) (undo-tree-id8321 . -6) 13550 (13545 . 13550) (13544 . 13545) (13524 . 13545) (13515 . 13524) (#("N" 0 1 (wrap-prefix "  " fontified t)) . -13515) (undo-tree-id8322 . -1) (undo-tree-id8323 . -1) (undo-tree-id8324 . -1) (undo-tree-id8325 . -1) (undo-tree-id8326 . -1) (undo-tree-id8327 . -1) (undo-tree-id8328 . -1) (undo-tree-id8329 . -1) (undo-tree-id8330 . -1) (#("E" 0 1 (wrap-prefix "  " fontified t)) . -13516) (undo-tree-id8331 . -1) (undo-tree-id8332 . -1) (undo-tree-id8333 . -1) 13517 (13497 . 13517) (#("W" 0 1 (wrap-prefix "  " fontified t)) . -13497) (undo-tree-id8334 . -1) (undo-tree-id8335 . -1) (undo-tree-id8336 . -1) 13498 (13497 . 13498) (13496 . 13497) (13495 . 13496) 13494) nil (26429 32109 626558 646000) 0 nil])
([nil nil ((13596 . 13597) (13595 . 13596) (13574 . 13595) (#("T" 0 1 (wrap-prefix "  " fontified t)) . -13574) (undo-tree-id8291 . -1) (undo-tree-id8292 . -1) (undo-tree-id8293 . -1) 13575 (13572 . 13575)) nil (26429 32109 626530 823000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13597 . 13598) (#("
" 0 1 (fontified nil wrap-prefix "  ")) . -13660) (13597 . 13661)) nil (26429 32109 626524 722000) 0 nil])
([nil nil ((13634 . 13639) (#("t" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -13634) (undo-tree-id8251 . -1) (undo-tree-id8252 . -1) (undo-tree-id8253 . -1) (undo-tree-id8254 . -1) (undo-tree-id8255 . -1) (undo-tree-id8256 . -1) (undo-tree-id8257 . -1) (undo-tree-id8258 . -1) (undo-tree-id8259 . -1) (undo-tree-id8260 . -1) (undo-tree-id8261 . -1) (undo-tree-id8262 . -1) (undo-tree-id8263 . -1) (#("i" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -13635) (undo-tree-id8264 . -1) (undo-tree-id8265 . -1) (undo-tree-id8266 . -1) (undo-tree-id8267 . -1) (undo-tree-id8268 . -1) (undo-tree-id8269 . -1) (undo-tree-id8270 . -1) (undo-tree-id8271 . -1) (undo-tree-id8272 . -1) (undo-tree-id8273 . -1) (undo-tree-id8274 . -1) (#("m" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -13636) (undo-tree-id8275 . -1) (undo-tree-id8276 . -1) (undo-tree-id8277 . -1) (undo-tree-id8278 . -1) (undo-tree-id8279 . -1) (undo-tree-id8280 . -1) (undo-tree-id8281 . -1) (undo-tree-id8282 . -1) (undo-tree-id8283 . -1) (#("e" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -13637) (undo-tree-id8284 . -1) (undo-tree-id8285 . -1) (undo-tree-id8286 . -1) (undo-tree-id8287 . -1) (undo-tree-id8288 . -1) (undo-tree-id8289 . -1) (undo-tree-id8290 . -1) 13638) nil (26429 32109 626522 908000) 0 nil])
([nil nil ((13662 . 13663) (13662 . 13663)) nil (26429 32109 626498 432000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14189 . 14190) (nil fontified nil 13663 . 14190) (13663 . 14190)) nil (26429 32109 626497 110000) 0 nil])
([nil nil ((13701 . 13705) (13700 . 13701) (#("time" 0 4 (wrap-prefix "  " fontified t)) . 13700) (undo-tree-id8249 . -4) (undo-tree-id8250 . -4)) nil (26429 32109 626491 759000) 0 nil])
([nil nil ((14091 . 14096) (#("time" 0 4 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . 14091) (undo-tree-id8371 . -3) (undo-tree-id8372 . -3) (undo-tree-id8373 . -3) (undo-tree-id8374 . -3) (undo-tree-id8375 . -3) 14094 (t 26429 32109 657132 537000)) nil (26429 32118 371512 286000) 0 nil])
([nil nil ((14159 . 14164) (#("time" 0 4 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -14159) (undo-tree-id8357 . -4) (undo-tree-id8358 . -4) (undo-tree-id8359 . -4) (undo-tree-id8360 . -4) (undo-tree-id8361 . -4) (undo-tree-id8362 . -4) (undo-tree-id8363 . -4) (undo-tree-id8364 . -4) (undo-tree-id8365 . -4) (undo-tree-id8366 . -4) (undo-tree-id8367 . -4) (undo-tree-id8368 . -4) (undo-tree-id8369 . -4) (undo-tree-id8370 . -4) 14163) nil (26429 32118 371504 641000) 0 nil])
([nil nil ((14109 . 14120) (#("epoch5" 0 6 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . 14109) (undo-tree-id8384 . -4) (undo-tree-id8385 . -1) (undo-tree-id8386 . -2) (undo-tree-id8387 . -1) (undo-tree-id8388 . -3) (undo-tree-id8389 . -2) (undo-tree-id8390 . -4) (undo-tree-id8391 . -3) (undo-tree-id8392 . -4) (undo-tree-id8393 . -4) (undo-tree-id8394 . -4) 14113 (t 26429 32118 392264 644000)) nil (26429 37304 990841 694000) 0 nil])
([nil nil ((#("_" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -14181) (undo-tree-id8381 . -1) (undo-tree-id8382 . -1) (undo-tree-id8383 . -1) 14182 (14181 . 14182)) nil (26429 37304 990834 690000) 0 nil])
([nil nil ((14184 . 14194) (#("s" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -14184) (undo-tree-id8376 . -1) (undo-tree-id8377 . -1) (undo-tree-id8378 . -1) 14185 (14182 . 14185) (#("epoch20" 0 7 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . 14182) (undo-tree-id8379 . -7) (undo-tree-id8380 . -7)) nil (26429 37304 990827 26000) 0 nil])
([nil nil ((#("." 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -14120) (undo-tree-id8414 . -1) (undo-tree-id8415 . -1) (undo-tree-id8416 . -1) (undo-tree-id8417 . -1) (undo-tree-id8418 . -1) (undo-tree-id8419 . -1) (undo-tree-id8420 . -1) (undo-tree-id8421 . -1) (undo-tree-id8422 . -1) (undo-tree-id8423 . -1) (undo-tree-id8424 . -1) (undo-tree-id8425 . -1) (undo-tree-id8426 . -1) (undo-tree-id8427 . -1) 14121 (#("png" 0 3 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . 14121) (undo-tree-id8428 . -3) (undo-tree-id8429 . -3) (t 26429 37305 20187 782000)) nil (26429 37325 828071 422000) 0 nil])
([nil nil ((#("." 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -14190) (undo-tree-id8395 . -1) (undo-tree-id8396 . -1) (undo-tree-id8397 . -1) (undo-tree-id8398 . -1) (undo-tree-id8399 . -1) (undo-tree-id8400 . -1) (undo-tree-id8401 . -1) (undo-tree-id8402 . -1) (undo-tree-id8403 . -1) (undo-tree-id8404 . -1) (undo-tree-id8405 . -1) (undo-tree-id8406 . -1) (undo-tree-id8407 . -1) (undo-tree-id8408 . -1) (undo-tree-id8409 . -1) 14191 (#("png" 0 3 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . 14191) (undo-tree-id8410 . -3) (undo-tree-id8411 . -3) (undo-tree-id8412 . -3) (undo-tree-id8413 . -3)) nil (26429 37325 828054 470000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14193 . 14194) (#("
" 0 1 (fontified nil wrap-prefix "  " face (markdown-table-face) font-lock-multiline t)) . -14334) (14193 . 14335) 14189 (t 26429 37325 850500 665000)) nil (26429 37352 153633 55000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14334 . 14335) (#("
" 0 1 (fontified nil wrap-prefix "  " face (markdown-table-face) font-lock-multiline t)) . -14475) (14334 . 14476) 14194) nil (26429 37352 153632 274000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14475 . 14476) (#("
" 0 1 (fontified nil wrap-prefix "  " face (markdown-table-face) font-lock-multiline t)) . -14616) (14475 . 14617) 14335) nil (26429 37352 153631 683000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14616 . 14617) (#("
" 0 1 (fontified nil wrap-prefix "  " face (markdown-table-face) font-lock-multiline t)) . -14757) (14616 . 14758) 14476) nil (26429 37352 153630 641000) 0 nil])
([nil nil ((14260 . 14261) (#("1" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -14260) (undo-tree-id8467 . -1) (undo-tree-id8468 . -1) (undo-tree-id8469 . -1) (undo-tree-id8470 . -1) (undo-tree-id8471 . -1) (undo-tree-id8472 . -1) (undo-tree-id8473 . -1) 14261) nil (26429 37352 153629 629000) 0 nil])
([nil nil ((14401 . 14402) (#("1" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -14401) (undo-tree-id8462 . -1) (undo-tree-id8463 . -1) (undo-tree-id8464 . -1) (undo-tree-id8465 . -1) (undo-tree-id8466 . -1) 14402) nil (26429 37352 153625 912000) 0 nil])
([nil nil ((14542 . 14543) (#("1" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -14542) (undo-tree-id8457 . -1) (undo-tree-id8458 . -1) (undo-tree-id8459 . -1) (undo-tree-id8460 . -1) (undo-tree-id8461 . -1) 14543) nil (26429 37352 153622 115000) 0 nil])
([nil nil ((14683 . 14684) (#("1" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -14683) (undo-tree-id8452 . -1) (undo-tree-id8453 . -1) (undo-tree-id8454 . -1) (undo-tree-id8455 . -1) (undo-tree-id8456 . -1) 14684) nil (26429 37352 153617 285000) 0 nil])
([nil nil ((14330 . 14331) (#("1" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -14330) (undo-tree-id8445 . -1) (undo-tree-id8446 . -1) (undo-tree-id8447 . -1) (undo-tree-id8448 . -1) (undo-tree-id8449 . -1) (undo-tree-id8450 . -1) (undo-tree-id8451 . -1) 14331) nil (26429 37352 153613 939000) 0 nil])
([nil nil ((14471 . 14472) (#("1" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -14471) (undo-tree-id8440 . -1) (undo-tree-id8441 . -1) (undo-tree-id8442 . -1) (undo-tree-id8443 . -1) (undo-tree-id8444 . -1) 14472) nil (26429 37352 153608 880000) 0 nil])
([nil nil ((14612 . 14613) (#("1" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -14612) (undo-tree-id8435 . -1) (undo-tree-id8436 . -1) (undo-tree-id8437 . -1) (undo-tree-id8438 . -1) (undo-tree-id8439 . -1) 14613) nil (26429 37352 153600 3000) 0 nil])
([nil current ((14753 . 14754) (#("1" 0 1 (font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) face (markdown-url-face markdown-table-face) fontified t wrap-prefix "  ")) . -14753) (undo-tree-id8430 . -1) (undo-tree-id8431 . -1) (undo-tree-id8432 . -1) (undo-tree-id8433 . -1) (undo-tree-id8434 . -1) 14754) nil (26429 37352 153592 28000) 0 nil])
nil
