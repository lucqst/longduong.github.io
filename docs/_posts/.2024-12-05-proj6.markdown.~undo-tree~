(undo-tree-save-format-version . 1)
"6fd5f0f9bc3aa06eaa122867398dcc3721c56115"
[nil nil nil nil (26450 6877 591456 17000) 0 nil]
([nil nil ((nil rear-nonsticky nil 202 . 203) (nil fontified nil 1 . 203) (1 . 203) (t . -1)) nil (26450 6877 591450 216000) 0 nil])
([nil nil ((35 . 36) (#("5" 0 1 (wrap-prefix "  " face markdown-metadata-value-face markdown-metadata-value (18 57 18 23 23 26 26 57 #<buffer 2024-12-05-proj6.markdown>) markdown-yaml-metadata-section (5 118) fontified t)) . -35) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) 36 (t 26450 6877 596919 693000)) nil (26450 6905 812162 85000) 0 nil])
([nil nil ((#("Fun with Diffusion" 0 18 (face markdown-metadata-value-face markdown-metadata-value (18 57 18 23 23 26 26 57 #<buffer 2024-12-05-proj6.markdown>) markdown-yaml-metadata-section (5 118) wrap-prefix "  " fontified t)) . 38) (undo-tree-id3 . -17) (undo-tree-id4 . -17) (undo-tree-id5 . -18) (undo-tree-id6 . -9) (undo-tree-id7 . -18) (undo-tree-id8 . -4) (undo-tree-id9 . -9) (undo-tree-id10 . -4) (undo-tree-id11 . -17) (undo-tree-id12 . -4) (undo-tree-id13 . -9) (undo-tree-id14 . -4) (undo-tree-id15 . -18) (undo-tree-id16 . -9) (undo-tree-id17 . -18) (undo-tree-id18 . -18) (undo-tree-id19 . -17) (undo-tree-id20 . -18) (undo-tree-id21 . -17) (undo-tree-id22 . -17) (undo-tree-id23 . -17) (undo-tree-id24 . -17) (undo-tree-id25 . -17) 55) nil (26450 6905 812155 332000) 0 nil])
([nil nil ((49 . 59) (#("e" 0 1 (face markdown-metadata-value-face markdown-metadata-value (18 51 18 23 23 26 26 51 #<buffer 2024-12-05-proj6.markdown>) markdown-yaml-metadata-section (5 112) wrap-prefix "  " fontified t)) . -49) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) 50 (38 . 50)) nil (26450 6905 812132 689000) 0 nil])
([nil nil ((241 . 249) (234 . 241) (213 . 234) (#("2" 0 1 (face markdown-header-face-1 markdown-heading-1-atx (206 214 nil nil nil nil nil nil 206 208 208 214 214 214 #<buffer 2024-12-05-proj6.markdown>) markdown-heading (206 214 nil nil nil nil nil nil 206 208 208 214 214 214 #<buffer 2024-12-05-proj6.markdown>) wrap-prefix "  " fontified t)) . -213) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) 214 (207 . 214) (#("#" 0 1 (wrap-prefix "  " fontified t)) . -207) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) 208 (206 . 208) (205 . 206) (t 26450 6905 821269 725000) 205) nil (26450 7097 834964 135000) 0 nil])
([nil nil ((250 . 251) (249 . 250) 248) nil (26450 7097 834958 3000) 0 nil])
([nil nil ((251 . 252)) nil (26450 7097 834957 1000) 0 nil])
([nil nil ((#("i" 0 1 (wrap-prefix "  " fontified t)) . -251) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) 252) nil (26450 7097 834952 392000) 0 nil])
([nil nil ((431 . 446) (424 . 431) (411 . 424) (390 . 411) (369 . 390) (#("c" 0 1 (wrap-prefix "  " fontified t)) . -369) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) 370 (359 . 370) (347 . 359) (#("b" 0 1 (wrap-prefix "  " fontified t)) . -347) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (#("v" 0 1 (wrap-prefix "  " fontified t)) . -348) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) 349 (348 . 349) (#("a" 0 1 (wrap-prefix "  " fontified t)) . -348) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) 349 (343 . 349) (#("rgb" 0 3 (wrap-prefix "  " fontified t)) . -343) (undo-tree-id321 . -3) (undo-tree-id322 . -1) (undo-tree-id323 . -2) (undo-tree-id324 . -1) (undo-tree-id325 . -3) (undo-tree-id326 . -2) (undo-tree-id327 . -3) (undo-tree-id328 . -3) (undo-tree-id329 . -3) (undo-tree-id330 . -3) (undo-tree-id331 . -3) 346 (#(" " 0 1 (wrap-prefix "  " fontified t)) . -346) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) 347 (342 . 347) (321 . 342) (#(" " 0 1 (wrap-prefix "  " fontified t)) . -321) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) 322 (320 . 322) (299 . 320) (278 . 299) (272 . 278) (251 . 272) (#("First," 0 6 (wrap-prefix "  " fontified t)) . -251) (undo-tree-id339 . -6) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -2) (undo-tree-id343 . -1) (undo-tree-id344 . -3) (undo-tree-id345 . -2) (undo-tree-id346 . -4) (undo-tree-id347 . -3) (undo-tree-id348 . -5) (undo-tree-id349 . -4) (undo-tree-id350 . -5) (undo-tree-id351 . -5) (undo-tree-id352 . -5) (undo-tree-id353 . -5) (undo-tree-id354 . -6) (undo-tree-id355 . -5) (undo-tree-id356 . -6) (undo-tree-id357 . -6) (undo-tree-id358 . -6) (undo-tree-id359 . -6) (undo-tree-id360 . -6) (undo-tree-id361 . -6) (undo-tree-id362 . -6) (undo-tree-id363 . -6) (undo-tree-id364 . -6) (undo-tree-id365 . -6) (undo-tree-id366 . -6) (undo-tree-id367 . -6) (undo-tree-id368 . -6) (undo-tree-id369 . -6) (undo-tree-id370 . -6) (undo-tree-id371 . -6) (undo-tree-id372 . -6) (undo-tree-id373 . -6) (undo-tree-id374 . -6) 257 (#(" " 0 1 (wrap-prefix "  " fontified t)) . -257) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) 258 (#("we" 0 2 (wrap-prefix "  " fontified t)) . -258) (undo-tree-id393 . -2) (undo-tree-id394 . -1) (undo-tree-id395 . -2) (undo-tree-id396 . -1) (undo-tree-id397 . -2) (undo-tree-id398 . -2) (undo-tree-id399 . -2) (undo-tree-id400 . -2) (undo-tree-id401 . -2) (undo-tree-id402 . -2) (undo-tree-id403 . -2) (undo-tree-id404 . -2) (undo-tree-id405 . -2) 260 (#(" " 0 1 (wrap-prefix "  " fontified t)) . -260) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (#("a" 0 1 (wrap-prefix "  " fontified t)) . -261) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) 262 (256 . 262) (#(" " 0 1 (wrap-prefix "  " fontified t)) . -256) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) 257 (251 . 257) (t 26450 7097 850651 220000)) nil (26450 7409 138327 14000) 0 nil])
([nil nil ((383 . 396) (372 . 383) (#("create " 0 7 (wrap-prefix "  " fontified t)) . -372) (undo-tree-id212 . -7) (undo-tree-id213 . -1) (undo-tree-id214 . -2) (undo-tree-id215 . -1) (undo-tree-id216 . -3) (undo-tree-id217 . -2) (undo-tree-id218 . -4) (undo-tree-id219 . -3) (undo-tree-id220 . -5) (undo-tree-id221 . -4) (undo-tree-id222 . -6) (undo-tree-id223 . -5) (undo-tree-id224 . -7) (undo-tree-id225 . -6) (undo-tree-id226 . -7) (undo-tree-id227 . -7) (undo-tree-id228 . -7) (undo-tree-id229 . -7) (undo-tree-id230 . -7) (undo-tree-id231 . -7) (undo-tree-id232 . -7) (undo-tree-id233 . -7) (undo-tree-id234 . -7) (undo-tree-id235 . -7) (undo-tree-id236 . -7) (undo-tree-id237 . -7) (undo-tree-id238 . -7) (undo-tree-id239 . -7) (undo-tree-id240 . -7) (undo-tree-id241 . -7) (undo-tree-id242 . -7) (undo-tree-id243 . -7) (undo-tree-id244 . -7) (undo-tree-id245 . -7) (undo-tree-id246 . -7) (undo-tree-id247 . -7) (undo-tree-id248 . -7) (undo-tree-id249 . -7) (undo-tree-id250 . -7) (undo-tree-id251 . -7) (undo-tree-id252 . -7) 379 (#("a" 0 1 (wrap-prefix "  " fontified t)) . -379) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (#(" " 0 1 (wrap-prefix "  " fontified t)) . -380) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) 381 (#("map" 0 3 (wrap-prefix "  " fontified t)) . 381) (undo-tree-id295 . -1) (undo-tree-id296 . -2) (undo-tree-id297 . -1) (undo-tree-id298 . -3) (undo-tree-id299 . -2) (undo-tree-id300 . -3)) nil (26450 7409 138234 68000) 0 nil])
([nil nil ((#(" " 0 1 (wrap-prefix "  " fontified t)) . -396) (undo-tree-id166 . 1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) 397 (#("between" 0 7 (wrap-prefix "  " fontified t)) . 397) (undo-tree-id196 . -1) (undo-tree-id197 . -2) (undo-tree-id198 . -1) (undo-tree-id199 . -3) (undo-tree-id200 . -2) (undo-tree-id201 . -4) (undo-tree-id202 . -3) (undo-tree-id203 . -4) (undo-tree-id204 . -4) (undo-tree-id205 . -5) (undo-tree-id206 . -4) (undo-tree-id207 . -6) (undo-tree-id208 . -5) (undo-tree-id209 . -7) (undo-tree-id210 . -6) (undo-tree-id211 . -7)) nil (26450 7409 138175 357000) 0 nil])
([nil nil ((513 . 515) (508 . 513) (487 . 508) (466 . 487) (452 . 466) (451 . 452) (450 . 451) 395) nil (26450 7409 138136 654000) 0 nil])
([nil nil ((nil rear-nonsticky nil 567 . 568) (nil fontified nil 515 . 568) (515 . 568)) nil (26450 7409 138134 650000) 0 nil])
([nil nil ((558 . 562) (#("," 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) wrap-prefix "  " fontified t)) . -558) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (#("." 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) wrap-prefix "  " fontified t)) . -559) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) 560 (556 . 560) (#("i" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) wrap-prefix "  " fontified t)) . -556) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (#("x" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) wrap-prefix "  " fontified t)) . -557) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (#("." 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) wrap-prefix "  " fontified t)) . -558) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) 559 (549 . 559) (#("5" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) wrap-prefix "  " fontified t)) . -549) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (#("/" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) wrap-prefix "  " fontified t)) . -550) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) 551 (#("1." 0 2 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) wrap-prefix "  " fontified t)) . -551) (undo-tree-id114 . -2) (undo-tree-id115 . -2) (undo-tree-id116 . -2) (undo-tree-id117 . -2) (undo-tree-id118 . -2) (undo-tree-id119 . -2) (undo-tree-id120 . -2) (undo-tree-id121 . -2) (undo-tree-id122 . -2) (undo-tree-id123 . -2) (undo-tree-id124 . -2) (undo-tree-id125 . -2) (undo-tree-id126 . -2) (undo-tree-id127 . -2) (undo-tree-id128 . -2) (undo-tree-id129 . -2) 553 (#("1_" 0 2 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) wrap-prefix "  " fontified t)) . -553) (undo-tree-id130 . -2) (undo-tree-id131 . -2) (undo-tree-id132 . -2) (undo-tree-id133 . -2) (undo-tree-id134 . -2) (undo-tree-id135 . -2) (undo-tree-id136 . -2) (undo-tree-id137 . -2) (undo-tree-id138 . -2) (undo-tree-id139 . -2) (undo-tree-id140 . -2) (undo-tree-id141 . -2) (undo-tree-id142 . -2) (undo-tree-id143 . -2) 555 (#("noise250." 0 9 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) wrap-prefix "  " fontified t)) . -555) (undo-tree-id144 . -9) (undo-tree-id145 . -9) (undo-tree-id146 . -9) (undo-tree-id147 . -9) (undo-tree-id148 . -9) (undo-tree-id149 . -9) (undo-tree-id150 . -9) (undo-tree-id151 . -9) (undo-tree-id152 . -9) (undo-tree-id153 . -9) (undo-tree-id154 . -9) (undo-tree-id155 . -9) 564 (#("png" 0 3 (wrap-prefix "  " face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t)) . -564) (undo-tree-id156 . -3) (undo-tree-id157 . -3) (undo-tree-id158 . -3) (undo-tree-id159 . -3) (undo-tree-id160 . -3) (undo-tree-id161 . -3) (undo-tree-id162 . -3) (undo-tree-id163 . -3) (undo-tree-id164 . -3) (undo-tree-id165 . -3) 567) nil (26450 7409 138120 202000) 0 nil])
([nil nil ((545 . 555) (#("projfinal/" 0 10 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) wrap-prefix "  " fontified t)) . -545) (undo-tree-id419 . -4) (undo-tree-id420 . -10) (undo-tree-id421 . -4) (undo-tree-id422 . -4) (undo-tree-id423 . -4) (undo-tree-id424 . -4) (undo-tree-id425 . -4) (undo-tree-id426 . -4) (undo-tree-id427 . -4) (undo-tree-id428 . -4) (undo-tree-id429 . -4) (undo-tree-id430 . -4) (undo-tree-id431 . -4) (undo-tree-id432 . -4) (undo-tree-id433 . -4) (undo-tree-id434 . -4) (undo-tree-id435 . -4) (undo-tree-id436 . -4) (undo-tree-id437 . -4) (undo-tree-id438 . -10) (undo-tree-id439 . -10) (undo-tree-id440 . -10) (undo-tree-id441 . -10) (undo-tree-id442 . -10) (undo-tree-id443 . -10) 555 (t 26450 7409 150511 799000)) nil (26450 7440 185751 418000) 0 nil])
([nil nil ((750 . 752) (731 . 750) (#("coordinate " 0 11 (wrap-prefix "  " fontified t)) . -731) (undo-tree-id946 . -11) (undo-tree-id947 . -1) (undo-tree-id948 . -2) (undo-tree-id949 . -1) (undo-tree-id950 . -3) (undo-tree-id951 . -2) (undo-tree-id952 . -4) (undo-tree-id953 . -3) (undo-tree-id954 . -5) (undo-tree-id955 . -4) (undo-tree-id956 . -6) (undo-tree-id957 . -5) (undo-tree-id958 . -7) (undo-tree-id959 . -6) (undo-tree-id960 . -8) (undo-tree-id961 . -7) (undo-tree-id962 . -9) (undo-tree-id963 . -8) (undo-tree-id964 . -10) (undo-tree-id965 . -9) (undo-tree-id966 . -11) (undo-tree-id967 . -10) (undo-tree-id968 . -11) 742 (724 . 742) (703 . 724) (682 . 703) (#("each " 0 5 (wrap-prefix "  " fontified t)) . -682) (undo-tree-id969 . -5) (undo-tree-id970 . -1) (undo-tree-id971 . -2) (undo-tree-id972 . -1) (undo-tree-id973 . -3) (undo-tree-id974 . -2) (undo-tree-id975 . -4) (undo-tree-id976 . -3) (undo-tree-id977 . -5) (undo-tree-id978 . -4) (undo-tree-id979 . -5) 687 (667 . 687) (#("Each" 0 4 (wrap-prefix "  " fontified t)) . -667) (undo-tree-id980 . -4) (undo-tree-id981 . -1) (undo-tree-id982 . -2) (undo-tree-id983 . -1) (undo-tree-id984 . -3) (undo-tree-id985 . -2) (undo-tree-id986 . -4) (undo-tree-id987 . -3) (undo-tree-id988 . -4) (undo-tree-id989 . -4) (undo-tree-id990 . -4) (undo-tree-id991 . -4) (undo-tree-id992 . -4) 671 (#(" " 0 1 (wrap-prefix "  " fontified t)) . -671) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) 672 (655 . 672) (654 . 655) (633 . 654) (#("posi" 0 4 (wrap-prefix "  " fontified t)) . -633) (undo-tree-id997 . -4) (undo-tree-id998 . -1) (undo-tree-id999 . -2) (undo-tree-id1000 . -1) (undo-tree-id1001 . -3) (undo-tree-id1002 . -2) (undo-tree-id1003 . -4) (undo-tree-id1004 . -3) (undo-tree-id1005 . -4) (undo-tree-id1006 . -4) (undo-tree-id1007 . -4) 637 (632 . 637) (611 . 632) (#("y" 0 1 (wrap-prefix "  " fontified t)) . -611) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) 612 (596 . 612) (586 . 596) (565 . 586) (564 . 565) (#("o" 0 1 (wrap-prefix "  " fontified t)) . -564) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) 565 (564 . 565) (563 . 564) (t 26450 7418 711630 369000) 554) nil (26450 7550 350462 878000) 0 nil] [nil nil ((607 . 608) (565 . 566) 606 (603 . 606) (#("r" 0 1 (wrap-prefix "  " fontified t)) . -603) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) 604 (603 . 604) (582 . 603) (568 . 582) (#("m" 0 1 (wrap-prefix "  " fontified t)) . -568) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (#("a" 0 1 (wrap-prefix "  " fontified t)) . -569) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) 570 (568 . 570) (#("encourage " 0 10 (wrap-prefix "  " fontified t)) . -568) (undo-tree-id457 . -10) (undo-tree-id458 . -1) (undo-tree-id459 . -2) (undo-tree-id460 . -1) (undo-tree-id461 . -3) (undo-tree-id462 . -2) (undo-tree-id463 . -4) (undo-tree-id464 . -3) (undo-tree-id465 . -5) (undo-tree-id466 . -4) (undo-tree-id467 . -6) (undo-tree-id468 . -5) (undo-tree-id469 . -7) (undo-tree-id470 . -6) (undo-tree-id471 . -8) (undo-tree-id472 . -7) (undo-tree-id473 . -9) (undo-tree-id474 . -8) (undo-tree-id475 . -10) (undo-tree-id476 . -9) (undo-tree-id477 . -10) (undo-tree-id478 . -10) (undo-tree-id479 . -10) (undo-tree-id480 . -10) (undo-tree-id481 . -10) (undo-tree-id482 . -10) (undo-tree-id483 . -10) (undo-tree-id484 . -10) (undo-tree-id485 . -10) (undo-tree-id486 . -10) (undo-tree-id487 . -10) (undo-tree-id488 . -10) (undo-tree-id489 . -10) 578 (568 . 578) (565 . 568) (564 . 565) (563 . 564) (t 26450 7418 711630 369000) 554) ((#("
" 0 1 (wrap-prefix "  " fontified t)) . 563) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (#("
" 0 1 (wrap-prefix "  " fontified t)) . 564) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (#("To " 0 3 (face markdown-pre-face markdown-pre (565 608) wrap-prefix "      " fontified nil)) . 565) (undo-tree-id575 . -3) (undo-tree-id576 . -3) (undo-tree-id577 . -3) (undo-tree-id578 . -3) (undo-tree-id579 . -3) (undo-tree-id580 . -3) (undo-tree-id581 . -3) (undo-tree-id582 . -3) (undo-tree-id583 . -3) (undo-tree-id584 . -3) (undo-tree-id585 . -3) (undo-tree-id586 . -3) (undo-tree-id587 . -3) (undo-tree-id588 . -3) (undo-tree-id589 . -3) (undo-tree-id590 . -3) (undo-tree-id591 . -3) (undo-tree-id592 . -3) (undo-tree-id593 . -3) (undo-tree-id594 . -3) (undo-tree-id595 . -3) (undo-tree-id596 . -3) (undo-tree-id597 . -3) (undo-tree-id598 . -3) (undo-tree-id599 . -3) (undo-tree-id600 . -3) (undo-tree-id601 . -3) (undo-tree-id602 . -3) (undo-tree-id603 . -3) (undo-tree-id604 . -3) (undo-tree-id605 . -3) (undo-tree-id606 . -3) (undo-tree-id607 . -3) (undo-tree-id608 . -3) (undo-tree-id609 . -3) (undo-tree-id610 . -3) (undo-tree-id611 . -3) (undo-tree-id612 . -3) (undo-tree-id613 . -3) (undo-tree-id614 . -3) (undo-tree-id615 . -3) (#("encourage " 0 10 (wrap-prefix "  " fontified nil)) . 568) (undo-tree-id616 . -10) (undo-tree-id617 . -1) (undo-tree-id618 . -2) (undo-tree-id619 . -1) (undo-tree-id620 . -3) (undo-tree-id621 . -2) (undo-tree-id622 . -4) (undo-tree-id623 . -3) (undo-tree-id624 . -5) (undo-tree-id625 . -4) (undo-tree-id626 . -6) (undo-tree-id627 . -5) (undo-tree-id628 . -7) (undo-tree-id629 . -6) (undo-tree-id630 . -8) (undo-tree-id631 . -7) (undo-tree-id632 . -9) (undo-tree-id633 . -8) (undo-tree-id634 . -10) (undo-tree-id635 . -9) (undo-tree-id636 . -10) (undo-tree-id637 . -10) (undo-tree-id638 . -10) (undo-tree-id639 . -10) (undo-tree-id640 . -10) (undo-tree-id641 . -10) (undo-tree-id642 . -10) (undo-tree-id643 . -10) (undo-tree-id644 . -10) (undo-tree-id645 . -10) (undo-tree-id646 . -10) (undo-tree-id647 . -10) (568 . 578) (#("ma" 0 1 (wrap-prefix "  " fontified nil) 1 2 (wrap-prefix "  " fontified nil)) . 568) (undo-tree-id648 . -2) (undo-tree-id649 . -1) (undo-tree-id650 . -2) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (568 . 570) (#("enable the net" 0 14 (face markdown-pre-face markdown-pre (565 608) wrap-prefix "      " fontified nil)) . 568) (undo-tree-id654 . -14) (undo-tree-id655 . -14) (undo-tree-id656 . -14) (undo-tree-id657 . -14) (undo-tree-id658 . -14) (#("work to learn higher " 0 21 (face markdown-pre-face markdown-pre (565 608) wrap-prefix "      " fontified nil)) . 582) (undo-tree-id659 . -21) (undo-tree-id660 . -21) (undo-tree-id661 . -21) (undo-tree-id662 . -21) (undo-tree-id663 . -21) (#("r" 0 1 (wrap-prefix "  " fontified nil)) . 603) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (603 . 604) (#("fre" 0 3 (face markdown-pre-face markdown-pre (565 608) wrap-prefix "      " fontified nil)) . 603) (undo-tree-id666 . -3) (undo-tree-id667 . -3) (undo-tree-id668 . -3) (undo-tree-id669 . -3) (#("	" 0 1 (face markdown-pre-face markdown-pre (565 608) wrap-prefix "      " fontified nil)) . 565) (#("q" 0 1 (face markdown-pre-face markdown-pre (565 608) wrap-prefix "      " fontified t)) . 607)) (26450 7440 184397 653000) 0 nil])
([nil nil ((752 . 754)) nil (26450 7550 350279 290000) 0 nil])
nil
([nil nil ((753 . 755)) nil (26450 7550 350278 649000) 0 nil])
([nil nil ((754 . 755)) nil (26450 7550 350278 388000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -758) (758 . 759) (#(")" 0 1 (wrap-prefix "  " fontified nil)) . -758) (758 . 759) (755 . 759) (754 . 755)) nil (26450 7550 350277 627000) 0 nil])
([nil nil ((758 . 759)) nil (26450 7550 350277 56000) 0 nil])
([nil nil ((760 . 763)) nil (26450 7550 350276 575000) 0 nil])
([nil nil ((#("P" 0 1 (wrap-prefix "  " fontified t)) . -755) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (#("E" 0 1 (wrap-prefix "  " fontified t)) . -756) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (#("(" 0 1 (wrap-prefix "  " fontified t)) . -757) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (#("x" 0 1 (wrap-prefix "  " fontified t)) . -758) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (#(")" 0 1 (wrap-prefix "  " fontified t)) . -759) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (#(" " 0 1 (wrap-prefix "  " fontified t)) . -760) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (#("=" 0 1 (wrap-prefix "  " fontified t)) . -761) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) 762) nil (26450 7550 350263 841000) 0 nil])
([nil nil ((nil rear-nonsticky nil 878 . 879) (nil fontified nil 755 . 879) (755 . 879) 754) nil (26450 7550 346635 86000) 0 nil])
([nil nil ((929 . 930) (916 . 929) (895 . 916) (#("$" 0 1 (wrap-prefix "  " fontified t)) . -895) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) 896 (893 . 896) (#("L" 0 1 (wrap-prefix "  " fontified t)) . -893) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (#(" " 0 1 (wrap-prefix "  " fontified t)) . -894) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) 895 (887 . 895) (#("	" 0 1 (wrap-prefix "      " fontified t)) . -887) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) 888 (#("	" 0 1 (wrap-prefix "          " fontified t)) . -888) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) 889 (886 . 889) (883 . 886) (t 26450 7550 367263 120000) 878) nil (26450 7584 595382 230000) 0 nil])
([nil nil ((931 . 932) (930 . 931) 929) nil (26450 7584 595331 13000) 0 nil])
([nil nil ((1020 . 1031) (999 . 1020) (995 . 999) (#("we" 0 2 (wrap-prefix "  " fontified t)) . -995) (undo-tree-id1078 . -2) (undo-tree-id1079 . -1) (undo-tree-id1080 . -2) (undo-tree-id1081 . -1) (undo-tree-id1082 . -2) (undo-tree-id1083 . -2) (undo-tree-id1084 . -2) (undo-tree-id1085 . -2) (undo-tree-id1086 . -2) (undo-tree-id1087 . -2) (undo-tree-id1088 . -2) (undo-tree-id1089 . -2) (undo-tree-id1090 . -2) (undo-tree-id1091 . -2) (undo-tree-id1092 . -2) (undo-tree-id1093 . -2) (undo-tree-id1094 . -2) (undo-tree-id1095 . -2) (undo-tree-id1096 . -2) (undo-tree-id1097 . -2) (undo-tree-id1098 . -2) 997 (#(" " 0 1 (wrap-prefix "  " fontified t)) . -997) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) 998 (#("find" 0 4 (wrap-prefix "  " fontified t)) . -998) (undo-tree-id1115 . -4) (undo-tree-id1116 . -1) (undo-tree-id1117 . -2) (undo-tree-id1118 . -1) (undo-tree-id1119 . -3) (undo-tree-id1120 . -2) (undo-tree-id1121 . -4) (undo-tree-id1122 . -3) (undo-tree-id1123 . -4) (undo-tree-id1124 . -4) (undo-tree-id1125 . -4) 1002 (994 . 1002) (973 . 994) (952 . 973) (932 . 952) (#("With" 0 4 (wrap-prefix "  " fontified t)) . -932) (undo-tree-id1126 . -4) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -2) (undo-tree-id1130 . -1) (undo-tree-id1131 . -3) (undo-tree-id1132 . -2) (undo-tree-id1133 . -4) (undo-tree-id1134 . -3) (undo-tree-id1135 . -4) 936 (932 . 936) (t 26450 7584 610687 794000)) nil (26450 7671 740463 401000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1032 . 1033) (#("
" 0 1 (fontified nil wrap-prefix "  ")) . -1081) (1032 . 1082)) nil (26450 7671 740420 290000) 0 nil])
([nil nil ((1076 . 1081) (#("l" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -1076) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) 1077 (1073 . 1077) (#("fox." 0 4 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -1073) (undo-tree-id1062 . -4) (undo-tree-id1063 . -4) (undo-tree-id1064 . -4) (undo-tree-id1065 . -4) (undo-tree-id1066 . -4) (undo-tree-id1067 . -4) (undo-tree-id1068 . -4) (undo-tree-id1069 . -4) (undo-tree-id1070 . -4) 1077 (#("jpg" 0 3 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -1077) (undo-tree-id1071 . -3) (undo-tree-id1072 . -3) (undo-tree-id1073 . -3) (undo-tree-id1074 . -3) (undo-tree-id1075 . -3) (undo-tree-id1076 . -3) (undo-tree-id1077 . -3) 1080) nil (26450 7671 740418 416000) 0 nil])
([nil nil ((1082 . 1083) 1080) nil (26450 7671 740389 842000) 0 nil])
([nil nil ((1025 . 1034) (t 26450 7671 752768 506000)) nil (26450 7680 347415 289000) 0 nil])
([nil nil ((1092 . 1093) (1091 . 1092) (t 26450 7680 351875 151000) 1090) nil (26450 7711 641063 104000) 0 nil])
([nil nil ((1145 . 1147) (1135 . 1145) (1114 . 1135) (1093 . 1114)) nil (26450 7711 641056 241000) 0 nil])
([nil nil ((1162 . 1164) (1147 . 1162) (t 26450 7711 652263 331000)) nil (26450 7806 778699 373000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1163 . 1164) (#("
" 0 1 (fontified nil wrap-prefix "  ")) . -1213) (1163 . 1214)) nil (26450 7806 778698 1000) 0 nil])
([nil nil ((1208 . 1213) (#("l" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -1208) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (#("o" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -1209) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (#("s" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -1210) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (#("s" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -1211) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) 1212) nil (26450 7806 778694 775000) 0 nil])
([nil nil ((1209 . 1211) (#("1" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -1209) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (#("0" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -1210) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (#("0" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -1211) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (#("2" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -1212) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) 1213 (1212 . 1213) (#(":" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -1212) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) 1213) nil (26450 7806 778669 587000) 0 nil])
([nil nil ((1227 . 1230) (1214 . 1227) (1213 . 1214) 1213) nil (26450 7806 778631 815000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1231 . 1232) (#("
" 0 1 (fontified nil wrap-prefix "  ")) . -1280) (1231 . 1281)) nil (26450 7806 778631 204000) 0 nil])
([nil nil ((1277 . 1280) (#("2" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -1277) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (#("0" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -1278) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) 1279) nil (26450 7806 778630 322000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1281 . 1282) (#("
" 0 1 (fontified nil wrap-prefix "  ")) . -1298) (1281 . 1299) 1247) nil (26450 7806 778622 167000) 0 nil])
([nil nil ((1282 . 1283)) nil (26450 7806 778621 746000) 0 nil])
([nil nil ((1296 . 1297) (#("1" 0 1 (fontified t wrap-prefix "  ")) . -1296) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) 1297) nil (26450 7806 778620 514000) 0 nil])
([nil nil ((1299 . 1300) 1296) nil (26450 7806 778592 962000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1300 . 1301) (#("
" 0 1 (fontified nil wrap-prefix "  ")) . -1350) (1300 . 1351) (t 26450 7806 791442 867000)) nil (26450 7824 362957 526000) 0 nil])
([nil nil ((1346 . 1349) (#("1" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -1346) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (#("0" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -1347) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (#("0" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -1348) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) 1349) nil (26450 7824 362956 525000) 0 nil])
([nil nil ((1368 . 1373) (#(" " 0 1 (wrap-prefix "  " fontified t)) . -1368) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (#("=" 0 1 (wrap-prefix "  " fontified t)) . -1369) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) 1370 (1363 . 1370) (#("r" 0 1 (wrap-prefix "  " fontified t)) . -1363) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) 1364 (1359 . 1364) (#("iteratyion" 0 10 (wrap-prefix "  " fontified t)) . -1359) (undo-tree-id1301 . -10) (undo-tree-id1302 . -1) (undo-tree-id1303 . -2) (undo-tree-id1304 . -1) (undo-tree-id1305 . -3) (undo-tree-id1306 . -2) (undo-tree-id1307 . -4) (undo-tree-id1308 . -3) (undo-tree-id1309 . -5) (undo-tree-id1310 . -4) (undo-tree-id1311 . -6) (undo-tree-id1312 . -5) (undo-tree-id1313 . -7) (undo-tree-id1314 . -6) (undo-tree-id1315 . -8) (undo-tree-id1316 . -7) (undo-tree-id1317 . -9) (undo-tree-id1318 . -8) (undo-tree-id1319 . -10) (undo-tree-id1320 . -9) (undo-tree-id1321 . -10) 1369 (1356 . 1369) (1352 . 1356) (1351 . 1352) (1350 . 1351) 1348) nil (26450 7824 362941 306000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1373 . 1374) (#("
" 0 1 (fontified nil wrap-prefix "  ")) . -1423) (1373 . 1424) 1372) nil (26450 7824 361633 227000) 0 nil])
([nil nil ((1374 . 1375)) nil (26450 7824 361632 536000) 0 nil])
([nil nil ((1420 . 1421)) nil (26450 7824 361631 274000) 0 nil])
([nil nil ((1425 . 1426) 1420) nil (26450 7824 361624 641000) 0 nil])
([nil nil ((975 . 977) (964 . 975) (#("t" 0 1 (wrap-prefix "  " fontified t)) . -964) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) 965 (953 . 965) (932 . 953) (#("The" 0 3 (wrap-prefix "  " fontified t)) . -932) (undo-tree-id1683 . -3) (undo-tree-id1684 . -1) (undo-tree-id1685 . -2) (undo-tree-id1686 . -1) (undo-tree-id1687 . -3) (undo-tree-id1688 . -2) (undo-tree-id1689 . -3) (undo-tree-id1690 . -3) (undo-tree-id1691 . -3) (undo-tree-id1692 . -3) (undo-tree-id1693 . -3) 935 (#(" " 0 1 (wrap-prefix "  " fontified t)) . -935) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) 936 (932 . 936) (931 . 932) (931 . 932) (t 26450 7824 374660 822000)) nil (26450 7952 416147 68000) 0 nil])
([nil nil ((nil rear-nonsticky nil 976 . 977) (#("
" 0 1 (fontified nil wrap-prefix "  ")) . -1026) (976 . 1027)) nil (26450 7952 416136 407000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix "  " fontified t)) . 1027) (undo-tree-id1675 . 1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1)) nil (26450 7952 416135 496000) 0 nil])
([nil nil ((#("e" 0 1 (wrap-prefix "  " fontified t)) . -973) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (#(" " 0 1 (wrap-prefix "  " fontified t)) . -974) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) 975 (#("(" 0 1 (wrap-prefix "  " fontified nil)) . -975) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (#(")" 0 1 (wrap-prefix "  " fontified t)) . 976) (975 . 977) (#("from" 0 4 (wrap-prefix "  " fontified t)) . -975) (undo-tree-id1664 . -4) (undo-tree-id1665 . -1) (undo-tree-id1666 . -2) (undo-tree-id1667 . -1) (undo-tree-id1668 . -3) (undo-tree-id1669 . -2) (undo-tree-id1670 . -4) (undo-tree-id1671 . -3) (undo-tree-id1672 . -4) (undo-tree-id1673 . -4) (undo-tree-id1674 . -4) 979 (974 . 979)) nil (26450 7952 416131 759000) 0 nil])
([nil nil ((#("Our network has the following architectur:
" 0 41 (wrap-prefix "  " fontified t) 41 42 (wrap-prefix "  " fontified t) 42 43 (wrap-prefix "  " fontified t)) . 932) (undo-tree-id1468 . -43) (undo-tree-id1469 . 2) (undo-tree-id1470 . -40) (undo-tree-id1471 . -1) (undo-tree-id1472 . -2) (undo-tree-id1473 . -1) (undo-tree-id1474 . -3) (undo-tree-id1475 . -2) (undo-tree-id1476 . -4) (undo-tree-id1477 . -3) (undo-tree-id1478 . -5) (undo-tree-id1479 . -4) (undo-tree-id1480 . -6) (undo-tree-id1481 . -5) (undo-tree-id1482 . -7) (undo-tree-id1483 . -6) (undo-tree-id1484 . -8) (undo-tree-id1485 . -7) (undo-tree-id1486 . -9) (undo-tree-id1487 . -8) (undo-tree-id1488 . -10) (undo-tree-id1489 . -9) (undo-tree-id1490 . -11) (undo-tree-id1491 . -10) (undo-tree-id1492 . -12) (undo-tree-id1493 . -11) (undo-tree-id1494 . -13) (undo-tree-id1495 . -12) (undo-tree-id1496 . -14) (undo-tree-id1497 . -13) (undo-tree-id1498 . -15) (undo-tree-id1499 . -14) (undo-tree-id1500 . -16) (undo-tree-id1501 . -15) (undo-tree-id1502 . -17) (undo-tree-id1503 . -16) (undo-tree-id1504 . -18) (undo-tree-id1505 . -17) (undo-tree-id1506 . -19) (undo-tree-id1507 . -18) (undo-tree-id1508 . -20) (undo-tree-id1509 . -19) (undo-tree-id1510 . -21) (undo-tree-id1511 . -20) (undo-tree-id1512 . -22) (undo-tree-id1513 . -21) (undo-tree-id1514 . -23) (undo-tree-id1515 . -22) (undo-tree-id1516 . -24) (undo-tree-id1517 . -23) (undo-tree-id1518 . -25) (undo-tree-id1519 . -24) (undo-tree-id1520 . -26) (undo-tree-id1521 . -25) (undo-tree-id1522 . -27) (undo-tree-id1523 . -26) (undo-tree-id1524 . -28) (undo-tree-id1525 . -27) (undo-tree-id1526 . -28) (undo-tree-id1527 . -29) (undo-tree-id1528 . -28) (undo-tree-id1529 . -29) (undo-tree-id1530 . -29) (undo-tree-id1531 . -30) (undo-tree-id1532 . -29) (undo-tree-id1533 . -31) (undo-tree-id1534 . -30) (undo-tree-id1535 . -32) (undo-tree-id1536 . -31) (undo-tree-id1537 . -32) (undo-tree-id1538 . -32) (undo-tree-id1539 . -32) (undo-tree-id1540 . -32) (undo-tree-id1541 . -33) (undo-tree-id1542 . -32) (undo-tree-id1543 . -34) (undo-tree-id1544 . -33) (undo-tree-id1545 . -35) (undo-tree-id1546 . -34) (undo-tree-id1547 . -36) (undo-tree-id1548 . -35) (undo-tree-id1549 . -37) (undo-tree-id1550 . -36) (undo-tree-id1551 . -38) (undo-tree-id1552 . -37) (undo-tree-id1553 . -39) (undo-tree-id1554 . -38) (undo-tree-id1555 . -40) (undo-tree-id1556 . -39) (undo-tree-id1557 . -41) (undo-tree-id1558 . -40) (undo-tree-id1559 . -41) (undo-tree-id1560 . -41) (undo-tree-id1561 . -42) (undo-tree-id1562 . -41) (undo-tree-id1563 . -43) (undo-tree-id1564 . -42) (undo-tree-id1565 . -43) (undo-tree-id1566 . -43) (undo-tree-id1567 . -43) (undo-tree-id1568 . -43) (undo-tree-id1569 . -43) (undo-tree-id1570 . -43) (undo-tree-id1571 . -43) (undo-tree-id1572 . -43) (undo-tree-id1573 . -43) (undo-tree-id1574 . -43) (undo-tree-id1575 . -43) (undo-tree-id1576 . -43) (undo-tree-id1577 . -41) (undo-tree-id1578 . -41) (undo-tree-id1579 . -41) (undo-tree-id1580 . -41) (undo-tree-id1581 . -41) (undo-tree-id1582 . -41) (undo-tree-id1583 . -41) (undo-tree-id1584 . -41) (undo-tree-id1585 . -41) (undo-tree-id1586 . -41) (undo-tree-id1587 . -41) (undo-tree-id1588 . -41) (undo-tree-id1589 . -41) (undo-tree-id1590 . -41) (undo-tree-id1591 . -41) (undo-tree-id1592 . -41) (undo-tree-id1593 . -41) (undo-tree-id1594 . -41) (undo-tree-id1595 . -41) (undo-tree-id1596 . -41) (undo-tree-id1597 . -41) (undo-tree-id1598 . -41) (undo-tree-id1599 . -41) (undo-tree-id1600 . -41) (undo-tree-id1601 . -41) (undo-tree-id1602 . -41) (undo-tree-id1603 . -41) (undo-tree-id1604 . -40) (undo-tree-id1605 . -40) (undo-tree-id1606 . -40) (undo-tree-id1607 . -40) (undo-tree-id1608 . -40) (undo-tree-id1609 . -40) (undo-tree-id1610 . -40) (undo-tree-id1611 . -40) (undo-tree-id1612 . -40) 972) nil (26450 7952 416108 4000) 0 nil])
([nil nil ((969 . 970) (959 . 969) (956 . 959) (#("c" 0 1 (wrap-prefix "  " fontified t)) . -956) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) 957 (953 . 957) (932 . 953) (932 . 933)) nil (26450 7952 402981 275000) 0 nil])
([nil nil ((nil rear-nonsticky nil 970 . 971) (#("
" 0 1 (fontified nil wrap-prefix "  ")) . -1013) (970 . 1014)) nil (26450 7952 402978 269000) 0 nil])
([nil nil ((#("Our network has the following architectur:
" 0 41 (fontified t wrap-prefix "  ") 41 42 (fontified t wrap-prefix "  ") 42 43 (wrap-prefix "  " fontified t)) . 971) (undo-tree-id1462 . -42) (undo-tree-id1463 . -42) (undo-tree-id1464 . 1)) nil (26450 7952 402977 418000) 0 nil])
([nil nil ((nil rear-nonsticky nil 970 . 971) (#("
" 0 1 (fontified nil wrap-prefix "  ")) . -1020) (970 . 1021)) nil (26450 7952 402974 953000) 0 nil])
([nil nil ((#("![dx]({{site.baseurl}}/assets/finalproj/fox_loss)
" 0 1 (face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup fontified t wrap-prefix "  ") 1 2 (face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup fontified t wrap-prefix "  ") 2 4 (fontified t face markdown-link-face help-echo "{{site.baseurl}}/assets/finalproj/fox_loss" font-lock-multiline t mouse-face markdown-highlight-face keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) wrap-prefix "  ") 4 5 (fontified t face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup wrap-prefix "  ") 5 6 (fontified t face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup wrap-prefix "  ") 6 48 (fontified t face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) wrap-prefix "  ") 48 49 (fontified t face markdown-markup-face font-lock-multiline t rear-nonsticky t invisible markdown-markup wrap-prefix "  ") 49 50 (fontified t wrap-prefix "  ")) . 1022) (undo-tree-id1434 . -50) (undo-tree-id1435 . -50) (undo-tree-id1436 . -50) (undo-tree-id1437 . -50) (undo-tree-id1438 . -50) (undo-tree-id1439 . -50) (undo-tree-id1440 . -50) (undo-tree-id1441 . -50) (undo-tree-id1442 . -50) (undo-tree-id1443 . -50) (undo-tree-id1444 . -50) (undo-tree-id1445 . -50) (undo-tree-id1446 . -50) (undo-tree-id1447 . -50) (undo-tree-id1448 . -50) (undo-tree-id1449 . -50) (undo-tree-id1450 . -50) (undo-tree-id1451 . -50) (undo-tree-id1452 . -50) (undo-tree-id1453 . -50) (undo-tree-id1454 . -50) (undo-tree-id1455 . -50) (undo-tree-id1456 . -48) (undo-tree-id1457 . -48) (undo-tree-id1458 . -48) (undo-tree-id1459 . -48) (undo-tree-id1460 . -48) (undo-tree-id1461 . -48)) nil (26450 7952 402973 861000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t wrap-prefix "  ")) . 1022) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1)) nil (26450 7952 402951 519000) 0 nil])
([nil nil ((1011 . 1025) (#("fox_" 0 4 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -1011) (undo-tree-id1349 . -4) (undo-tree-id1350 . -4) (undo-tree-id1351 . -4) (undo-tree-id1352 . -4) (undo-tree-id1353 . -4) (undo-tree-id1354 . -4) (undo-tree-id1355 . -4) (undo-tree-id1356 . -4) (undo-tree-id1357 . -4) (undo-tree-id1358 . -4) (undo-tree-id1359 . -4) (undo-tree-id1360 . -4) (undo-tree-id1361 . -4) (undo-tree-id1362 . -4) (undo-tree-id1363 . -4) (undo-tree-id1364 . -4) (undo-tree-id1365 . -4) (undo-tree-id1366 . -4) (undo-tree-id1367 . -4) (undo-tree-id1368 . -4) (undo-tree-id1369 . -4) (undo-tree-id1370 . -4) (undo-tree-id1371 . -4) (undo-tree-id1372 . -4) (undo-tree-id1373 . -4) (undo-tree-id1374 . -4) (undo-tree-id1375 . -4) (undo-tree-id1376 . -4) (undo-tree-id1377 . -4) (undo-tree-id1378 . -4) (undo-tree-id1379 . -4) (undo-tree-id1380 . -4) (undo-tree-id1381 . -4) (undo-tree-id1382 . -4) (undo-tree-id1383 . -4) 1015 (#("arch_" 0 5 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -1015) (undo-tree-id1384 . -5) (undo-tree-id1385 . -1) (undo-tree-id1386 . -2) (undo-tree-id1387 . -1) (undo-tree-id1388 . -3) (undo-tree-id1389 . -2) (undo-tree-id1390 . -4) (undo-tree-id1391 . -3) (undo-tree-id1392 . -5) (undo-tree-id1393 . -4) (undo-tree-id1394 . -5) (undo-tree-id1395 . -5) (undo-tree-id1396 . -5) (undo-tree-id1397 . -5) (undo-tree-id1398 . -5) (undo-tree-id1399 . -5) (undo-tree-id1400 . -5) (undo-tree-id1401 . -5) (undo-tree-id1402 . -5) (undo-tree-id1403 . -5) (undo-tree-id1404 . -5) (undo-tree-id1405 . -5) (undo-tree-id1406 . -5) (undo-tree-id1407 . -5) (undo-tree-id1408 . -5) 1020 (#("part1" 0 5 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -1020) (undo-tree-id1409 . -5) (undo-tree-id1410 . -1) (undo-tree-id1411 . -2) (undo-tree-id1412 . -1) (undo-tree-id1413 . -3) (undo-tree-id1414 . -2) (undo-tree-id1415 . -4) (undo-tree-id1416 . -3) (undo-tree-id1417 . -5) (undo-tree-id1418 . -4) (undo-tree-id1419 . -5) (undo-tree-id1420 . -5) (undo-tree-id1421 . -5) 1025 (1015 . 1025) (#("loss" 0 4 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -1015) (undo-tree-id1422 . -4) (undo-tree-id1423 . -4) (undo-tree-id1424 . -4) (undo-tree-id1425 . -4) (undo-tree-id1426 . -4) (undo-tree-id1427 . -4) (undo-tree-id1428 . -4) 1019) nil (26450 7952 402942 161000) 0 nil])
([nil nil ((1095 . 1113) (#("e" 0 1 (fontified t wrap-prefix "  ")) . -1095) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (#("t" 0 1 (fontified t wrap-prefix "  ")) . -1096) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) 1097 (1089 . 1097) (t 26450 7952 428248 131000)) nil (26450 8000 498506 40000) 0 nil])
([nil nil ((1034 . 1038) (1028 . 1034) (#("Running" 0 7 (fontified t wrap-prefix "  ")) . 1028)) nil (26450 8000 498487 715000) 0 nil])
([nil nil ((1137 . 1138) (1118 . 1137) (1116 . 1119)) nil (26450 8000 498480 602000) 0 nil])
([nil nil ((1732 . 1734) (1730 . 1732) (1709 . 1730) (#("no" 0 2 (wrap-prefix "  " fontified t)) . -1709) (undo-tree-id1886 . -2) (undo-tree-id1887 . -1) (undo-tree-id1888 . -2) (undo-tree-id1889 . -1) (undo-tree-id1890 . -2) 1711 (1707 . 1711) (1686 . 1707) (1680 . 1686) (#("i" 0 1 (wrap-prefix "  " fontified t)) . -1680) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (#("l" 0 1 (wrap-prefix "  " fontified t)) . -1681) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) 1682 (1674 . 1682) (#("a" 0 1 (wrap-prefix "  " fontified t)) . -1674) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) 1675 (1670 . 1675) (1649 . 1670) (#(" " 0 1 (wrap-prefix "  " fontified t)) . -1649) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) 1650 (1638 . 1650) (1624 . 1638) (1603 . 1624) (#("number " 0 7 (wrap-prefix "  " fontified t)) . -1603) (undo-tree-id1907 . -7) (undo-tree-id1908 . -1) (undo-tree-id1909 . -2) (undo-tree-id1910 . -1) (undo-tree-id1911 . -3) (undo-tree-id1912 . -2) (undo-tree-id1913 . -4) (undo-tree-id1914 . -3) (undo-tree-id1915 . -5) (undo-tree-id1916 . -4) (undo-tree-id1917 . -6) (undo-tree-id1918 . -5) (undo-tree-id1919 . -7) (undo-tree-id1920 . -6) (undo-tree-id1921 . -7) (undo-tree-id1922 . -7) (undo-tree-id1923 . -7) (undo-tree-id1924 . -7) (undo-tree-id1925 . -7) (undo-tree-id1926 . -7) (undo-tree-id1927 . -7) (undo-tree-id1928 . -7) (undo-tree-id1929 . -7) (undo-tree-id1930 . -7) 1610 (#("of " 0 3 (wrap-prefix "  " fontified t)) . -1610) (undo-tree-id1931 . -3) (undo-tree-id1932 . -1) (undo-tree-id1933 . -2) (undo-tree-id1934 . -1) (undo-tree-id1935 . -3) (undo-tree-id1936 . -2) (undo-tree-id1937 . -3) 1613 (1611 . 1613) (1590 . 1611) (1574 . 1590) (#("E" 0 1 (wrap-prefix "  " fontified t)) . -1574) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (#("e" 0 1 (wrap-prefix "  " fontified t)) . -1575) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) 1576 (1573 . 1576) (1572 . 1573) (t 26450 8000 512844 165000) 1572) nil (26450 8681 454163 956000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1734 . 1735) (#("
" 0 1 (fontified nil wrap-prefix "  ")) . -1785) (1734 . 1786)) nil (26450 8681 454127 296000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix "  " fontified t)) . 1734) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1)) nil (26450 8681 454126 224000) 0 nil])
([nil nil ((1779 . 1783) (#("1" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -1779) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (#("5" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -1780) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (#("0" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -1781) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (#("0" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -1782) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) 1783) nil (26450 8681 454123 189000) 0 nil])
([nil nil ((1734 . 1744) (#("L" 0 1 (wrap-prefix "  " fontified t)) . -1734) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) 1735 (1734 . 1735) (1733 . 1734) 1733) nil (26450 8681 454096 398000) 0 nil])
([nil nil ((1743 . 1745) (#("4" 0 1 (wrap-prefix "  " fontified t)) . -1743) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) 1744) nil (26450 8681 454092 621000) 0 nil])
([nil nil ((1809 . 1810) (1798 . 1809) (1797 . 1798) (1796 . 1797) 1756) nil (26450 8681 454084 656000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1810 . 1811) (#("
" 0 1 (fontified nil wrap-prefix "  ")) . -1861) (1810 . 1862)) nil (26450 8681 454082 992000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix "  " fontified t)) . 1810) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1)) nil (26450 8681 454081 690000) 0 nil])
([nil nil ((1854 . 1866) (#("e" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -1854) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (#("3" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -1855) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (#("0" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -1856) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (#("0" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -1857) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (#("0" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -1858) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) 1859) nil (26450 8681 454072 492000) 0 nil])
([nil nil ((1867 . 1868) 1865) nil (26450 8681 447669 312000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t wrap-prefix "  ")) . 1309) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (t 26450 8681 466284 912000)) nil (26450 8712 940509 621000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t wrap-prefix "  ")) . 1376)) nil (26450 8712 940490 755000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t wrap-prefix "  ")) . 1444)) nil (26450 8712 940489 553000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t wrap-prefix "  ")) . 1517)) nil (26450 8712 940482 700000) 0 nil])
([nil nil ((1951 . 1952) (1936 . 1951) (#("i" 0 1 (wrap-prefix "  " fontified t)) . -1936) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (#("a" 0 1 (wrap-prefix "  " fontified t)) . -1937) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) 1938 (1933 . 1938) (#("f" 0 1 (wrap-prefix "  " fontified t)) . -1933) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) 1934 (1929 . 1934) (#("a" 0 1 (wrap-prefix "  " fontified t)) . -1929) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (#(" " 0 1 (wrap-prefix "  " fontified t)) . -1930) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (#("p" 0 1 (wrap-prefix "  " fontified t)) . -1931) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) 1932 (1915 . 1932) (1909 . 1915) (#("mari" 0 4 (wrap-prefix "  " fontified t)) . -1909) (undo-tree-id2014 . -4) (undo-tree-id2015 . -1) (undo-tree-id2016 . -2) (undo-tree-id2017 . -1) (undo-tree-id2018 . -3) (undo-tree-id2019 . -2) (undo-tree-id2020 . -4) (undo-tree-id2021 . -3) (undo-tree-id2022 . -4) 1913 (1892 . 1913) (#("i" 0 1 (wrap-prefix "  " fontified t)) . -1892) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) 1893 (1887 . 1893) (1866 . 1887) (#("T" 0 1 (wrap-prefix "  " fontified t)) . -1866) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) 1867 (1866 . 1867) (1864 . 1866) (1863 . 1864) (t 26450 8712 952675 203000) 1862) nil (26450 8768 618117 628000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1952 . 1953) (#("
" 0 1 (fontified nil wrap-prefix "  ")) . -2003) (1952 . 2004)) nil (26450 8768 618078 685000) 0 nil])
([nil nil ((1953 . 1963)) nil (26450 8768 618077 583000) 0 nil])
([nil nil ((2006 . 2013) (#("a" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -2006) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) 2007 (2005 . 2007) (#("a" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -2005) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) 2006 (2003 . 2006) (#("fox_" 0 4 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -2003) (undo-tree-id1964 . -4) (undo-tree-id1965 . -4) (undo-tree-id1966 . -4) (undo-tree-id1967 . -4) (undo-tree-id1968 . -4) (undo-tree-id1969 . -4) (undo-tree-id1970 . -4) (undo-tree-id1971 . -4) (undo-tree-id1972 . -4) 2007 (#("e1500" 0 5 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -2007) (undo-tree-id1973 . -5) (undo-tree-id1974 . -5) (undo-tree-id1975 . -5) (undo-tree-id1976 . -5) (undo-tree-id1977 . -5) (undo-tree-id1978 . -5) (undo-tree-id1979 . -5) 2012) nil (26450 8768 618070 760000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2014 . 2015) (#("
" 0 1 (fontified nil wrap-prefix "  ")) . -2076) (2014 . 2077) 2012 (t 26450 8768 629365 351000)) nil (26450 8784 145730 991000) 0 nil])
([nil nil ((2015 . 2029) (#("Original" 0 8 (fontified t wrap-prefix "  ")) . 2015)) nil (26450 8784 145729 599000) 0 nil])
([nil nil ((2080 . 2092) (2077 . 2080) (#("." 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -2077) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) 2078 (#("jpg" 0 3 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -2078) (undo-tree-id2055 . -3) (undo-tree-id2056 . -3) (undo-tree-id2057 . -3) (undo-tree-id2058 . -3) (undo-tree-id2059 . -3) (undo-tree-id2060 . -3) (undo-tree-id2061 . -3) 2081) nil (26450 8784 145727 434000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2093 . 2094) (#("
" 0 1 (fontified nil wrap-prefix "  ")) . -2172) (2093 . 2173) 2091) nil (26450 8784 143984 32000) 0 nil])
([nil nil ((2094 . 2098) (#("Reconstruction" 0 14 (fontified t wrap-prefix "  ")) . 2094)) nil (26450 8784 143983 320000) 0 nil])
([nil nil ((2147 . 2151) (#("c" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -2147) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (#("l" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -2148) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) 2149 (2147 . 2149) (#("reconstruction" 0 14 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -2147) (undo-tree-id2039 . -14) (undo-tree-id2040 . -14) (undo-tree-id2041 . -14) (undo-tree-id2042 . -14) (undo-tree-id2043 . -14) (undo-tree-id2044 . -14) (undo-tree-id2045 . -14) 2161) nil (26450 8784 143976 608000) 0 nil])
([nil nil ((2014 . 2015) (t 26450 8784 170556 819000) 2009) nil (26450 8786 468367 17000) 0 nil])
([nil nil ((2095 . 2096)) nil (26450 8786 468345 416000) 0 nil])
([nil nil ((2030 . 2036) (t 26450 8786 471585 90000)) nil (26450 9194 209955 94000) 0 nil])
([nil nil ((2036 . 2040) (#("-" 0 1 (fontified t wrap-prefix "  ")) . -2036) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (#("1" 0 1 (fontified t wrap-prefix "  ")) . -2037) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (#("0" 0 1 (fontified t wrap-prefix "  ")) . -2038) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) 2039 (2036 . 2039)) nil (26450 9194 209952 950000) 0 nil])
([nil nil ((2089 . 2092) (#("r" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -2089) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (#("e" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -2090) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (#("c" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -2091) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (#("o" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -2092) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (#("n" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -2093) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (#("s" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -2094) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (#("t" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -2095) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (#("r" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -2096) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (#("u" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -2097) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (#("c" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -2098) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (#("t" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -2099) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (#("i" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -2100) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (#("o" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -2101) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (#("n" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -2102) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) 2103) nil (26450 9194 209903 346000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2093 . 2094) (#("
" 0 1 (fontified nil wrap-prefix "  ")) . -2171) (2093 . 2172) 2091) nil (26450 9194 209754 964000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2171 . 2172) (#("
" 0 1 (fontified nil wrap-prefix "  ")) . -2249) (2171 . 2250) 2094) nil (26450 9194 209753 472000) 0 nil])
([nil nil ((2093 . 2094) 2016) nil (26450 9194 209752 500000) 0 nil])
([nil nil ((2172 . 2173) 2095) nil (26450 9194 209751 829000) 0 nil])
([nil nil ((2116 . 2117) (#("1" 0 1 (fontified t wrap-prefix "  ")) . -2116) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) 2117) nil (26450 9194 209751 137000) 0 nil])
([nil nil ((2195 . 2196) (#("1" 0 1 (fontified t wrap-prefix "  ")) . -2195) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) 2196) nil (26450 9194 209742 801000) 0 nil])
([nil nil ((2195 . 2197) (#("5" 0 1 (fontified t wrap-prefix "  ")) . -2195) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) 2196) nil (26450 9194 209737 642000) 0 nil])
([nil nil ((2196 . 2197) (#("6" 0 1 (fontified t wrap-prefix "  ")) . -2196) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) 2197) nil (26450 9194 209729 105000) 0 nil])
([nil nil ((2168 . 2169) (#("1" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -2168) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) 2169) nil (26450 9194 209718 145000) 0 nil])
([nil nil ((2249 . 2250)) nil (26450 9194 206095 462000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2253 . 2254) (#("
" 0 1 (fontified nil wrap-prefix "  ")) . -2333) (2253 . 2334) 2249 (t 26450 9194 223594 902000)) nil (26450 9203 52166 240000) 0 nil])
([nil nil ((2254 . 2255)) nil (26450 9203 52165 629000) 0 nil])
([nil nil ((2276 . 2279) (#("1500" 0 4 (fontified t wrap-prefix "  ")) . 2276)) nil (26450 9203 52164 797000) 0 nil])
([nil nil ((2279 . 2280)) nil (26450 9203 52163 836000) 0 nil])
([nil nil ((2329 . 2343) (#("1500" 0 4 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -2329) (undo-tree-id2392 . -4) (undo-tree-id2393 . -4) (undo-tree-id2394 . -4) (undo-tree-id2395 . -4) (undo-tree-id2396 . -4) (undo-tree-id2397 . -4) (undo-tree-id2398 . -4) 2333) nil (26450 9203 52158 656000) 0 nil])
([nil nil ((2407 . 2412) (#("R" 0 1 (wrap-prefix "  " fontified t)) . -2407) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (#("S" 0 1 (wrap-prefix "  " fontified t)) . -2408) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) 2409 (2406 . 2409) (2405 . 2406) (t 26450 9203 56703 428000) 2405) nil (26450 9239 861971 489000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2464 . 2465) (nil fontified nil 2412 . 2465) (2412 . 2465) 2411) nil (26450 9239 861962 382000) 0 nil])
([nil nil ((#("l" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) wrap-prefix "  " fontified t)) . -2460) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (#("o" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) wrap-prefix "  " fontified t)) . -2461) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (#("s" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) wrap-prefix "  " fontified t)) . -2462) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (#("s" 0 1 (wrap-prefix "  " face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t)) . -2463) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) 2464) nil (26450 9239 861957 513000) 0 nil])
([nil nil ((2460 . 2464)) nil (26450 9239 860287 249000) 0 nil])
([nil nil ((2465 . 2466) 2463) nil (26450 9247 490579 985000) 0 nil])
([nil nil ((2355 . 2361) (#(" " 0 1 (fontified t wrap-prefix "  ")) . -2355) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) 2356 (2352 . 2356) (2350 . 2353) (t 26450 9239 877155 814000)) nil (26450 9252 72555 728000) 0 nil] [nil nil ((#("
" 0 1 (fontified t wrap-prefix "  ")) . -2344) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) 2282 (t 26450 9239 877155 814000)) ((2344 . 2345)) (26450 9247 489836 236000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -1923) (1923 . 1924) (#(")" 0 1 (wrap-prefix "  " fontified nil)) . -1923) (1923 . 1924) (1921 . 1924) (t 26450 9252 85305 806000)) nil (26450 9285 421031 223000) 0 nil])
nil
([nil nil ((1949 . 1956) (1936 . 1949) (#("i" 0 1 (wrap-prefix "  " fontified t)) . -1936) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) 1937 (1929 . 1937) (#("Adaam" 0 5 (wrap-prefix "  " fontified t)) . -1929) (undo-tree-id2464 . -5) (undo-tree-id2465 . -1) (undo-tree-id2466 . -2) (undo-tree-id2467 . -1) (undo-tree-id2468 . -3) (undo-tree-id2469 . -2) (undo-tree-id2470 . -4) (undo-tree-id2471 . -3) (undo-tree-id2472 . -5) (undo-tree-id2473 . -4) (undo-tree-id2474 . -5) (undo-tree-id2475 . -5) (undo-tree-id2476 . -5) (undo-tree-id2477 . -5) (undo-tree-id2478 . -5) (undo-tree-id2479 . -5) (undo-tree-id2480 . -5) (undo-tree-id2481 . -5) (undo-tree-id2482 . -5) (undo-tree-id2483 . -5) (undo-tree-id2484 . -5) 1934 (#(" " 0 1 (wrap-prefix "  " fontified t)) . -1934) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) 1935 (#("op" 0 2 (wrap-prefix "  " fontified t)) . -1935) (undo-tree-id2495 . -2) (undo-tree-id2496 . -1) (undo-tree-id2497 . -2) (undo-tree-id2498 . -1) (undo-tree-id2499 . -2) 1937 (1923 . 1937)) nil (26450 9285 421022 236000) 0 nil])
([nil nil ((2527 . 2529) (#("r" 0 1 (font-lock-multiline t face markdown-header-face-1 markdown-heading-1-atx (2515 2528 nil nil nil nil nil nil 2515 2517 2517 2528 2528 2528 #<buffer 2024-12-05-proj6.markdown>) markdown-heading (2515 2528 nil nil nil nil nil nil 2515 2517 2517 2528 2528 2528 #<buffer 2024-12-05-proj6.markdown>) wrap-prefix "  " fontified t)) . -2527) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) 2528 (2516 . 2528) (2515 . 2516) (2514 . 2515) (t 26450 9285 427715 465000) 2514) nil (26450 9379 86708 213000) 0 nil])
([nil nil ((2555 . 2568) (2549 . 2555) (#("e" 0 1 (wrap-prefix "  " fontified t)) . -2549) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) 2550 (2546 . 2550) (#("camer" 0 5 (wrap-prefix "  " fontified t)) . -2546) (undo-tree-id2521 . -5) (undo-tree-id2522 . -1) (undo-tree-id2523 . -2) (undo-tree-id2524 . -1) (undo-tree-id2525 . -3) (undo-tree-id2526 . -2) (undo-tree-id2527 . -4) (undo-tree-id2528 . -3) (undo-tree-id2529 . -4) (undo-tree-id2530 . -4) (undo-tree-id2531 . -5) (undo-tree-id2532 . -4) (undo-tree-id2533 . -5) 2551 (2537 . 2551) (#("s" 0 1 (wrap-prefix "  " fontified t)) . -2537) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) 2538 (2531 . 2538) (2530 . 2531) (2529 . 2530) 2528) nil (26450 9379 86705 108000) 0 nil])
([nil nil ((2567 . 2570) (#("X" 0 1 (wrap-prefix "  " fontified t)) . -2567) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) 2568 (2567 . 2568)) nil (26450 9379 86686 873000) 0 nil])
([nil nil ((2593 . 2594) (2592 . 2593) (2571 . 2592)) nil (26450 9379 86684 138000) 0 nil])
([nil nil ((2593 . 2596)) nil (26450 9379 86683 667000) 0 nil])
([nil nil ((2636 . 2644) (2615 . 2636) (#("a" 0 1 (wrap-prefix "  " fontified t)) . -2615) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (#(" " 0 1 (wrap-prefix "  " fontified t)) . -2616) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) 2617 (2597 . 2617)) nil (26450 9379 86681 984000) 0 nil])
([nil nil ((2643 . 2646)) nil (26450 9379 86653 550000) 0 nil])
([nil nil ((2647 . 2654)) nil (26450 9379 86653 119000) 0 nil])
([nil nil ((2654 . 2655)) nil (26450 9379 86652 257000) 0 nil])
([nil nil ((2655 . 2656) 2654) nil (26450 9379 86645 765000) 0 nil])
([nil nil ((2694 . 2698) (2681 . 2694) (2678 . 2681) (2667 . 2678) (#("p" 0 1 (wrap-prefix "  " fontified t)) . -2667) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -1) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (#("i" 0 1 (wrap-prefix "  " fontified t)) . -2668) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) 2669 (2655 . 2669) (t 26450 9379 104866 414000)) nil (26450 9417 773933 55000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -2679) (2679 . 2680) (#(")" 0 1 (wrap-prefix "  " fontified nil)) . -2679) (2679 . 2680) (2677 . 2680)) nil (26450 9417 772036 763000) 0 nil])
([nil nil ((2679 . 2683)) nil (26450 9417 772035 891000) 0 nil])
([nil nil ((#("$" 0 1 (wrap-prefix "  " fontified t)) . -2679) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) 2680 (2678 . 2680)) nil (26450 9417 772034 268000) 0 nil])
([nil nil ((2685 . 2686)) nil (26450 9417 772016 905000) 0 nil])
([nil nil ((2770 . 2772) (2749 . 2770) (#("o" 0 1 (wrap-prefix "  " fontified t)) . -2749) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (#("l" 0 1 (wrap-prefix "  " fontified t)) . -2750) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) 2751 (2749 . 2751) (2728 . 2749) (2707 . 2728) (t 26450 9417 781341 601000)) nil (26450 9438 276346 911000) 0 nil])
([nil nil ((#("}" 0 1 (fontified nil)) . -2774) (2774 . 2775) (#("}" 0 1 (wrap-prefix "  " fontified nil)) . -2774) (2774 . 2775) (2771 . 2775)) nil (26450 9438 276327 123000) 0 nil])
([nil nil ((2774 . 2776)) nil (26450 9438 276321 132000) 0 nil])
([nil nil ((2779 . 2780) (2778 . 2779) (t 26450 9438 293593 624000) 2775) nil (26450 9450 711758 740000) 0 nil])
([nil nil ((2781 . 2785) (2780 . 2781) 2780) nil (26450 9450 711757 738000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2912 . 2913) (nil fontified nil 2783 . 2913) (2783 . 2913) 2782) nil (26450 9450 711750 394000) 0 nil])
([nil nil ((2938 . 2943) (2917 . 2938) (2916 . 2917) (t 26450 9450 726746 381000) 2916) nil (26450 9573 899285 227000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -2943) (2943 . 2944) (#(")" 0 1 (wrap-prefix "  " fontified nil)) . -2943) (2943 . 2944) (2942 . 2944)) nil (26450 9573 899284 345000) 0 nil])
([nil nil ((2943 . 2947)) nil (26450 9573 899283 934000) 0 nil])
([nil nil ((2978 . 2993) (#("COP" 0 3 (wrap-prefix "  " fontified t)) . -2978) (undo-tree-id3028 . -3) (undo-tree-id3029 . -1) (undo-tree-id3030 . -2) (undo-tree-id3031 . -1) (undo-tree-id3032 . -3) (undo-tree-id3033 . -2) (undo-tree-id3034 . -3) 2981 (2970 . 2981) (2949 . 2970)) nil (26450 9573 899283 233000) 0 nil])
([nil nil ((#("goes from " 0 10 (wrap-prefix "  " fontified t)) . 2964) (undo-tree-id2995 . -9) (undo-tree-id2996 . -9) (undo-tree-id2997 . -9) (undo-tree-id2998 . -1) (undo-tree-id2999 . -2) (undo-tree-id3000 . -1) (undo-tree-id3001 . -3) (undo-tree-id3002 . -2) (undo-tree-id3003 . -4) (undo-tree-id3004 . -3) (undo-tree-id3005 . -5) (undo-tree-id3006 . -4) (undo-tree-id3007 . -6) (undo-tree-id3008 . -5) (undo-tree-id3009 . -7) (undo-tree-id3010 . -6) (undo-tree-id3011 . -8) (undo-tree-id3012 . -7) (undo-tree-id3013 . -9) (undo-tree-id3014 . -8) (undo-tree-id3015 . -10) (undo-tree-id3016 . -9) (undo-tree-id3017 . -10) (undo-tree-id3018 . -10) (undo-tree-id3019 . -5) (undo-tree-id3020 . -10) (undo-tree-id3021 . -5) (undo-tree-id3022 . -5) (undo-tree-id3023 . -10) (undo-tree-id3024 . -5) (undo-tree-id3025 . -9) (undo-tree-id3026 . -10) (undo-tree-id3027 . -9) 2973) nil (26450 9573 899279 446000) 0 nil])
([nil nil ((2960 . 2970) (#("i" 0 1 (wrap-prefix "  " fontified t)) . -2960) (undo-tree-id2868 . -1) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (#("o" 0 1 (wrap-prefix "  " fontified t)) . -2961) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) 2962 (2959 . 2962) (#("that" 0 4 (wrap-prefix "  " fontified t)) . -2959) (undo-tree-id2878 . -4) (undo-tree-id2879 . -4) (undo-tree-id2880 . -4) (undo-tree-id2881 . -4) (undo-tree-id2882 . -4) (undo-tree-id2883 . -1) (undo-tree-id2884 . -2) (undo-tree-id2885 . -1) (undo-tree-id2886 . -3) (undo-tree-id2887 . -2) (undo-tree-id2888 . -4) (undo-tree-id2889 . -3) (undo-tree-id2890 . -4) (undo-tree-id2891 . -4) (undo-tree-id2892 . -4) (undo-tree-id2893 . -4) (undo-tree-id2894 . -4) (undo-tree-id2895 . -4) (undo-tree-id2896 . -4) (undo-tree-id2897 . -4) (undo-tree-id2898 . -4) (undo-tree-id2899 . -4) (undo-tree-id2900 . -4) (undo-tree-id2901 . -4) (undo-tree-id2902 . -4) (undo-tree-id2903 . -4) (undo-tree-id2904 . -4) (undo-tree-id2905 . -4) (undo-tree-id2906 . -4) (undo-tree-id2907 . -4) (undo-tree-id2908 . -4) (undo-tree-id2909 . -4) (undo-tree-id2910 . -4) (undo-tree-id2911 . -4) (undo-tree-id2912 . -4) (undo-tree-id2913 . -4) (undo-tree-id2914 . -4) (undo-tree-id2915 . -4) (undo-tree-id2916 . -4) (undo-tree-id2917 . -4) (undo-tree-id2918 . -4) (undo-tree-id2919 . -4) (undo-tree-id2920 . -4) (undo-tree-id2921 . -4) (undo-tree-id2922 . -4) (undo-tree-id2923 . -4) (undo-tree-id2924 . -4) (undo-tree-id2925 . -4) (undo-tree-id2926 . -4) (undo-tree-id2927 . -4) (undo-tree-id2928 . -4) (undo-tree-id2929 . -4) (undo-tree-id2930 . -4) (undo-tree-id2931 . -4) (undo-tree-id2932 . -4) (undo-tree-id2933 . -4) (undo-tree-id2934 . -4) (undo-tree-id2935 . -4) (undo-tree-id2936 . -4) (undo-tree-id2937 . -4) (undo-tree-id2938 . -4) (undo-tree-id2939 . -4) (undo-tree-id2940 . -4) 2963 (#(" " 0 1 (wrap-prefix "  " fontified t)) . -2963) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) (undo-tree-id2943 . -1) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) (undo-tree-id2946 . -1) (undo-tree-id2947 . -1) (undo-tree-id2948 . -1) (undo-tree-id2949 . -1) (undo-tree-id2950 . -1) (undo-tree-id2951 . -1) (undo-tree-id2952 . -1) (undo-tree-id2953 . -1) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (undo-tree-id2961 . -1) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) 2964) nil (26450 9573 899267 102000) 0 nil])
([nil nil ((3005 . 3022) (2989 . 3005)) nil (26450 9573 899214 593000) 0 nil])
([nil nil ((#("simply compute $$" 0 17 (wrap-prefix "  " fontified t)) . 3005) (undo-tree-id2803 . -16) (undo-tree-id2804 . 1) (undo-tree-id2805 . -16) (undo-tree-id2806 . -1) (undo-tree-id2807 . -2) (undo-tree-id2808 . -1) (undo-tree-id2809 . -3) (undo-tree-id2810 . -2) (undo-tree-id2811 . -4) (undo-tree-id2812 . -3) (undo-tree-id2813 . -5) (undo-tree-id2814 . -4) (undo-tree-id2815 . -6) (undo-tree-id2816 . -5) (undo-tree-id2817 . -6) (undo-tree-id2818 . -6) (undo-tree-id2819 . -7) (undo-tree-id2820 . -6) (undo-tree-id2821 . -8) (undo-tree-id2822 . -7) (undo-tree-id2823 . -9) (undo-tree-id2824 . -8) (undo-tree-id2825 . -10) (undo-tree-id2826 . -9) (undo-tree-id2827 . -11) (undo-tree-id2828 . -10) (undo-tree-id2829 . -12) (undo-tree-id2830 . -11) (undo-tree-id2831 . -13) (undo-tree-id2832 . -12) (undo-tree-id2833 . -14) (undo-tree-id2834 . -13) (undo-tree-id2835 . -15) (undo-tree-id2836 . -14) (undo-tree-id2837 . -16) (undo-tree-id2838 . -15) (undo-tree-id2839 . -17) (undo-tree-id2840 . -16) (undo-tree-id2841 . -16) (undo-tree-id2842 . -16) (undo-tree-id2843 . -16) (undo-tree-id2844 . -16) (undo-tree-id2845 . -16) (undo-tree-id2846 . -16) (undo-tree-id2847 . -16) (undo-tree-id2848 . -16) (undo-tree-id2849 . -16) (undo-tree-id2850 . -16) (undo-tree-id2851 . -15) (undo-tree-id2852 . -15) (undo-tree-id2853 . -15) (undo-tree-id2854 . -15) (undo-tree-id2855 . -15) (undo-tree-id2856 . -15) (undo-tree-id2857 . -16) (undo-tree-id2858 . -15) (undo-tree-id2859 . -16) (undo-tree-id2860 . -16) (undo-tree-id2861 . -16) (undo-tree-id2862 . -16) (undo-tree-id2863 . -15) (undo-tree-id2864 . -16) (undo-tree-id2865 . -7) (undo-tree-id2866 . -15) (undo-tree-id2867 . -7)) nil (26450 9573 899213 80000) 0 nil])
([nil nil ((3035 . 3037) (3018 . 3035) (3005 . 3018)) nil (26450 9573 899180 358000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3119 . 3120) (nil fontified nil 3036 . 3120) (3036 . 3120) 3035) nil (26450 9573 899179 857000) 0 nil])
([nil nil ((3121 . 3130)) nil (26450 9573 899179 226000) 0 nil])
([nil nil ((#("}" 0 1 (fontified nil)) . -3137) (3137 . 3138) (#("}" 0 1 (fontified nil wrap-prefix "        ")) . -3137) (3137 . 3138) (3129 . 3138)) nil (26450 9573 899178 334000) 0 nil])
([nil nil ((3137 . 3138)) nil (26450 9573 899177 673000) 0 nil])
([nil nil ((3171 . 3181) (3152 . 3171) (#("column" 0 6 (fontified t wrap-prefix "        ")) . -3152) (undo-tree-id2562 . -6) (undo-tree-id2563 . -1) (undo-tree-id2564 . -2) (undo-tree-id2565 . -1) (undo-tree-id2566 . -3) (undo-tree-id2567 . -2) (undo-tree-id2568 . -4) (undo-tree-id2569 . -3) (undo-tree-id2570 . -5) (undo-tree-id2571 . -4) (undo-tree-id2572 . -5) (undo-tree-id2573 . -6) (undo-tree-id2574 . -5) (undo-tree-id2575 . -6) (undo-tree-id2576 . -6) (undo-tree-id2577 . -6) (undo-tree-id2578 . -6) (undo-tree-id2579 . -6) 3158 (3152 . 3158) (#("last" 0 4 (fontified t wrap-prefix "        ")) . -3152) (undo-tree-id2580 . -4) (undo-tree-id2581 . -1) (undo-tree-id2582 . -2) (undo-tree-id2583 . -1) (undo-tree-id2584 . -3) (undo-tree-id2585 . -2) (undo-tree-id2586 . -4) (undo-tree-id2587 . -3) (undo-tree-id2588 . -4) (undo-tree-id2589 . -4) (undo-tree-id2590 . -4) (undo-tree-id2591 . -4) (undo-tree-id2592 . -4) (undo-tree-id2593 . -4) (undo-tree-id2594 . -4) (undo-tree-id2595 . -4) (undo-tree-id2596 . -4) (undo-tree-id2597 . -4) (undo-tree-id2598 . -4) (undo-tree-id2599 . -4) (undo-tree-id2600 . -4) (undo-tree-id2601 . -4) (undo-tree-id2602 . -4) (undo-tree-id2603 . -4) (undo-tree-id2604 . -4) (undo-tree-id2605 . -4) (undo-tree-id2606 . -4) (undo-tree-id2607 . -4) (undo-tree-id2608 . -4) (undo-tree-id2609 . -4) (undo-tree-id2610 . -4) (undo-tree-id2611 . -4) (undo-tree-id2612 . -4) (undo-tree-id2613 . -4) (undo-tree-id2614 . -4) (undo-tree-id2615 . -4) (undo-tree-id2616 . -4) (undo-tree-id2617 . -4) (undo-tree-id2618 . -4) (undo-tree-id2619 . -4) (undo-tree-id2620 . -4) (undo-tree-id2621 . -4) (undo-tree-id2622 . -4) (undo-tree-id2623 . -4) (undo-tree-id2624 . -4) (undo-tree-id2625 . -4) (undo-tree-id2626 . -4) (undo-tree-id2627 . -4) (undo-tree-id2628 . -4) (undo-tree-id2629 . -4) (undo-tree-id2630 . -4) (undo-tree-id2631 . -4) (undo-tree-id2632 . -4) (undo-tree-id2633 . -4) (undo-tree-id2634 . -4) (undo-tree-id2635 . -4) 3156 (#(" " 0 1 (fontified t wrap-prefix "        ")) . -3156) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) 3157 (#("column" 0 6 (fontified t wrap-prefix "        ")) . -3157) (undo-tree-id2683 . -6) (undo-tree-id2684 . -1) (undo-tree-id2685 . -2) (undo-tree-id2686 . -1) (undo-tree-id2687 . -3) (undo-tree-id2688 . -2) (undo-tree-id2689 . -4) (undo-tree-id2690 . -3) (undo-tree-id2691 . -5) (undo-tree-id2692 . -4) (undo-tree-id2693 . -5) (undo-tree-id2694 . -6) (undo-tree-id2695 . -5) (undo-tree-id2696 . -6) (undo-tree-id2697 . -6) (undo-tree-id2698 . -6) (undo-tree-id2699 . -6) (undo-tree-id2700 . -6) (undo-tree-id2701 . -6) (undo-tree-id2702 . -6) (undo-tree-id2703 . -6) (undo-tree-id2704 . -6) (undo-tree-id2705 . -6) (undo-tree-id2706 . -6) (undo-tree-id2707 . -6) (undo-tree-id2708 . -6) (undo-tree-id2709 . -6) (undo-tree-id2710 . -6) (undo-tree-id2711 . -6) (undo-tree-id2712 . -6) (undo-tree-id2713 . -6) (undo-tree-id2714 . -6) (undo-tree-id2715 . -6) (undo-tree-id2716 . -6) (undo-tree-id2717 . -6) (undo-tree-id2718 . -6) (undo-tree-id2719 . -6) (undo-tree-id2720 . -6) (undo-tree-id2721 . -6) (undo-tree-id2722 . -6) (undo-tree-id2723 . -6) (undo-tree-id2724 . -6) 3163 (#(" " 0 1 (fontified t wrap-prefix "        ")) . -3163) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) 3164 (#("in" 0 2 (fontified t wrap-prefix "        ")) . -3164) (undo-tree-id2751 . -2) (undo-tree-id2752 . -1) (undo-tree-id2753 . -2) (undo-tree-id2754 . -1) (undo-tree-id2755 . -2) (undo-tree-id2756 . -2) (undo-tree-id2757 . -2) (undo-tree-id2758 . -2) (undo-tree-id2759 . -2) (undo-tree-id2760 . -2) (undo-tree-id2761 . -2) (undo-tree-id2762 . -2) (undo-tree-id2763 . -2) (undo-tree-id2764 . -2) (undo-tree-id2765 . -2) (undo-tree-id2766 . -2) (undo-tree-id2767 . -2) (undo-tree-id2768 . -2) (undo-tree-id2769 . -2) (undo-tree-id2770 . -2) (undo-tree-id2771 . -2) 3166 (#(" " 0 1 (fontified t wrap-prefix "        ")) . -3166) (undo-tree-id2772 . -1) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) 3167 (#("the" 0 3 (fontified t wrap-prefix "        ")) . -3167) (undo-tree-id2788 . -3) (undo-tree-id2789 . -1) (undo-tree-id2790 . -2) (undo-tree-id2791 . -1) (undo-tree-id2792 . -3) (undo-tree-id2793 . -2) (undo-tree-id2794 . -3) (undo-tree-id2795 . -3) (undo-tree-id2796 . -3) (undo-tree-id2797 . -3) (undo-tree-id2798 . -3) 3170 (#(" " 0 1 (fontified t wrap-prefix "        ")) . -3170) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) (undo-tree-id2802 . -1) 3171 (3170 . 3171) (3149 . 3170) (3140 . 3149)) nil (26450 9573 899167 133000) 0 nil])
([nil nil ((3181 . 3182)) nil (26450 9573 894166 189000) 0 nil])
([nil nil ((3182 . 3183) 3181) nil (26450 9573 894159 877000) 0 nil])
([nil nil ((#("}" 0 1 (wrap-prefix "  " fontified t)) . 3059) (t 26450 9573 913259 887000)) nil (26450 9617 357400 626000) 0 nil])
([nil nil ((#("\\mathbf{" 0 1 (face (markdown-markup-face) invisible markdown-markup wrap-prefix "  " fontified t) 1 8 (wrap-prefix "  " fontified t)) . 3050) (undo-tree-id3074 . -7) (undo-tree-id3075 . -7) (undo-tree-id3076 . -8) (undo-tree-id3077 . -7) (undo-tree-id3078 . -8) (undo-tree-id3079 . -6) (undo-tree-id3080 . -7) (undo-tree-id3081 . -7) (undo-tree-id3082 . -6) (undo-tree-id3083 . -7) (undo-tree-id3084 . -7) (undo-tree-id3085 . -7) (undo-tree-id3086 . -7) (undo-tree-id3087 . -1) (undo-tree-id3088 . -7) (undo-tree-id3089 . -1)) nil (26450 9617 357399 254000) 0 nil])
([nil nil ((#("mathbf{" 0 7 (fontified t wrap-prefix "        ")) . 3064) (undo-tree-id3067 . -6) (undo-tree-id3068 . -6) (undo-tree-id3069 . -6) (undo-tree-id3070 . -6) (undo-tree-id3071 . -6) (undo-tree-id3072 . -6) (undo-tree-id3073 . -6) 3070) nil (26450 9617 357378 565000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t wrap-prefix "        ")) . 3065)) nil (26450 9617 357372 183000) 0 nil])
([nil nil ((#("\\" 0 1 (face (markdown-markup-face) invisible markdown-markup fontified t wrap-prefix "        ")) . 3063) (undo-tree-id3045 . -1) (undo-tree-id3046 . -1) (undo-tree-id3047 . -1) (undo-tree-id3048 . -1) (undo-tree-id3049 . -1) (undo-tree-id3050 . -1) (undo-tree-id3051 . -1) (undo-tree-id3052 . -1) (undo-tree-id3053 . -1) (undo-tree-id3054 . -1) (undo-tree-id3055 . -1) (undo-tree-id3056 . -1) (undo-tree-id3057 . -1) (undo-tree-id3058 . -1) (undo-tree-id3059 . -1) (undo-tree-id3060 . -1) (undo-tree-id3061 . -1) (undo-tree-id3062 . -1) (undo-tree-id3063 . -1) (undo-tree-id3064 . -1) (undo-tree-id3065 . -1) (undo-tree-id3066 . -1)) nil (26450 9617 357370 18000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t wrap-prefix "        ")) . 3065)) nil (26450 9617 355617 368000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t wrap-prefix "        ")) . 3073)) nil (26450 9617 355616 667000) 0 nil])
([nil nil ((3073 . 3075)) nil (26450 9617 355616 106000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t wrap-prefix "        ")) . 3073) (undo-tree-id3044 . -1)) nil (26450 9617 355614 954000) 0 nil])
([nil nil ((3065 . 3066)) nil (26450 9617 355613 240000) 0 nil])
([nil nil ((#("\\mathbf{" 0 1 (face (markdown-markup-face) invisible markdown-markup fontified t wrap-prefix "        ") 1 8 (fontified t wrap-prefix "        ")) . 3080) (undo-tree-id3035 . -7) (undo-tree-id3036 . -7) (undo-tree-id3037 . -7) (undo-tree-id3038 . -1) (undo-tree-id3039 . -1) (undo-tree-id3040 . -1) (undo-tree-id3041 . -7) (undo-tree-id3042 . -1) (undo-tree-id3043 . -7) 3087) nil (26450 9617 355611 878000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t wrap-prefix "        ")) . 3081)) nil (26450 9617 355586 890000) 0 nil])
([nil nil ((3080 . 3089) (t 26450 9617 371793 836000)) nil (26450 9629 13235 558000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t wrap-prefix "        ")) . 3088) (undo-tree-id3090 . 1)) nil (26450 9629 13233 675000) 0 nil])
([nil nil ((3089 . 3090) (#("}" 0 1 (fontified nil wrap-prefix "        ")) . -3089) (3089 . 3090)) nil (26450 9629 13214 829000) 0 nil])
([nil nil ((3089 . 3090) (#("}" 0 1 (wrap-prefix "        " fontified t)) . 3089) (t 26450 9629 25937 22000)) nil (26450 9637 164033 583000) 0 nil])
([nil nil ((3089 . 3091) (#("r" 0 1 (wrap-prefix "        " fontified t)) . -3089) (undo-tree-id3092 . -1) (undo-tree-id3093 . -1) (undo-tree-id3094 . -1) (undo-tree-id3095 . -1) (undo-tree-id3096 . -1) 3090) nil (26450 9637 164031 819000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t wrap-prefix "        ")) . 3089) (undo-tree-id3091 . -1)) nil (26450 9637 163469 845000) 0 nil])
([nil nil ((#("}" 0 1 (fontified nil)) . -3064) (3064 . 3065) (#("}" 0 1 (fontified nil wrap-prefix "        ")) . -3064) (3064 . 3065) (3063 . 3065) (#("R" 0 1 (fontified t wrap-prefix "        ")) . -3063) (undo-tree-id3097 . -1) (undo-tree-id3098 . -1) (undo-tree-id3099 . -1) (undo-tree-id3100 . -1) (undo-tree-id3101 . -1) (undo-tree-id3102 . -1) (undo-tree-id3103 . -1) 3064 (t 26450 9637 168037 59000)) nil (26450 9646 410851 790000) 0 nil])
([nil nil ((3063 . 3070)) nil (26450 9700 702859 234000) 0 nil])
([nil nil ((3071 . 3072)) ((#("R" 0 1 (fontified t wrap-prefix "        ")) . 3071)) (26450 9701 916820 653000) 0 nil])
([nil nil ((3183 . 3204) (#("dire" 0 4 (fontified t wrap-prefix "        ")) . -3183) (undo-tree-id3733 . -4) (undo-tree-id3734 . -1) (undo-tree-id3735 . -2) (undo-tree-id3736 . -1) (undo-tree-id3737 . -3) (undo-tree-id3738 . -2) (undo-tree-id3739 . -4) (undo-tree-id3740 . -3) (undo-tree-id3741 . -4) 3187 (3173 . 3187) (t 26450 9702 544840 299000)) nil (26450 9812 409605 116000) 0 nil] [nil nil ((#("}" 0 1 (fontified nil)) . -3058) (3058 . 3059) (#("}" 0 1 (wrap-prefix "  " fontified nil)) . -3058) (3058 . 3059) (3050 . 3059) (#("r" 0 1 (wrap-prefix "  " fontified t)) . -3050) (undo-tree-id3104 . -1) (undo-tree-id3106 . -1) (undo-tree-id3108 . -1) 3051 (t 26450 9646 419150 720000)) ((3050 . 3051) (#("\\mathbf{}" 0 1 (face (markdown-markup-face) invisible markdown-markup wrap-prefix "  " fontified nil) 1 7 (wrap-prefix "  " fontified nil) 7 8 (wrap-prefix "  " fontified nil) 8 9 (wrap-prefix "  " fontified nil)) . 3050) (undo-tree-id3594 . 1) (undo-tree-id3595 . -1) (undo-tree-id3596 . 1) (undo-tree-id3597 . -7) (undo-tree-id3598 . -1) (undo-tree-id3599 . -8) (undo-tree-id3600 . -7) (undo-tree-id3601 . -8) (undo-tree-id3602 . -7) (undo-tree-id3603 . -7) (undo-tree-id3604 . -7) (undo-tree-id3605 . -7) (undo-tree-id3606 . -1) (undo-tree-id3607 . -7) (undo-tree-id3608 . -1) (undo-tree-id3609 . -1) (undo-tree-id3610 . -1) (undo-tree-id3611 . -1) (undo-tree-id3612 . -1) (undo-tree-id3613 . -1) (undo-tree-id3614 . -1) (undo-tree-id3615 . -1) (undo-tree-id3616 . -8) (undo-tree-id3617 . -1) (undo-tree-id3618 . -1) (undo-tree-id3619 . -1) (undo-tree-id3620 . -8) (undo-tree-id3621 . -1) (undo-tree-id3622 . -8) (undo-tree-id3623 . -8) (undo-tree-id3624 . -8) (undo-tree-id3625 . -8) (undo-tree-id3626 . -8) (#("}" 0 1 (wrap-prefix "  " fontified nil)) . 3058) (3058 . 3059) (#("}" 0 1 (fontified nil)) . 3058) (3058 . 3059)) (26450 9699 489430 874000) 0 nil])
([nil nil ((#("$" 0 1 (fontified t wrap-prefix "        ")) . -3206) (undo-tree-id3723 . -1) (undo-tree-id3724 . -1) (undo-tree-id3725 . -1) (undo-tree-id3726 . -1) (undo-tree-id3727 . -1) (undo-tree-id3728 . -1) (undo-tree-id3729 . -1) (#("$" 0 1 (fontified t wrap-prefix "        ")) . -3207) (undo-tree-id3730 . -1) (undo-tree-id3731 . -1) (undo-tree-id3732 . -1) 3208 (3203 . 3208)) nil (26450 9812 409598 333000) 0 nil])
([nil nil ((3058 . 3059)) ((#("r" 0 1 (wrap-prefix "  " fontified t)) . 3058) (undo-tree-id3588 . 1) (undo-tree-id3589 . 1) (undo-tree-id3590 . -1) (undo-tree-id3591 . -1) (undo-tree-id3592 . -1) (undo-tree-id3593 . -1)) (26450 9699 150910 787000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3320 . 3321) (nil fontified nil 3205 . 3321) (3205 . 3321) 3204) nil (26450 9812 409592 1000) 0 nil])
([nil nil ((3050 . 3051) (t 26450 9655 257259 306000)) ((#(" " 0 1 (wrap-prefix "  " fontified t)) . 3050) (undo-tree-id3581 . -1) (undo-tree-id3582 . -1) (undo-tree-id3583 . -1) (undo-tree-id3584 . -1) (undo-tree-id3585 . -1) (undo-tree-id3586 . -1) (undo-tree-id3587 . -1)) (26450 9698 761431 143000) 0 nil])
([nil nil ((3322 . 3331)) nil (26450 9812 409591 310000) 0 nil])
([nil nil ((#(" " 0 1 (wrap-prefix "  " fontified t)) . -3055) (undo-tree-id3488 . -1) (undo-tree-id3490 . -1) (undo-tree-id3492 . -1) (undo-tree-id3494 . -1) (undo-tree-id3496 . -1) (undo-tree-id3498 . -1) (#(" " 0 1 (wrap-prefix "  " fontified t)) . -3056) (undo-tree-id3499 . -1) (undo-tree-id3501 . -1) (undo-tree-id3503 . -1) (undo-tree-id3505 . -1) (#(" " 0 1 (wrap-prefix "  " fontified t)) . -3057) (undo-tree-id3506 . -1) (undo-tree-id3508 . -1) 3058 (3051 . 3058)) ((#("       " 0 1 (wrap-prefix "  " fontified nil) 1 2 (wrap-prefix "  " fontified nil) 2 3 (wrap-prefix "  " fontified nil) 3 4 (wrap-prefix "  " fontified nil) 4 5 (wrap-prefix "  " fontified nil) 5 6 (wrap-prefix "  " fontified nil) 6 7 (wrap-prefix "  " fontified nil)) . 3051) (undo-tree-id3576 . -4) (undo-tree-id3577 . -4) (undo-tree-id3578 . -7) (undo-tree-id3579 . -4) (undo-tree-id3580 . -4) (3055 . 3058)) (26450 9698 447736 855000) 0 nil])
([nil nil ((#("}" 0 1 (fontified nil)) . -3338) (3338 . 3339) (#("}" 0 1 (fontified nil wrap-prefix "        ")) . -3338) (3338 . 3339) (3336 . 3339) (3330 . 3336)) nil (26450 9812 409590 208000) 0 nil])
([nil nil ((3048 . 3050) (#("}" 0 1 (wrap-prefix "  " fontified nil)) . -3048) (3048 . 3049) (#("}" 0 1 (wrap-prefix "  " fontified t)) . -3048) (undo-tree-id3109 . -1) (undo-tree-id3110 . -1) (undo-tree-id3111 . -1) (undo-tree-id3112 . -1) (undo-tree-id3114 . -1) (undo-tree-id3116 . -1) (undo-tree-id3118 . -1) (undo-tree-id3120 . -1) (undo-tree-id3122 . -1) (undo-tree-id3124 . -1) (undo-tree-id3126 . -1) (undo-tree-id3128 . -1) (undo-tree-id3130 . -1) (undo-tree-id3132 . -1) (undo-tree-id3134 . -1) (undo-tree-id3136 . -1) (undo-tree-id3138 . -1) (undo-tree-id3140 . -1) (undo-tree-id3142 . -1) (undo-tree-id3144 . -1) (undo-tree-id3146 . -1) (undo-tree-id3148 . -1) (undo-tree-id3150 . -1) (undo-tree-id3152 . -1) (undo-tree-id3154 . -1) (undo-tree-id3156 . -1) (undo-tree-id3158 . -1) (undo-tree-id3160 . -1) (undo-tree-id3162 . -1) (undo-tree-id3164 . -1) (undo-tree-id3166 . -1) (undo-tree-id3167 . -1) (undo-tree-id3169 . -1) (undo-tree-id3171 . -1) (undo-tree-id3173 . -1) (undo-tree-id3175 . -1) (undo-tree-id3177 . -1) (undo-tree-id3179 . -1) (undo-tree-id3181 . -1) (undo-tree-id3183 . -1) (undo-tree-id3185 . -1) (undo-tree-id3187 . -1) (#(" " 0 1 (wrap-prefix "  " fontified t)) . -3049) (undo-tree-id3189 . -1) (undo-tree-id3190 . -1) (undo-tree-id3191 . -1) (undo-tree-id3192 . -1) (undo-tree-id3194 . -1) (undo-tree-id3196 . -1) (undo-tree-id3198 . -1) (undo-tree-id3200 . -1) (undo-tree-id3202 . -1) (undo-tree-id3204 . -1) (undo-tree-id3206 . -1) (undo-tree-id3208 . -1) (undo-tree-id3210 . -1) (undo-tree-id3212 . -1) (undo-tree-id3214 . -1) (undo-tree-id3216 . -1) (undo-tree-id3218 . -1) (undo-tree-id3220 . -1) (undo-tree-id3222 . -1) (undo-tree-id3224 . -1) (undo-tree-id3226 . -1) (undo-tree-id3228 . -1) (undo-tree-id3230 . -1) (undo-tree-id3232 . -1) (undo-tree-id3234 . -1) (undo-tree-id3236 . -1) (undo-tree-id3238 . -1) (undo-tree-id3240 . -1) (undo-tree-id3242 . -1) (undo-tree-id3244 . -1) (undo-tree-id3246 . -1) (undo-tree-id3247 . -1) (undo-tree-id3249 . -1) (undo-tree-id3251 . -1) (undo-tree-id3253 . -1) (undo-tree-id3255 . -1) (undo-tree-id3257 . -1) (undo-tree-id3259 . -1) (undo-tree-id3261 . -1) (undo-tree-id3263 . -1) (undo-tree-id3265 . -1) (#(" " 0 1 (wrap-prefix "  " fontified t)) . -3050) (undo-tree-id3267 . -1) (undo-tree-id3269 . -1) (undo-tree-id3271 . -1) (undo-tree-id3273 . -1) (undo-tree-id3275 . -1) (undo-tree-id3277 . -1) (undo-tree-id3279 . -1) (undo-tree-id3281 . -1) (undo-tree-id3283 . -1) (undo-tree-id3285 . -1) (undo-tree-id3287 . -1) (undo-tree-id3289 . -1) (undo-tree-id3291 . -1) (undo-tree-id3293 . -1) (undo-tree-id3295 . -1) (undo-tree-id3297 . -1) (undo-tree-id3299 . -1) (undo-tree-id3301 . -1) (undo-tree-id3303 . -1) (undo-tree-id3305 . -1) (undo-tree-id3307 . -1) (undo-tree-id3309 . -1) (undo-tree-id3310 . -1) (undo-tree-id3312 . -1) (undo-tree-id3314 . -1) (undo-tree-id3316 . -1) (undo-tree-id3318 . -1) (undo-tree-id3320 . -1) (undo-tree-id3322 . -1) (undo-tree-id3324 . -1) (undo-tree-id3326 . -1) (#(" " 0 1 (wrap-prefix "  " fontified t)) . -3051) (undo-tree-id3328 . -1) (undo-tree-id3330 . -1) (undo-tree-id3332 . -1) (undo-tree-id3334 . -1) (undo-tree-id3336 . -1) (undo-tree-id3338 . -1) (undo-tree-id3340 . -1) (undo-tree-id3342 . -1) (undo-tree-id3344 . -1) (undo-tree-id3346 . -1) (undo-tree-id3348 . -1) (undo-tree-id3350 . -1) (undo-tree-id3352 . -1) (undo-tree-id3354 . -1) (undo-tree-id3355 . -1) (undo-tree-id3357 . -1) (undo-tree-id3358 . -1) (undo-tree-id3360 . -1) (undo-tree-id3362 . -1) (undo-tree-id3364 . -1) (undo-tree-id3366 . -1) (undo-tree-id3368 . -1) (undo-tree-id3370 . -1) (undo-tree-id3372 . -1) (#(" " 0 1 (wrap-prefix "  " fontified t)) . -3052) (undo-tree-id3374 . -1) (undo-tree-id3376 . -1) (undo-tree-id3378 . -1) (undo-tree-id3380 . -1) (undo-tree-id3382 . -1) (undo-tree-id3384 . -1) (undo-tree-id3386 . -1) (undo-tree-id3388 . -1) (undo-tree-id3390 . -1) (undo-tree-id3392 . -1) (undo-tree-id3394 . -1) (undo-tree-id3396 . -1) (undo-tree-id3398 . -1) (undo-tree-id3399 . -1) (undo-tree-id3401 . -1) (undo-tree-id3402 . -1) (undo-tree-id3404 . -1) (undo-tree-id3406 . -1) (undo-tree-id3408 . -1) (undo-tree-id3410 . -1) (undo-tree-id3412 . -1) (undo-tree-id3414 . -1) (#(" " 0 1 (wrap-prefix "  " fontified t)) . -3053) (undo-tree-id3416 . -1) (undo-tree-id3418 . -1) (undo-tree-id3420 . -1) (undo-tree-id3422 . -1) (undo-tree-id3424 . -1) (undo-tree-id3426 . -1) (undo-tree-id3428 . -1) (undo-tree-id3430 . -1) (undo-tree-id3432 . -1) (undo-tree-id3434 . -1) (undo-tree-id3436 . -1) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) (undo-tree-id3441 . -1) (undo-tree-id3442 . -1) (undo-tree-id3444 . -1) (undo-tree-id3446 . -1) (undo-tree-id3448 . -1) (undo-tree-id3450 . -1) (undo-tree-id3452 . -1) (#(" " 0 1 (wrap-prefix "  " fontified t)) . -3054) (undo-tree-id3454 . -1) (undo-tree-id3456 . -1) (undo-tree-id3458 . -1) (undo-tree-id3460 . -1) (undo-tree-id3462 . -1) (undo-tree-id3464 . -1) (undo-tree-id3466 . -1) (undo-tree-id3468 . -1) (undo-tree-id3470 . -1) (undo-tree-id3472 . -1) (undo-tree-id3474 . -1) (undo-tree-id3475 . -1) (undo-tree-id3477 . -1) (undo-tree-id3478 . -1) (undo-tree-id3480 . -1) (undo-tree-id3482 . -1) (undo-tree-id3484 . -1) (undo-tree-id3486 . -1) 3055) ((3048 . 3055) (#("}" 0 1 (wrap-prefix "  " fontified nil)) . 3048) (3048 . 3049) (#("} " 0 2 (wrap-prefix "  " fontified t)) . 3048) (undo-tree-id3572 . -1) (undo-tree-id3573 . -2) (undo-tree-id3574 . -1) (undo-tree-id3575 . -1)) (26450 9698 94694 47000) 0 nil])
([nil nil ((3338 . 3339)) nil (26450 9812 409588 895000) 0 nil])
([nil nil ((3064 . 3065) (#("
" 0 1 (wrap-prefix "  " fontified t)) . -3064) (undo-tree-id3509 . -1) (undo-tree-id3511 . -1) (undo-tree-id3513 . -1) (undo-tree-id3515 . -1) (undo-tree-id3517 . -1) (undo-tree-id3519 . -1) (undo-tree-id3521 . -1) 3065 (#("    " 0 4 (fontified t wrap-prefix "      ")) . -3065) (undo-tree-id3522 . -4) (undo-tree-id3524 . -4) (undo-tree-id3526 . -4) (undo-tree-id3528 . -4) (undo-tree-id3530 . -4) 3069 (#("  " 0 2 (fontified t wrap-prefix "        ")) . -3069) (undo-tree-id3532 . -2) (undo-tree-id3534 . -2) (undo-tree-id3536 . -2) (undo-tree-id3538 . -2) 3071 (t 26450 9676 76515 102000)) ((3064 . 3071) (#(" " 0 1 (face (markdown-italic-face) wrap-prefix "  " fontified t)) . 3064) (t 26450 9682 119589 350000)) (26450 9697 868043 433000) 0 nil])
([nil nil ((3340 . 3342)) nil (26450 9812 409588 174000) 0 nil])
([nil nil ((#("}" 0 1 (wrap-prefix "  " fontified t)) . 3059) (t 26450 9682 119589 350000)) ((3059 . 3060)) (26450 9697 321891 451000) 0 nil])
([nil nil ((3358 . 3377) (3357 . 3359) (#("in" 0 2 (fontified t wrap-prefix "        ")) . -3357) (undo-tree-id3675 . -2) (undo-tree-id3676 . -1) (undo-tree-id3677 . -2) (undo-tree-id3678 . -1) (undo-tree-id3679 . -2) (undo-tree-id3680 . -2) (undo-tree-id3681 . -2) (undo-tree-id3682 . -2) (undo-tree-id3683 . -2) (undo-tree-id3684 . -2) (undo-tree-id3685 . -2) (undo-tree-id3686 . -2) (undo-tree-id3687 . -2) (undo-tree-id3688 . -2) (undo-tree-id3689 . -2) 3359 (#(" " 0 1 (fontified t wrap-prefix "        ")) . -3359) (undo-tree-id3690 . -1) (undo-tree-id3691 . -1) (undo-tree-id3692 . -1) (undo-tree-id3693 . -1) (undo-tree-id3694 . -1) (undo-tree-id3695 . -1) (undo-tree-id3696 . -1) (undo-tree-id3697 . -1) (undo-tree-id3698 . -1) (undo-tree-id3699 . -1) 3360 (#("th" 0 2 (fontified t wrap-prefix "        ")) . -3360) (undo-tree-id3700 . -2) (undo-tree-id3701 . -1) (undo-tree-id3702 . -2) (undo-tree-id3703 . -1) (undo-tree-id3704 . -2) 3362 (3351 . 3362) (#(" " 0 1 (face (markdown-line-break-face) fontified t wrap-prefix "        ")) . -3351) (undo-tree-id3705 . -1) (undo-tree-id3706 . -1) (undo-tree-id3707 . -1) (undo-tree-id3708 . -1) (undo-tree-id3709 . -1) (undo-tree-id3710 . -1) (undo-tree-id3711 . -1) (undo-tree-id3712 . -1) (undo-tree-id3713 . -1) (undo-tree-id3714 . -1) (undo-tree-id3715 . -1) (undo-tree-id3716 . -1) (undo-tree-id3717 . -1) (undo-tree-id3718 . -1) (undo-tree-id3719 . -1) (undo-tree-id3720 . -1) (undo-tree-id3721 . -1) (undo-tree-id3722 . -1) 3352 (3343 . 3351)) nil (26450 9812 409585 960000) 0 nil])
([nil nil ((#("mathbf{" 0 6 (wrap-prefix "  " fontified t) 6 7 (wrap-prefix "  " fontified t)) . 3051) (undo-tree-id3562 . -6) (undo-tree-id3563 . -6) (undo-tree-id3564 . -7) (undo-tree-id3565 . -6) (undo-tree-id3566 . -7) (undo-tree-id3567 . -6) (undo-tree-id3568 . -6) (undo-tree-id3569 . -6) (undo-tree-id3570 . -6) (undo-tree-id3571 . -6)) ((3051 . 3058)) (26450 9696 885851 855000) 0 nil])
([nil nil ((3388 . 3408) (#("1" 0 1 (fontified t wrap-prefix "        ")) . -3388) (undo-tree-id3627 . -1) (undo-tree-id3628 . -1) (undo-tree-id3629 . -1) 3389 (3379 . 3389) (#("that's" 0 6 (fontified t wrap-prefix "        ")) . -3379) (undo-tree-id3630 . -6) (undo-tree-id3631 . -1) (undo-tree-id3632 . -2) (undo-tree-id3633 . -1) (undo-tree-id3634 . -3) (undo-tree-id3635 . -2) (undo-tree-id3636 . -4) (undo-tree-id3637 . -3) (undo-tree-id3638 . -5) (undo-tree-id3639 . -4) (undo-tree-id3640 . -6) (undo-tree-id3641 . -5) (undo-tree-id3642 . -6) (undo-tree-id3643 . -6) (undo-tree-id3644 . -6) (undo-tree-id3645 . -6) (undo-tree-id3646 . -6) (undo-tree-id3647 . -6) (undo-tree-id3648 . -6) (undo-tree-id3649 . -6) (undo-tree-id3650 . -6) (undo-tree-id3651 . -6) (undo-tree-id3652 . -6) (undo-tree-id3653 . -6) (undo-tree-id3654 . -6) (undo-tree-id3655 . -6) (undo-tree-id3656 . -6) (undo-tree-id3657 . -6) (undo-tree-id3658 . -6) 3385 (#(" " 0 1 (fontified t wrap-prefix "        ")) . -3385) (undo-tree-id3659 . -1) (undo-tree-id3660 . -1) (undo-tree-id3661 . -1) (undo-tree-id3662 . -1) (undo-tree-id3663 . -1) (undo-tree-id3664 . -1) (undo-tree-id3665 . -1) (undo-tree-id3666 . -1) (undo-tree-id3667 . -1) (undo-tree-id3668 . -1) (undo-tree-id3669 . -1) (undo-tree-id3670 . -1) (undo-tree-id3671 . -1) (undo-tree-id3672 . -1) (undo-tree-id3673 . -1) (undo-tree-id3674 . -1) 3386 (3378 . 3386)) nil (26450 9812 409551 825000) 0 nil])
([nil nil ((#("\\" 0 1 (face (markdown-markup-face) invisible markdown-markup wrap-prefix "  " fontified t)) . -3050) (undo-tree-id3539 . -1) (undo-tree-id3540 . -1) (undo-tree-id3541 . -1) (undo-tree-id3542 . -1) (undo-tree-id3543 . -1) (undo-tree-id3544 . -1) (undo-tree-id3545 . -1) (undo-tree-id3546 . -1) (undo-tree-id3547 . -1) (undo-tree-id3548 . -1) (undo-tree-id3549 . -1) (undo-tree-id3550 . -1) (undo-tree-id3551 . -1) (undo-tree-id3552 . -1) (undo-tree-id3553 . -1) (undo-tree-id3554 . -1) (undo-tree-id3555 . -1) (undo-tree-id3556 . -1) (undo-tree-id3557 . -1) (undo-tree-id3558 . -1) (undo-tree-id3559 . -1) (undo-tree-id3560 . -1) (undo-tree-id3561 . -1) 3051) ((3050 . 3051)) (26450 9696 595064 131000) 0 nil])
([nil nil ((3464 . 3466) (#("N" 0 1 (wrap-prefix "  " fontified t)) . -3464) (undo-tree-id3745 . -1) (undo-tree-id3746 . -1) (undo-tree-id3747 . -1) (undo-tree-id3748 . -1) (undo-tree-id3749 . -1) (undo-tree-id3750 . -1) (undo-tree-id3751 . -1) (undo-tree-id3752 . -1) (undo-tree-id3753 . -1) (undo-tree-id3754 . -1) (undo-tree-id3755 . -1) (undo-tree-id3756 . -1) (undo-tree-id3757 . -1) 3465 (#(" /" 0 2 (wrap-prefix "  " fontified t)) . -3465) (undo-tree-id3758 . -2) (undo-tree-id3759 . -1) (undo-tree-id3760 . -2) (undo-tree-id3761 . -1) (undo-tree-id3762 . -2) (undo-tree-id3763 . -2) (undo-tree-id3764 . -2) (undo-tree-id3765 . -2) (undo-tree-id3766 . -2) (undo-tree-id3767 . -2) 3467 (#(" " 0 1 (wrap-prefix "  " fontified t)) . -3467) (undo-tree-id3768 . -1) (undo-tree-id3769 . -1) (undo-tree-id3770 . -1) (undo-tree-id3771 . -1) 3468 (3457 . 3468) (#("sapmle" 0 6 (wrap-prefix "  " fontified t)) . -3457) (undo-tree-id3772 . -6) (undo-tree-id3773 . -1) (undo-tree-id3774 . -2) (undo-tree-id3775 . -1) (undo-tree-id3776 . -3) (undo-tree-id3777 . -2) (undo-tree-id3778 . -4) (undo-tree-id3779 . -2) (undo-tree-id3780 . -5) (undo-tree-id3781 . -4) (undo-tree-id3782 . -6) (undo-tree-id3783 . -5) (undo-tree-id3784 . -6) (undo-tree-id3785 . -6) (undo-tree-id3786 . -6) (undo-tree-id3787 . -6) (undo-tree-id3788 . -6) (undo-tree-id3789 . -6) (undo-tree-id3790 . -6) (undo-tree-id3791 . -6) (undo-tree-id3792 . -6) 3463 (#(" " 0 1 (wrap-prefix "  " fontified t)) . -3463) (undo-tree-id3793 . -1) (undo-tree-id3794 . -1) (undo-tree-id3795 . -1) (undo-tree-id3796 . -1) (undo-tree-id3797 . -1) (undo-tree-id3798 . -1) (undo-tree-id3799 . -1) (undo-tree-id3800 . -1) 3464 (#("N" 0 1 (wrap-prefix "  " fontified t)) . -3464) (undo-tree-id3801 . -1) (undo-tree-id3802 . -1) (undo-tree-id3803 . -1) 3465 (3457 . 3465) (#("first" 0 5 (wrap-prefix "  " fontified t)) . -3457) (undo-tree-id3804 . -5) (undo-tree-id3805 . -1) (undo-tree-id3806 . -2) (undo-tree-id3807 . -1) (undo-tree-id3808 . -3) (undo-tree-id3809 . -2) (undo-tree-id3810 . -4) (undo-tree-id3811 . -3) (undo-tree-id3812 . -5) (undo-tree-id3813 . -4) (undo-tree-id3814 . -5) (undo-tree-id3815 . -5) (undo-tree-id3816 . -5) (undo-tree-id3817 . -5) (undo-tree-id3818 . -5) (undo-tree-id3819 . -5) (undo-tree-id3820 . -5) (undo-tree-id3821 . -5) (undo-tree-id3822 . -5) (undo-tree-id3823 . -5) (undo-tree-id3824 . -5) (undo-tree-id3825 . -5) (undo-tree-id3826 . -5) (undo-tree-id3827 . -5) (undo-tree-id3828 . -5) (undo-tree-id3829 . -5) (undo-tree-id3830 . -5) (undo-tree-id3831 . -5) (undo-tree-id3832 . -5) (undo-tree-id3833 . -5) (undo-tree-id3834 . -5) (undo-tree-id3835 . -5) (undo-tree-id3836 . -5) 3462 (#(" " 0 1 (wrap-prefix "  " fontified t)) . -3462) (undo-tree-id3837 . -1) (undo-tree-id3838 . -1) (undo-tree-id3839 . -1) (undo-tree-id3840 . -1) (undo-tree-id3841 . -1) (undo-tree-id3842 . -1) (undo-tree-id3843 . -1) (undo-tree-id3844 . -1) (undo-tree-id3845 . -1) (undo-tree-id3846 . -1) (undo-tree-id3847 . -1) (undo-tree-id3848 . -1) (undo-tree-id3849 . -1) (undo-tree-id3850 . -1) (undo-tree-id3851 . -1) (undo-tree-id3852 . -1) (undo-tree-id3853 . -1) (undo-tree-id3854 . -1) (undo-tree-id3855 . -1) (undo-tree-id3856 . -1) (undo-tree-id3857 . -1) (undo-tree-id3858 . -1) 3463 (#("sample" 0 6 (wrap-prefix "  " fontified t)) . -3463) (undo-tree-id3859 . -6) (undo-tree-id3860 . -1) (undo-tree-id3861 . -2) (undo-tree-id3862 . -1) (undo-tree-id3863 . -3) (undo-tree-id3864 . -2) (undo-tree-id3865 . -4) (undo-tree-id3866 . -3) (undo-tree-id3867 . -5) (undo-tree-id3868 . -4) (undo-tree-id3869 . -6) (undo-tree-id3870 . -5) (undo-tree-id3871 . -6) (undo-tree-id3872 . -6) (undo-tree-id3873 . -6) (undo-tree-id3874 . -6) (undo-tree-id3875 . -6) 3469 (#(" " 0 1 (wrap-prefix "  " fontified t)) . -3469) (undo-tree-id3876 . -1) (undo-tree-id3877 . -1) (undo-tree-id3878 . -1) (undo-tree-id3879 . -1) 3470 (3455 . 3470) (3436 . 3455) (#("bartc" 0 5 (wrap-prefix "  " fontified t)) . -3436) (undo-tree-id3880 . -5) (undo-tree-id3881 . -1) (undo-tree-id3882 . -2) (undo-tree-id3883 . -1) (undo-tree-id3884 . -3) (undo-tree-id3885 . -2) (undo-tree-id3886 . -4) (undo-tree-id3887 . -3) (undo-tree-id3888 . -5) (undo-tree-id3889 . -4) (undo-tree-id3890 . -5) 3441 (3431 . 3441) (3410 . 3431) (3409 . 3410) (t 26450 9812 428190 124000) 3409) nil (26450 9863 102795 781000) 0 nil])
([nil nil ((3075 . 3076) (#("s" 0 1 (fontified t wrap-prefix "  ")) . 3075)) ((3075 . 3076) (#("u" 0 1 (wrap-prefix "  " fontified t)) . 3075)) (26450 9696 594011 377000) 0 nil])
([nil nil ((3467 . 3480) (#("?" 0 1 (wrap-prefix "  " fontified t)) . -3467) (undo-tree-id3742 . -1) (undo-tree-id3743 . -1) (undo-tree-id3744 . -1) 3468 (3465 . 3468)) nil (26450 9863 100305 354000) 0 nil])
nil
([nil nil ((3481 . 3498)) nil (26450 9863 100291 37000) 0 nil])
([nil nil ((3498 . 3499) 3497) nil (26450 9863 100284 795000) 0 nil])
([nil nil ((#("_" 0 1 (wrap-prefix "  " fontified t)) . 3475) (undo-tree-id3921 . -1) (undo-tree-id3922 . -1) (t 26450 9863 116808 87000)) nil (26450 9877 272757 715000) 0 nil])
([nil nil ((3469 . 3480) (#("samplesize$" 0 11 (wrap-prefix "  " fontified t)) . 3469) (undo-tree-id3891 . 5) (undo-tree-id3892 . -5) (undo-tree-id3893 . -6) (undo-tree-id3894 . -6) (undo-tree-id3895 . -6) (undo-tree-id3896 . -6) (undo-tree-id3897 . -6) (undo-tree-id3898 . -6) (undo-tree-id3899 . -6) (undo-tree-id3900 . -6) (undo-tree-id3901 . -6) (undo-tree-id3902 . -5) (undo-tree-id3903 . -5) (undo-tree-id3904 . -5) (undo-tree-id3905 . -5) (undo-tree-id3906 . -5) (undo-tree-id3907 . -5) (undo-tree-id3908 . -6) (undo-tree-id3909 . -5) (undo-tree-id3910 . -6) (undo-tree-id3911 . -6) (undo-tree-id3912 . -5) (undo-tree-id3913 . -5) (undo-tree-id3914 . -5) (undo-tree-id3915 . -5) (undo-tree-id3916 . -5) (undo-tree-id3917 . -5) (undo-tree-id3918 . -5) (undo-tree-id3919 . -5) (undo-tree-id3920 . -5) 3474) nil (26450 9877 272751 383000) 0 nil])
([nil nil ((3469 . 3480) (#("SampleSize" 0 10 (wrap-prefix "  " fontified t)) . -3469) (undo-tree-id3923 . -10) (undo-tree-id3924 . -10) (undo-tree-id3925 . -10) (undo-tree-id3926 . -10) (undo-tree-id3927 . -10) (undo-tree-id3928 . -10) (undo-tree-id3929 . -10) (undo-tree-id3930 . -10) (undo-tree-id3931 . -10) (undo-tree-id3932 . -10) (undo-tree-id3933 . -10) (undo-tree-id3934 . -10) (undo-tree-id3935 . -10) (undo-tree-id3936 . -10) (undo-tree-id3937 . -10) (undo-tree-id3938 . -10) (undo-tree-id3939 . -10) (undo-tree-id3940 . -10) 3479 (t 26450 9877 288980 867000)) nil (26450 9886 441249 926000) 0 nil])
([nil nil ((3481 . 3486) (t 26450 9886 449092 542000)) nil (26450 9951 543977 498000) 0 nil])
([nil nil ((3603 . 3605) (3599 . 3603) (3581 . 3599) (3560 . 3581) (3539 . 3560) (#("of" 0 2 (wrap-prefix "  " fontified t)) . -3539) (undo-tree-id3992 . -2) (undo-tree-id3993 . -1) (undo-tree-id3994 . -2) (undo-tree-id3995 . -1) (undo-tree-id3996 . -2) (undo-tree-id3997 . -2) (undo-tree-id3998 . -2) (undo-tree-id3999 . -2) (undo-tree-id4000 . -2) (undo-tree-id4001 . -2) (undo-tree-id4002 . -2) (undo-tree-id4003 . -2) (undo-tree-id4004 . -2) (undo-tree-id4005 . -2) (undo-tree-id4006 . -2) (undo-tree-id4007 . -2) (undo-tree-id4008 . -2) (undo-tree-id4009 . -2) (undo-tree-id4010 . -2) (undo-tree-id4011 . -2) (undo-tree-id4012 . -2) (undo-tree-id4013 . -2) (undo-tree-id4014 . -2) 3541 (#(" " 0 1 (wrap-prefix "  " fontified t)) . -3541) (undo-tree-id4015 . -1) (undo-tree-id4016 . -1) (undo-tree-id4017 . -1) (undo-tree-id4018 . -1) (undo-tree-id4019 . -1) (undo-tree-id4020 . -1) (undo-tree-id4021 . -1) (undo-tree-id4022 . -1) (undo-tree-id4023 . -1) (undo-tree-id4024 . -1) (undo-tree-id4025 . -1) (undo-tree-id4026 . -1) (undo-tree-id4027 . -1) (undo-tree-id4028 . -1) (undo-tree-id4029 . -1) (undo-tree-id4030 . -1) (undo-tree-id4031 . -1) (undo-tree-id4032 . -1) 3542 (#("each" 0 4 (wrap-prefix "  " fontified t)) . -3542) (undo-tree-id4033 . -4) (undo-tree-id4034 . -1) (undo-tree-id4035 . -2) (undo-tree-id4036 . -1) (undo-tree-id4037 . -3) (undo-tree-id4038 . -2) (undo-tree-id4039 . -4) (undo-tree-id4040 . -3) (undo-tree-id4041 . -4) (undo-tree-id4042 . -4) (undo-tree-id4043 . -4) (undo-tree-id4044 . -4) (undo-tree-id4045 . -4) 3546 (#(" " 0 1 (wrap-prefix "  " fontified t)) . -3546) (undo-tree-id4046 . -1) (undo-tree-id4047 . -1) (undo-tree-id4048 . -1) (undo-tree-id4049 . -1) 3547 (3542 . 3547) (3521 . 3542) (#("co" 0 2 (wrap-prefix "  " fontified t)) . -3521) (undo-tree-id4050 . -2) (undo-tree-id4051 . -1) (undo-tree-id4052 . -2) (undo-tree-id4053 . -1) (undo-tree-id4054 . -2) 3523 (3515 . 3523) (#(" " 0 1 (wrap-prefix "  " fontified t)) . -3515) (undo-tree-id4055 . -1) (undo-tree-id4056 . -1) (undo-tree-id4057 . -1) 3516 (3503 . 3516)) nil (26450 9951 543972 248000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3647 . 3648) (nil fontified nil 3604 . 3648) (3604 . 3648) 3603) nil (26450 9951 535094 611000) 0 nil])
([nil nil ((3702 . 3704) (3681 . 3702) (#("with" 0 4 (wrap-prefix "  " fontified t)) . -3681) (undo-tree-id3941 . -4) (undo-tree-id3942 . -1) (undo-tree-id3943 . -2) (undo-tree-id3944 . -1) (undo-tree-id3945 . -3) (undo-tree-id3946 . -2) (undo-tree-id3947 . -4) (undo-tree-id3948 . -3) (undo-tree-id3949 . -4) (undo-tree-id3950 . -4) (undo-tree-id3951 . -4) (undo-tree-id3952 . -4) (undo-tree-id3953 . -4) 3685 (#(" " 0 1 (wrap-prefix "  " fontified t)) . -3685) (undo-tree-id3954 . -1) (undo-tree-id3955 . -1) (undo-tree-id3956 . -1) (undo-tree-id3957 . -1) 3686 (3679 . 3686) (#("#" 0 1 (wrap-prefix "  " fontified t)) . -3679) (undo-tree-id3958 . -1) (undo-tree-id3959 . -1) (undo-tree-id3960 . -1) (undo-tree-id3961 . -1) (undo-tree-id3962 . -1) (undo-tree-id3963 . -1) (undo-tree-id3964 . -1) (#(" " 0 1 (wrap-prefix "  " fontified t)) . -3680) (undo-tree-id3965 . -1) (undo-tree-id3966 . -1) (undo-tree-id3967 . -1) 3681 (3679 . 3681) (#("#" 0 1 (wrap-prefix "  " fontified t)) . -3679) (undo-tree-id3968 . -1) (undo-tree-id3969 . -1) (undo-tree-id3970 . -1) (undo-tree-id3971 . -1) (undo-tree-id3972 . -1) (undo-tree-id3973 . -1) (#("$" 0 1 (wrap-prefix "  " fontified t)) . -3680) (undo-tree-id3974 . -1) (undo-tree-id3975 . -1) (undo-tree-id3976 . -1) 3681 (3680 . 3681) (3659 . 3680) (#("use" 0 3 (wrap-prefix "  " fontified t)) . -3659) (undo-tree-id3977 . -3) (undo-tree-id3978 . -1) (undo-tree-id3979 . -2) (undo-tree-id3980 . -1) (undo-tree-id3981 . -3) (undo-tree-id3982 . -2) (undo-tree-id3983 . -3) (undo-tree-id3984 . -3) (undo-tree-id3985 . -3) (undo-tree-id3986 . -3) (undo-tree-id3987 . -3) 3662 (#(" " 0 1 (wrap-prefix "  " fontified t)) . -3662) (undo-tree-id3988 . -1) (undo-tree-id3989 . -1) (undo-tree-id3990 . -1) (undo-tree-id3991 . -1) 3663 (3649 . 3663)) nil (26450 9951 535087 127000) 0 nil])
([nil nil ((3745 . 3750) (#("proices" 0 7 (wrap-prefix "  " fontified t)) . -3745) (undo-tree-id4058 . -7) (undo-tree-id4059 . -1) (undo-tree-id4060 . -2) (undo-tree-id4061 . -1) (undo-tree-id4062 . -3) (undo-tree-id4063 . -2) (undo-tree-id4064 . -4) (undo-tree-id4065 . -3) (undo-tree-id4066 . -5) (undo-tree-id4067 . -4) (undo-tree-id4068 . -6) (undo-tree-id4069 . -5) (undo-tree-id4070 . -7) (undo-tree-id4071 . -6) (undo-tree-id4072 . -7) 3752 (3745 . 3752) (#("r" 0 1 (wrap-prefix "  " fontified t)) . -3745) (undo-tree-id4073 . -1) (undo-tree-id4074 . -1) (undo-tree-id4075 . -1) (undo-tree-id4076 . -1) (undo-tree-id4077 . -1) (undo-tree-id4078 . -1) (undo-tree-id4079 . -1) (#("p" 0 1 (wrap-prefix "  " fontified t)) . -3746) (undo-tree-id4080 . -1) (undo-tree-id4081 . -1) (undo-tree-id4082 . -1) 3747 (3727 . 3747) (3706 . 3727) (3705 . 3706) (t 26450 9951 556886 295000) 3705) nil (26450 10026 242159 746000) 0 nil])
([nil nil ((3750 . 3751) 3749) nil (26450 10026 242121 884000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3802 . 3803) (nil fontified nil 3751 . 3803) (3751 . 3803) (t 26450 10026 258797 9000)) nil (26450 10117 966306 209000) 0 nil])
([nil nil ((#("callas_" 0 7 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -3791) (undo-tree-id4094 . -7) (undo-tree-id4095 . -7) (undo-tree-id4096 . -7) (undo-tree-id4097 . -7) (undo-tree-id4098 . -7) (undo-tree-id4099 . -7) (undo-tree-id4100 . -7) (undo-tree-id4101 . -7) (undo-tree-id4102 . -7) (undo-tree-id4103 . -7) (undo-tree-id4104 . -7) 3798 (#("psnr" 0 4 (fontified t face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) wrap-prefix "  ")) . -3798) (undo-tree-id4105 . -4) (undo-tree-id4106 . -4) (undo-tree-id4107 . -4) (undo-tree-id4108 . -4) (undo-tree-id4109 . -4) (undo-tree-id4110 . -4) (undo-tree-id4111 . -4) (undo-tree-id4112 . -4) (undo-tree-id4113 . -4) 3802) nil (26450 10117 966301 620000) 0 nil])
([nil nil ((3805 . 3808) (3791 . 3805) (#("sapml" 0 5 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -3791) (undo-tree-id4083 . -5) (undo-tree-id4084 . -1) (undo-tree-id4085 . -2) (undo-tree-id4086 . -1) (undo-tree-id4087 . -3) (undo-tree-id4088 . -2) (undo-tree-id4089 . -4) (undo-tree-id4090 . -3) (undo-tree-id4091 . -5) (undo-tree-id4092 . -4) (undo-tree-id4093 . -5) 3796 (3791 . 3796)) nil (26450 10117 963732 283000) 0 nil])
([nil nil ((3809 . 3810) 3807) nil (26450 10117 963705 693000) 0 nil])
([nil nil ((3022 . 3029) (t 26450 10117 981915 243000)) nil (26450 10152 434374 246000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -3181) (3181 . 3182) (#(")" 0 1 (face (markdown-italic-face) fontified nil wrap-prefix "        ")) . -3181) (3181 . 3182) (3179 . 3182) (t 26450 10152 440335 341000)) nil (26450 10199 10313 455000) 0 nil])
([nil nil ((3202 . 3208) (3181 . 3202)) nil (26450 10199 10312 904000) 0 nil])
([nil nil ((#(" " 0 1 (face (markdown-italic-face) fontified t wrap-prefix "        ")) . -3179) (undo-tree-id4114 . -1) (undo-tree-id4115 . -1) (undo-tree-id4116 . -1) (undo-tree-id4117 . -1) (undo-tree-id4118 . -1) (undo-tree-id4119 . -1) (undo-tree-id4120 . -1) (undo-tree-id4121 . -1) (undo-tree-id4122 . -1) (undo-tree-id4123 . -1) (undo-tree-id4124 . -1) (undo-tree-id4125 . -1) (undo-tree-id4126 . -1) (undo-tree-id4127 . -1) (undo-tree-id4128 . -1) (undo-tree-id4129 . -1) (undo-tree-id4130 . -1) (undo-tree-id4131 . -1) (undo-tree-id4132 . -1) (undo-tree-id4133 . -1) (undo-tree-id4134 . -1) (undo-tree-id4135 . -1) (undo-tree-id4136 . -1) (undo-tree-id4137 . -1) (undo-tree-id4138 . -1) (undo-tree-id4139 . -1) (undo-tree-id4140 . -1) (undo-tree-id4141 . -1) (undo-tree-id4142 . -1) (undo-tree-id4143 . -1) (undo-tree-id4144 . -1) (undo-tree-id4145 . -1) (undo-tree-id4146 . -1) (undo-tree-id4147 . -1) (undo-tree-id4148 . -1) (undo-tree-id4149 . -1) (undo-tree-id4150 . -1) (undo-tree-id4151 . -1) (undo-tree-id4152 . -1) (undo-tree-id4153 . -1) (undo-tree-id4154 . -1) (undo-tree-id4155 . -1) (undo-tree-id4156 . -1) (undo-tree-id4157 . -1) (undo-tree-id4158 . -1) (undo-tree-id4159 . -1) (undo-tree-id4160 . -1) (undo-tree-id4161 . -1) (undo-tree-id4162 . -1) (undo-tree-id4163 . -1) (undo-tree-id4164 . -1) (undo-tree-id4165 . -1) (undo-tree-id4166 . -1) (undo-tree-id4167 . -1) (undo-tree-id4168 . -1) (undo-tree-id4169 . -1) (undo-tree-id4170 . -1) (undo-tree-id4171 . -1) (undo-tree-id4172 . -1) (undo-tree-id4173 . -1) (undo-tree-id4174 . -1) (undo-tree-id4175 . -1) (undo-tree-id4176 . -1) (undo-tree-id4177 . -1) (undo-tree-id4178 . -1) (undo-tree-id4179 . -1) (undo-tree-id4180 . -1) (undo-tree-id4181 . -1) (undo-tree-id4182 . -1) (undo-tree-id4183 . -1) (undo-tree-id4184 . -1) (undo-tree-id4185 . -1) (undo-tree-id4186 . -1) (undo-tree-id4187 . -1) (undo-tree-id4188 . -1) (undo-tree-id4189 . -1) (undo-tree-id4190 . -1) (undo-tree-id4191 . -1) (undo-tree-id4192 . -1) (undo-tree-id4193 . -1) (undo-tree-id4194 . -1) (undo-tree-id4195 . -1) (undo-tree-id4196 . -1) (undo-tree-id4197 . -1) (undo-tree-id4198 . -1) (undo-tree-id4199 . -1) (undo-tree-id4200 . -1) (undo-tree-id4201 . -1) (undo-tree-id4202 . -1) (undo-tree-id4203 . -1) (undo-tree-id4204 . -1) (undo-tree-id4205 . -1) (undo-tree-id4206 . -1) (undo-tree-id4207 . -1) (undo-tree-id4208 . -1) (undo-tree-id4209 . -1) (undo-tree-id4210 . -1) (undo-tree-id4211 . -1) (undo-tree-id4212 . -1) (undo-tree-id4213 . -1) (undo-tree-id4214 . -1) (undo-tree-id4215 . -1) (undo-tree-id4216 . -1) (undo-tree-id4217 . -1) (undo-tree-id4218 . -1) (undo-tree-id4219 . -1) (undo-tree-id4220 . -1) (undo-tree-id4221 . -1) 3180 (#("(" 0 1 (face (markdown-italic-face) fontified nil wrap-prefix "        ")) . -3180) (undo-tree-id4222 . -1) (undo-tree-id4223 . -1) (undo-tree-id4224 . -1) (undo-tree-id4225 . -1) (undo-tree-id4226 . -1) (undo-tree-id4227 . -1) (undo-tree-id4228 . -1) (undo-tree-id4229 . -1) (undo-tree-id4230 . -1) (undo-tree-id4231 . -1) (undo-tree-id4232 . -1) (undo-tree-id4233 . -1) (undo-tree-id4234 . -1) (undo-tree-id4235 . -1) (undo-tree-id4236 . -1) (undo-tree-id4237 . -1) (undo-tree-id4238 . -1) (undo-tree-id4239 . -1) (undo-tree-id4240 . -1) (undo-tree-id4241 . -1) (undo-tree-id4242 . -1) (undo-tree-id4243 . -1) (undo-tree-id4244 . -1) (undo-tree-id4245 . -1) (undo-tree-id4246 . -1) (undo-tree-id4247 . -1) (undo-tree-id4248 . -1) (undo-tree-id4249 . -1) (undo-tree-id4250 . -1) (undo-tree-id4251 . -1) (undo-tree-id4252 . -1) (undo-tree-id4253 . -1) (undo-tree-id4254 . -1) (undo-tree-id4255 . -1) (undo-tree-id4256 . -1) (undo-tree-id4257 . -1) (undo-tree-id4258 . -1) (undo-tree-id4259 . -1) (undo-tree-id4260 . -1) (undo-tree-id4261 . -1) (undo-tree-id4262 . -1) (undo-tree-id4263 . -1) (undo-tree-id4264 . -1) (undo-tree-id4265 . -1) (undo-tree-id4266 . -1) (undo-tree-id4267 . -1) (undo-tree-id4268 . -1) (undo-tree-id4269 . -1) (undo-tree-id4270 . -1) (undo-tree-id4271 . -1) (undo-tree-id4272 . -1) (undo-tree-id4273 . -1) (undo-tree-id4274 . -1) (undo-tree-id4275 . -1) (undo-tree-id4276 . -1) (undo-tree-id4277 . -1) (undo-tree-id4278 . -1) (undo-tree-id4279 . -1) (undo-tree-id4280 . -1) (undo-tree-id4281 . -1) (undo-tree-id4282 . -1) (undo-tree-id4283 . -1) (undo-tree-id4284 . -1) (undo-tree-id4285 . -1) (undo-tree-id4286 . -1) (undo-tree-id4287 . -1) (undo-tree-id4288 . -1) (undo-tree-id4289 . -1) (undo-tree-id4290 . -1) (undo-tree-id4291 . -1) (undo-tree-id4292 . -1) (undo-tree-id4293 . -1) (undo-tree-id4294 . -1) (undo-tree-id4295 . -1) (undo-tree-id4296 . -1) (undo-tree-id4297 . -1) (undo-tree-id4298 . -1) (undo-tree-id4299 . -1) (undo-tree-id4300 . -1) (undo-tree-id4301 . -1) (undo-tree-id4302 . -1) (undo-tree-id4303 . -1) (undo-tree-id4304 . -1) (undo-tree-id4305 . -1) (undo-tree-id4306 . -1) (undo-tree-id4307 . -1) (undo-tree-id4308 . -1) (undo-tree-id4309 . -1) (undo-tree-id4310 . -1) (undo-tree-id4311 . -1) (undo-tree-id4312 . -1) (undo-tree-id4313 . -1) (undo-tree-id4314 . -1) (undo-tree-id4315 . -1) (undo-tree-id4316 . -1) (undo-tree-id4317 . -1) (undo-tree-id4318 . -1) (undo-tree-id4319 . -1) (undo-tree-id4320 . -1) (undo-tree-id4321 . -1) (undo-tree-id4322 . -1) (undo-tree-id4323 . -1) (undo-tree-id4324 . -1) (#(")" 0 1 (face (markdown-italic-face) fontified t wrap-prefix "        ")) . 3181) (undo-tree-id4325 . 1) (undo-tree-id4326 . -1) (#("i" 0 1 (face (markdown-italic-face) fontified t wrap-prefix "        ")) . -3181) (undo-tree-id4327 . -1) (undo-tree-id4328 . -1) (undo-tree-id4329 . -1) (undo-tree-id4330 . -1) (undo-tree-id4331 . -1) (undo-tree-id4332 . -1) (undo-tree-id4333 . -1) (undo-tree-id4334 . -1) (undo-tree-id4335 . -1) (undo-tree-id4336 . -1) (undo-tree-id4337 . -1) (undo-tree-id4338 . -1) (undo-tree-id4339 . -1) (undo-tree-id4340 . -1) (undo-tree-id4341 . -1) (undo-tree-id4342 . -1) (undo-tree-id4343 . -1) (undo-tree-id4344 . -1) (undo-tree-id4345 . -1) (undo-tree-id4346 . -1) (undo-tree-id4347 . -1) (undo-tree-id4348 . -1) (undo-tree-id4349 . -1) (undo-tree-id4350 . -1) (undo-tree-id4351 . -1) (undo-tree-id4352 . -1) (undo-tree-id4353 . -1) (undo-tree-id4354 . -1) (undo-tree-id4355 . -1) (undo-tree-id4356 . -1) (undo-tree-id4357 . -1) (undo-tree-id4358 . -1) (undo-tree-id4359 . -1) (undo-tree-id4360 . -1) (undo-tree-id4361 . -1) (undo-tree-id4362 . -1) (undo-tree-id4363 . -1) (undo-tree-id4364 . -1) (undo-tree-id4365 . -1) (undo-tree-id4366 . -1) (undo-tree-id4367 . -1) (undo-tree-id4368 . -1) (undo-tree-id4369 . -1) (undo-tree-id4370 . -1) (undo-tree-id4371 . -1) (undo-tree-id4372 . -1) (undo-tree-id4373 . -1) (undo-tree-id4374 . -1) (undo-tree-id4375 . -1) (undo-tree-id4376 . -1) (undo-tree-id4377 . -1) (undo-tree-id4378 . -1) (undo-tree-id4379 . -1) (undo-tree-id4380 . -1) (undo-tree-id4381 . -1) (undo-tree-id4382 . -1) (undo-tree-id4383 . -1) (undo-tree-id4384 . -1) (undo-tree-id4385 . -1) (undo-tree-id4386 . -1) (undo-tree-id4387 . -1) (undo-tree-id4388 . -1) (undo-tree-id4389 . -1) (undo-tree-id4390 . -1) (undo-tree-id4391 . -1) (undo-tree-id4392 . -1) (undo-tree-id4393 . -1) (undo-tree-id4394 . -1) (undo-tree-id4395 . -1) (undo-tree-id4396 . -1) (undo-tree-id4397 . -1) (undo-tree-id4398 . -1) (undo-tree-id4399 . -1) (undo-tree-id4400 . -1) (undo-tree-id4401 . -1) (undo-tree-id4402 . -1) (undo-tree-id4403 . -1) (undo-tree-id4404 . -1) (undo-tree-id4405 . -1) (undo-tree-id4406 . -1) (undo-tree-id4407 . -1) (undo-tree-id4408 . -1) (undo-tree-id4409 . -1) (undo-tree-id4410 . -1) (undo-tree-id4411 . -1) (undo-tree-id4412 . -1) (undo-tree-id4413 . -1) (#("." 0 1 (face (markdown-italic-face) fontified t wrap-prefix "        ")) . -3182) (undo-tree-id4414 . -1) (undo-tree-id4415 . -1) (undo-tree-id4416 . -1) (undo-tree-id4417 . -1) (undo-tree-id4418 . -1) (undo-tree-id4419 . -1) (undo-tree-id4420 . -1) (undo-tree-id4421 . -1) (undo-tree-id4422 . -1) (undo-tree-id4423 . -1) (undo-tree-id4424 . -1) (undo-tree-id4425 . -1) (undo-tree-id4426 . -1) (undo-tree-id4427 . -1) (undo-tree-id4428 . -1) (undo-tree-id4429 . -1) (undo-tree-id4430 . -1) (undo-tree-id4431 . -1) (undo-tree-id4432 . -1) (undo-tree-id4433 . -1) (undo-tree-id4434 . -1) (undo-tree-id4435 . -1) (undo-tree-id4436 . -1) (undo-tree-id4437 . -1) (undo-tree-id4438 . -1) (undo-tree-id4439 . -1) (undo-tree-id4440 . -1) (undo-tree-id4441 . -1) (undo-tree-id4442 . -1) (undo-tree-id4443 . -1) (undo-tree-id4444 . -1) (undo-tree-id4445 . -1) (undo-tree-id4446 . -1) (undo-tree-id4447 . -1) (undo-tree-id4448 . -1) (undo-tree-id4449 . -1) (undo-tree-id4450 . -1) (undo-tree-id4451 . -1) (undo-tree-id4452 . -1) (undo-tree-id4453 . -1) (undo-tree-id4454 . -1) (undo-tree-id4455 . -1) (undo-tree-id4456 . -1) (undo-tree-id4457 . -1) (undo-tree-id4458 . -1) (undo-tree-id4459 . -1) (undo-tree-id4460 . -1) (undo-tree-id4461 . -1) (undo-tree-id4462 . -1) (undo-tree-id4463 . -1) (undo-tree-id4464 . -1) (undo-tree-id4465 . -1) (undo-tree-id4466 . -1) (undo-tree-id4467 . -1) (undo-tree-id4468 . -1) (undo-tree-id4469 . -1) (undo-tree-id4470 . -1) (undo-tree-id4471 . -1) (undo-tree-id4472 . -1) (undo-tree-id4473 . -1) (undo-tree-id4474 . -1) (undo-tree-id4475 . -1) (undo-tree-id4476 . -1) (undo-tree-id4477 . -1) (undo-tree-id4478 . -1) (undo-tree-id4479 . -1) (undo-tree-id4480 . -1) (undo-tree-id4481 . -1) (undo-tree-id4482 . -1) (undo-tree-id4483 . -1) (undo-tree-id4484 . -1) (undo-tree-id4485 . -1) (undo-tree-id4486 . -1) (undo-tree-id4487 . -1) (undo-tree-id4488 . -1) (undo-tree-id4489 . -1) (undo-tree-id4490 . -1) (undo-tree-id4491 . -1) (undo-tree-id4492 . -1) (undo-tree-id4493 . -1) (undo-tree-id4494 . -1) (undo-tree-id4495 . -1) (undo-tree-id4496 . -1) 3183 (#("e." 0 2 (face (markdown-italic-face) fontified t wrap-prefix "        ")) . -3183) (undo-tree-id4497 . -2) (undo-tree-id4498 . -1) (undo-tree-id4499 . -2) (undo-tree-id4500 . -1) (undo-tree-id4501 . -2) (undo-tree-id4502 . -2) (undo-tree-id4503 . -2) (undo-tree-id4504 . -2) (undo-tree-id4505 . -2) (undo-tree-id4506 . -2) (undo-tree-id4507 . -2) (undo-tree-id4508 . -2) (undo-tree-id4509 . -2) (undo-tree-id4510 . -2) (undo-tree-id4511 . -2) (undo-tree-id4512 . -2) (undo-tree-id4513 . -2) (undo-tree-id4514 . -2) (undo-tree-id4515 . -2) (undo-tree-id4516 . -2) (undo-tree-id4517 . -2) (undo-tree-id4518 . -2) (undo-tree-id4519 . -2) (undo-tree-id4520 . -2) (undo-tree-id4521 . -2) (undo-tree-id4522 . -2) (undo-tree-id4523 . -2) (undo-tree-id4524 . -2) (undo-tree-id4525 . -2) (undo-tree-id4526 . -2) (undo-tree-id4527 . -2) (undo-tree-id4528 . -2) (undo-tree-id4529 . -2) (undo-tree-id4530 . -2) (undo-tree-id4531 . -2) (undo-tree-id4532 . -2) (undo-tree-id4533 . -2) (undo-tree-id4534 . -2) (undo-tree-id4535 . -2) (undo-tree-id4536 . -2) (undo-tree-id4537 . -2) (undo-tree-id4538 . -2) (undo-tree-id4539 . -2) (undo-tree-id4540 . -2) (undo-tree-id4541 . -2) (undo-tree-id4542 . -2) (undo-tree-id4543 . -2) (undo-tree-id4544 . -2) (undo-tree-id4545 . -2) (undo-tree-id4546 . -2) (undo-tree-id4547 . -2) (undo-tree-id4548 . -2) (undo-tree-id4549 . -2) (undo-tree-id4550 . -2) (undo-tree-id4551 . -2) (undo-tree-id4552 . -2) (undo-tree-id4553 . -2) (undo-tree-id4554 . -2) (undo-tree-id4555 . -2) (undo-tree-id4556 . -2) (undo-tree-id4557 . -2) (undo-tree-id4558 . -2) (undo-tree-id4559 . -2) (undo-tree-id4560 . -2) (undo-tree-id4561 . -2) (undo-tree-id4562 . -2) (undo-tree-id4563 . -2) (undo-tree-id4564 . -2) (undo-tree-id4565 . -2) (undo-tree-id4566 . -2) (undo-tree-id4567 . -2) (undo-tree-id4568 . -2) (undo-tree-id4569 . -2) (undo-tree-id4570 . -2) (undo-tree-id4571 . -2) (undo-tree-id4572 . -2) (undo-tree-id4573 . -2) (undo-tree-id4574 . -2) (undo-tree-id4575 . -2) 3185 (#(" " 0 1 (face (markdown-italic-face) fontified t wrap-prefix "        ")) . -3185) (undo-tree-id4576 . -1) (undo-tree-id4577 . -1) (undo-tree-id4578 . -1) (undo-tree-id4579 . -1) (undo-tree-id4580 . -1) (undo-tree-id4581 . -1) (undo-tree-id4582 . -1) (undo-tree-id4583 . -1) (undo-tree-id4584 . -1) (undo-tree-id4585 . -1) (undo-tree-id4586 . -1) (undo-tree-id4587 . -1) (undo-tree-id4588 . -1) (undo-tree-id4589 . -1) (undo-tree-id4590 . -1) (undo-tree-id4591 . -1) (undo-tree-id4592 . -1) (undo-tree-id4593 . -1) (undo-tree-id4594 . -1) (undo-tree-id4595 . -1) (undo-tree-id4596 . -1) (undo-tree-id4597 . -1) (undo-tree-id4598 . -1) (undo-tree-id4599 . -1) (undo-tree-id4600 . -1) (undo-tree-id4601 . -1) (undo-tree-id4602 . -1) (undo-tree-id4603 . -1) (undo-tree-id4604 . -1) (undo-tree-id4605 . -1) (undo-tree-id4606 . -1) (undo-tree-id4607 . -1) (undo-tree-id4608 . -1) (undo-tree-id4609 . -1) (undo-tree-id4610 . -1) (undo-tree-id4611 . -1) (undo-tree-id4612 . -1) (undo-tree-id4613 . -1) (undo-tree-id4614 . -1) (undo-tree-id4615 . -1) (undo-tree-id4616 . -1) (undo-tree-id4617 . -1) (undo-tree-id4618 . -1) (undo-tree-id4619 . -1) (undo-tree-id4620 . -1) (undo-tree-id4621 . -1) (undo-tree-id4622 . -1) (undo-tree-id4623 . -1) (undo-tree-id4624 . -1) (undo-tree-id4625 . -1) (undo-tree-id4626 . -1) (undo-tree-id4627 . -1) (undo-tree-id4628 . -1) (undo-tree-id4629 . -1) (undo-tree-id4630 . -1) (undo-tree-id4631 . -1) (undo-tree-id4632 . -1) (undo-tree-id4633 . -1) (undo-tree-id4634 . -1) (undo-tree-id4635 . -1) (undo-tree-id4636 . -1) (undo-tree-id4637 . -1) (undo-tree-id4638 . -1) (undo-tree-id4639 . -1) (undo-tree-id4640 . -1) (undo-tree-id4641 . -1) (undo-tree-id4642 . -1) (undo-tree-id4643 . -1) (undo-tree-id4644 . -1) (undo-tree-id4645 . -1) (undo-tree-id4646 . -1) (undo-tree-id4647 . -1) (undo-tree-id4648 . -1) (undo-tree-id4649 . -1) 3186 (#("the" 0 3 (face (markdown-italic-face) fontified t wrap-prefix "        ")) . -3186) (undo-tree-id4650 . -3) (undo-tree-id4651 . -1) (undo-tree-id4652 . -2) (undo-tree-id4653 . -1) (undo-tree-id4654 . -3) (undo-tree-id4655 . -2) (undo-tree-id4656 . -3) (undo-tree-id4657 . -3) (undo-tree-id4658 . -3) (undo-tree-id4659 . -3) (undo-tree-id4660 . -3) (undo-tree-id4661 . -3) (undo-tree-id4662 . -3) (undo-tree-id4663 . -3) (undo-tree-id4664 . -3) (undo-tree-id4665 . -3) (undo-tree-id4666 . -3) (undo-tree-id4667 . -3) (undo-tree-id4668 . -3) (undo-tree-id4669 . -3) (undo-tree-id4670 . -3) (undo-tree-id4671 . -3) (undo-tree-id4672 . -3) (undo-tree-id4673 . -3) (undo-tree-id4674 . -3) (undo-tree-id4675 . -3) (undo-tree-id4676 . -3) (undo-tree-id4677 . -3) (undo-tree-id4678 . -3) (undo-tree-id4679 . -3) (undo-tree-id4680 . -3) (undo-tree-id4681 . -3) (undo-tree-id4682 . -3) (undo-tree-id4683 . -3) (undo-tree-id4684 . -3) (undo-tree-id4685 . -3) (undo-tree-id4686 . -3) (undo-tree-id4687 . -3) (undo-tree-id4688 . -3) (undo-tree-id4689 . -3) (undo-tree-id4690 . -3) (undo-tree-id4691 . -3) (undo-tree-id4692 . -3) (undo-tree-id4693 . -3) (undo-tree-id4694 . -3) (undo-tree-id4695 . -3) (undo-tree-id4696 . -3) (undo-tree-id4697 . -3) (undo-tree-id4698 . -3) (undo-tree-id4699 . -3) (undo-tree-id4700 . -3) (undo-tree-id4701 . -3) (undo-tree-id4702 . -3) (undo-tree-id4703 . -3) (undo-tree-id4704 . -3) (undo-tree-id4705 . -3) (undo-tree-id4706 . -3) (undo-tree-id4707 . -3) (undo-tree-id4708 . -3) (undo-tree-id4709 . -3) (undo-tree-id4710 . -3) (undo-tree-id4711 . -3) (undo-tree-id4712 . -3) (undo-tree-id4713 . -3) (undo-tree-id4714 . -3) (undo-tree-id4715 . -3) (undo-tree-id4716 . -3) (undo-tree-id4717 . -3) (undo-tree-id4718 . -3) 3189 (#(" " 0 1 (face (markdown-italic-face) fontified t wrap-prefix "        ")) . -3189) (undo-tree-id4719 . -1) (undo-tree-id4720 . -1) (undo-tree-id4721 . -1) (undo-tree-id4722 . -1) (undo-tree-id4723 . -1) (undo-tree-id4724 . -1) (undo-tree-id4725 . -1) (undo-tree-id4726 . -1) (undo-tree-id4727 . -1) (undo-tree-id4728 . -1) (undo-tree-id4729 . -1) (undo-tree-id4730 . -1) (undo-tree-id4731 . -1) (undo-tree-id4732 . -1) (undo-tree-id4733 . -1) (undo-tree-id4734 . -1) (undo-tree-id4735 . -1) (undo-tree-id4736 . -1) (undo-tree-id4737 . -1) (undo-tree-id4738 . -1) (undo-tree-id4739 . -1) (undo-tree-id4740 . -1) (undo-tree-id4741 . -1) (undo-tree-id4742 . -1) (undo-tree-id4743 . -1) (undo-tree-id4744 . -1) (undo-tree-id4745 . -1) (undo-tree-id4746 . -1) (undo-tree-id4747 . -1) (undo-tree-id4748 . -1) (undo-tree-id4749 . -1) (undo-tree-id4750 . -1) (undo-tree-id4751 . -1) (undo-tree-id4752 . -1) (undo-tree-id4753 . -1) (undo-tree-id4754 . -1) (undo-tree-id4755 . -1) (undo-tree-id4756 . -1) (undo-tree-id4757 . -1) (undo-tree-id4758 . -1) (undo-tree-id4759 . -1) (undo-tree-id4760 . -1) (undo-tree-id4761 . -1) (undo-tree-id4762 . -1) (undo-tree-id4763 . -1) (undo-tree-id4764 . -1) (undo-tree-id4765 . -1) (undo-tree-id4766 . -1) (undo-tree-id4767 . -1) (undo-tree-id4768 . -1) (undo-tree-id4769 . -1) (undo-tree-id4770 . -1) (undo-tree-id4771 . -1) (undo-tree-id4772 . -1) (undo-tree-id4773 . -1) (undo-tree-id4774 . -1) (undo-tree-id4775 . -1) (undo-tree-id4776 . -1) (undo-tree-id4777 . -1) (undo-tree-id4778 . -1) (undo-tree-id4779 . -1) (undo-tree-id4780 . -1) 3190 (#("translation" 0 11 (face (markdown-italic-face) fontified t wrap-prefix "        ")) . -3190) (undo-tree-id4781 . -11) (undo-tree-id4782 . -1) (undo-tree-id4783 . -2) (undo-tree-id4784 . -1) (undo-tree-id4785 . -3) (undo-tree-id4786 . -2) (undo-tree-id4787 . -4) (undo-tree-id4788 . -3) (undo-tree-id4789 . -5) (undo-tree-id4790 . -4) (undo-tree-id4791 . -6) (undo-tree-id4792 . -5) (undo-tree-id4793 . -7) (undo-tree-id4794 . -6) (undo-tree-id4795 . -8) (undo-tree-id4796 . -7) (undo-tree-id4797 . -9) (undo-tree-id4798 . -8) (undo-tree-id4799 . -10) (undo-tree-id4800 . -9) (undo-tree-id4801 . -11) (undo-tree-id4802 . -10) (undo-tree-id4803 . -11) (undo-tree-id4804 . -11) (undo-tree-id4805 . -11) (undo-tree-id4806 . -11) (undo-tree-id4807 . -11) (undo-tree-id4808 . -11) (undo-tree-id4809 . -11) (undo-tree-id4810 . -11) (undo-tree-id4811 . -11) (undo-tree-id4812 . -11) (undo-tree-id4813 . -11) (undo-tree-id4814 . -11) (undo-tree-id4815 . -11) (undo-tree-id4816 . -11) (undo-tree-id4817 . -11) (undo-tree-id4818 . -11) (undo-tree-id4819 . -11) (undo-tree-id4820 . -11) (undo-tree-id4821 . -11) (undo-tree-id4822 . -11) (undo-tree-id4823 . -11) (undo-tree-id4824 . -11) (undo-tree-id4825 . -11) (undo-tree-id4826 . -11) (undo-tree-id4827 . -11) (undo-tree-id4828 . -11) (undo-tree-id4829 . -11) (undo-tree-id4830 . -11) (undo-tree-id4831 . -11) (undo-tree-id4832 . -11) (undo-tree-id4833 . -11) (undo-tree-id4834 . -11) (undo-tree-id4835 . -11) (undo-tree-id4836 . -11) (undo-tree-id4837 . -11) 3201 (#(" " 0 1 (face (markdown-italic-face) fontified t wrap-prefix "        ")) . -3201) (undo-tree-id4838 . -1) (undo-tree-id4839 . -1) (undo-tree-id4840 . -1) (undo-tree-id4841 . -1) (undo-tree-id4842 . -1) (undo-tree-id4843 . -1) (undo-tree-id4844 . -1) (undo-tree-id4845 . -1) (undo-tree-id4846 . -1) (undo-tree-id4847 . -1) (undo-tree-id4848 . -1) (undo-tree-id4849 . -1) (undo-tree-id4850 . -1) (undo-tree-id4851 . -1) (undo-tree-id4852 . -1) (undo-tree-id4853 . -1) (undo-tree-id4854 . -1) (undo-tree-id4855 . -1) (undo-tree-id4856 . -1) (undo-tree-id4857 . -1) (undo-tree-id4858 . -1) (undo-tree-id4859 . -1) (undo-tree-id4860 . -1) (undo-tree-id4861 . -1) (undo-tree-id4862 . -1) (undo-tree-id4863 . -1) (undo-tree-id4864 . -1) (undo-tree-id4865 . -1) (undo-tree-id4866 . -1) (undo-tree-id4867 . -1) (undo-tree-id4868 . -1) (undo-tree-id4869 . -1) (undo-tree-id4870 . -1) (undo-tree-id4871 . -1) 3202 (#("vector" 0 6 (face (markdown-italic-face) fontified t wrap-prefix "        ")) . 3202) (undo-tree-id4872 . -5) (undo-tree-id4873 . -1) (undo-tree-id4874 . -2) (undo-tree-id4875 . -1) (undo-tree-id4876 . -3) (undo-tree-id4877 . -2) (undo-tree-id4878 . -4) (undo-tree-id4879 . -3) (undo-tree-id4880 . -4) (undo-tree-id4881 . -5) (undo-tree-id4882 . -4) (undo-tree-id4883 . -5) (undo-tree-id4884 . -6) (undo-tree-id4885 . -5) (undo-tree-id4886 . -6) (undo-tree-id4887 . -6) (undo-tree-id4888 . -6) (undo-tree-id4889 . -6) (undo-tree-id4890 . -5) (undo-tree-id4891 . -5) (undo-tree-id4892 . -5) (undo-tree-id4893 . -5) (undo-tree-id4894 . -5) (undo-tree-id4895 . -5) (undo-tree-id4896 . -5) (undo-tree-id4897 . -5) (undo-tree-id4898 . -5) 3207) nil (26450 10199 10297 234000) 0 nil])
([nil nil ((3851 . 3852) (3850 . 3851) (3839 . 3850) (3818 . 3839) (3817 . 3818) (t 26450 10199 22903 246000) 3817) nil (26450 10270 140472 915000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3852 . 3853) (#("
" 0 1 (fontified nil wrap-prefix "  ")) . -3911) (3852 . 3912) 3851) nil (26450 10270 140471 382000) 0 nil])
([nil nil ((#(" 
" 0 1 (wrap-prefix "   " fontified t) 1 2 (wrap-prefix "   " fontified t)) . 3851) (undo-tree-id4927 . -2) (undo-tree-id4928 . -1) (undo-tree-id4929 . -2) (undo-tree-id4930 . -2) (undo-tree-id4931 . -2) (undo-tree-id4932 . -2)) nil (26450 10270 140468 837000) 0 nil])
([nil nil ((3758 . 3759)) nil (26450 10270 137425 272000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix "  " fontified t)) . 3758) (undo-tree-id4926 . 1)) nil (26450 10270 137424 99000) 0 nil])
([nil nil ((3891 . 3905) (#("sampling_" 0 9 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -3891) (undo-tree-id4899 . -9) (undo-tree-id4900 . -9) (undo-tree-id4901 . -9) (undo-tree-id4902 . -9) (undo-tree-id4903 . -9) (undo-tree-id4904 . -9) (undo-tree-id4905 . -9) (undo-tree-id4906 . -9) (undo-tree-id4907 . -9) (undo-tree-id4908 . -9) (undo-tree-id4909 . -9) 3900 (#("rays." 0 5 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -3900) (undo-tree-id4910 . -5) (undo-tree-id4911 . -5) (undo-tree-id4912 . -5) (undo-tree-id4913 . -5) (undo-tree-id4914 . -5) (undo-tree-id4915 . -5) (undo-tree-id4916 . -5) (undo-tree-id4917 . -5) (undo-tree-id4918 . -5) 3905 (#("jpg" 0 3 (fontified t face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) wrap-prefix "  ")) . -3905) (undo-tree-id4919 . -3) (undo-tree-id4920 . -3) (undo-tree-id4921 . -3) (undo-tree-id4922 . -3) (undo-tree-id4923 . -3) (undo-tree-id4924 . -3) (undo-tree-id4925 . -3) 3908) nil (26450 10270 137420 372000) 0 nil])
([nil nil ((3906 . 3907) 3904) nil (26450 10270 137381 960000) 0 nil])
([nil nil ((3924 . 3926) (#("a" 0 1 (wrap-prefix "  " fontified t)) . -3924) (undo-tree-id5047 . -1) (undo-tree-id5048 . -1) (undo-tree-id5049 . -1) (undo-tree-id5050 . -1) (undo-tree-id5051 . -1) (undo-tree-id5052 . -1) (undo-tree-id5053 . -1) (undo-tree-id5054 . -1) (undo-tree-id5055 . -1) (undo-tree-id5056 . -1) (undo-tree-id5057 . -1) (undo-tree-id5058 . -1) (undo-tree-id5059 . -1) (undo-tree-id5060 . -1) (undo-tree-id5061 . -1) (undo-tree-id5062 . -1) (undo-tree-id5063 . -1) (undo-tree-id5064 . -1) (undo-tree-id5065 . -1) (#("n" 0 1 (wrap-prefix "  " fontified t)) . -3925) (undo-tree-id5066 . -1) (undo-tree-id5067 . -1) (undo-tree-id5068 . -1) (undo-tree-id5069 . -1) (undo-tree-id5070 . -1) (undo-tree-id5071 . -1) (undo-tree-id5072 . -1) (undo-tree-id5073 . -1) (undo-tree-id5074 . -1) (undo-tree-id5075 . -1) (undo-tree-id5076 . -1) (undo-tree-id5077 . -1) (undo-tree-id5078 . -1) (undo-tree-id5079 . -1) (undo-tree-id5080 . -1) (#(" " 0 1 (wrap-prefix "  " fontified t)) . -3926) (undo-tree-id5081 . -1) (undo-tree-id5082 . -1) (undo-tree-id5083 . -1) (undo-tree-id5084 . -1) (undo-tree-id5085 . -1) (undo-tree-id5086 . -1) (undo-tree-id5087 . -1) (undo-tree-id5088 . -1) (undo-tree-id5089 . -1) (undo-tree-id5090 . -1) (undo-tree-id5091 . -1) (#("$" 0 1 (wrap-prefix "  " fontified t)) . -3927) (undo-tree-id5092 . -1) (undo-tree-id5093 . -1) (undo-tree-id5094 . -1) (undo-tree-id5095 . -1) (undo-tree-id5096 . -1) (undo-tree-id5097 . -1) (undo-tree-id5098 . -1) (#("$" 0 1 (wrap-prefix "  " fontified t)) . -3928) (undo-tree-id5099 . -1) (undo-tree-id5100 . -1) (undo-tree-id5101 . -1) 3929 (3908 . 3929) (3907 . 3908) (3906 . 3907) (t 26450 10270 156770 472000) 3905) nil (26450 10337 701547 548000) 0 nil])
([nil nil ((3925 . 3929)) nil (26450 10337 698801 165000) 0 nil])
([nil nil ((#("For $x$, we use $L=10$
" 0 22 (wrap-prefix "  " fontified t) 22 23 (wrap-prefix "  " fontified t)) . 3908) (undo-tree-id4943 . 1) (undo-tree-id4944 . -12) (undo-tree-id4945 . -1) (undo-tree-id4946 . -2) (undo-tree-id4947 . -1) (undo-tree-id4948 . -3) (undo-tree-id4949 . -2) (undo-tree-id4950 . -4) (undo-tree-id4951 . -3) (undo-tree-id4952 . -5) (undo-tree-id4953 . -4) (undo-tree-id4954 . -6) (undo-tree-id4955 . -5) (undo-tree-id4956 . -7) (undo-tree-id4957 . -6) (undo-tree-id4958 . -8) (undo-tree-id4959 . -7) (undo-tree-id4960 . -9) (undo-tree-id4961 . -8) (undo-tree-id4962 . -10) (undo-tree-id4963 . -9) (undo-tree-id4964 . -11) (undo-tree-id4965 . -10) (undo-tree-id4966 . -12) (undo-tree-id4967 . -11) (undo-tree-id4968 . -13) (undo-tree-id4969 . -12) (undo-tree-id4970 . -14) (undo-tree-id4971 . -13) (undo-tree-id4972 . -15) (undo-tree-id4973 . -14) (undo-tree-id4974 . -16) (undo-tree-id4975 . -15) (undo-tree-id4976 . -16) (undo-tree-id4977 . -16) (undo-tree-id4978 . -16) (undo-tree-id4979 . -16) (undo-tree-id4980 . -16) (undo-tree-id4981 . -16) (undo-tree-id4982 . -16) (undo-tree-id4983 . -16) (undo-tree-id4984 . -16) (undo-tree-id4985 . -16) (undo-tree-id4986 . -16) (undo-tree-id4987 . -16) (undo-tree-id4988 . -16) (undo-tree-id4989 . -16) (undo-tree-id4990 . -16) (undo-tree-id4991 . -16) (undo-tree-id4992 . -16) (undo-tree-id4993 . -16) (undo-tree-id4994 . -16) (undo-tree-id4995 . -16) (undo-tree-id4996 . -17) (undo-tree-id4997 . -16) (undo-tree-id4998 . -22) (undo-tree-id4999 . -17) (undo-tree-id5000 . -17) (undo-tree-id5001 . -17) (undo-tree-id5002 . -17) (undo-tree-id5003 . -17) (undo-tree-id5004 . -17) (undo-tree-id5005 . -17) (undo-tree-id5006 . -17) (undo-tree-id5007 . -17) (undo-tree-id5008 . -17) (undo-tree-id5009 . -17) (undo-tree-id5010 . -18) (undo-tree-id5011 . -17) (undo-tree-id5012 . -19) (undo-tree-id5013 . -18) (undo-tree-id5014 . -20) (undo-tree-id5015 . -19) (undo-tree-id5016 . -21) (undo-tree-id5017 . -20) (undo-tree-id5018 . -20) (undo-tree-id5019 . -20) (undo-tree-id5020 . -20) (undo-tree-id5021 . -20) (undo-tree-id5022 . -20) (undo-tree-id5023 . -20) (undo-tree-id5024 . -21) (undo-tree-id5025 . -20) (undo-tree-id5026 . -22) (undo-tree-id5027 . -21) (undo-tree-id5028 . -22) (undo-tree-id5029 . -22) (undo-tree-id5030 . -21) (undo-tree-id5031 . -21) (undo-tree-id5032 . -21) (undo-tree-id5033 . -21) (undo-tree-id5034 . -21) (undo-tree-id5035 . -21) (undo-tree-id5036 . -19) (undo-tree-id5037 . -21) (undo-tree-id5038 . -18) (undo-tree-id5039 . -19) (undo-tree-id5040 . -16) (undo-tree-id5041 . -18) (undo-tree-id5042 . -12) (undo-tree-id5043 . -16) (undo-tree-id5044 . -12) (undo-tree-id5045 . -12) (undo-tree-id5046 . -12) 3920) nil (26450 10337 698798 851000) 0 nil])
([nil nil ((3916 . 3918) (#(" " 0 1 (face (markdown-line-break-face) wrap-prefix "  " fontified t)) . -3916) (undo-tree-id4933 . -1) (undo-tree-id4934 . -1) (undo-tree-id4935 . -1) (undo-tree-id4936 . -1) (undo-tree-id4937 . -1) (undo-tree-id4938 . -1) (undo-tree-id4939 . -1) (#("$" 0 1 (wrap-prefix "  " fontified t)) . -3917) (undo-tree-id4940 . -1) (undo-tree-id4941 . -1) (undo-tree-id4942 . -1) 3918 (3908 . 3918) (3908 . 3909)) nil (26450 10337 698721 424000) 0 nil])
([nil nil ((3917 . 3921)) nil (26450 10337 698695 826000) 0 nil])
([nil nil ((3927 . 3937) (3922 . 3927)) nil (26450 10337 698695 184000) 0 nil])
([nil nil ((3936 . 3939)) nil (26450 10337 698694 463000) 0 nil])
([nil nil ((3940 . 3949)) nil (26450 10337 698693 822000) 0 nil])
([nil nil ((3949 . 3951)) nil (26450 10337 698686 498000) 0 nil])
([nil nil ((3952 . 3953) (3951 . 3952) (t 26450 10337 714594 94000) 3950) nil (26450 10389 839030 566000) 0 nil])
([nil nil ((4006 . 4011) (#("-" 0 1 (wrap-prefix "  " fontified t)) . -4006) (undo-tree-id5112 . -1) (undo-tree-id5113 . -1) (undo-tree-id5114 . -1) 4007 (4004 . 4007) (4003 . 4005) (3993 . 4003) (#("op" 0 2 (wrap-prefix "  " fontified t)) . -3993) (undo-tree-id5115 . -2) (undo-tree-id5116 . -1) (undo-tree-id5117 . -2) (undo-tree-id5118 . -1) (undo-tree-id5119 . -2) 3995 (3989 . 3995) (3968 . 3989) (#("8" 0 1 (wrap-prefix "  " fontified t)) . -3968) (undo-tree-id5120 . -1) (undo-tree-id5121 . -1) (undo-tree-id5122 . -1) 3969 (3951 . 3969) (#("
" 0 1 (wrap-prefix "  " fontified t)) . -3951) (undo-tree-id5123 . -1) (undo-tree-id5124 . -1) (undo-tree-id5125 . -1) (undo-tree-id5126 . -1) (undo-tree-id5127 . -1) (undo-tree-id5128 . -1) (undo-tree-id5129 . -1) (undo-tree-id5130 . -1) (undo-tree-id5131 . -1) (undo-tree-id5132 . -1) (undo-tree-id5133 . -1) (undo-tree-id5134 . -1) (undo-tree-id5135 . -1) (undo-tree-id5136 . -1) (undo-tree-id5137 . -1) (undo-tree-id5138 . -1) (undo-tree-id5139 . -1) (undo-tree-id5140 . -1) (undo-tree-id5141 . -1) (undo-tree-id5142 . -1) 3952) nil (26450 10389 839027 721000) 0 nil])
([nil nil ((4014 . 4028) (4012 . 4014) (#("." 0 1 (wrap-prefix "  " fontified t)) . -4012) (undo-tree-id5102 . -1) (undo-tree-id5103 . -1) (undo-tree-id5104 . -1) (undo-tree-id5105 . -1) (undo-tree-id5106 . -1) (undo-tree-id5107 . -1) (undo-tree-id5108 . -1) (#(" " 0 1 (wrap-prefix "  " fontified t)) . -4013) (undo-tree-id5109 . -1) (undo-tree-id5110 . -1) (undo-tree-id5111 . -1) 4014 (4012 . 4014)) nil (26450 10389 838997 523000) 0 nil])
([nil nil ((4064 . 4066) (4052 . 4064) (4031 . 4052) (4029 . 4031) (4028 . 4029) (t 26450 10389 852229 728000)) nil (26450 10434 389896 438000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4068 . 4069) (#("
" 0 1 (fontified nil wrap-prefix "  ")) . -4124) (4068 . 4125)) nil (26450 10434 389894 895000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t wrap-prefix "  ")) . 4067) (undo-tree-id5302 . -1) (undo-tree-id5303 . -1) (undo-tree-id5304 . -1) (undo-tree-id5305 . -1)) nil (26450 10434 389893 693000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix "  " fontified t)) . 4067) (undo-tree-id5299 . -1) (undo-tree-id5300 . -1) (undo-tree-id5301 . -1)) nil (26450 10434 389891 549000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix "  " fontified t)) . 4065) (undo-tree-id5290 . -1) (undo-tree-id5291 . -1) (undo-tree-id5292 . -1) (undo-tree-id5293 . -1) (undo-tree-id5294 . -1) (undo-tree-id5295 . -1) (undo-tree-id5296 . -1) (undo-tree-id5297 . -1) (undo-tree-id5298 . -1)) nil (26450 10434 389889 225000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix "  " fontified t)) . 4065) (undo-tree-id5262 . -1) (undo-tree-id5263 . 1) (undo-tree-id5264 . -1) (undo-tree-id5265 . -1) (undo-tree-id5266 . -1) (undo-tree-id5267 . -1) (undo-tree-id5268 . -1) (undo-tree-id5269 . -1) (undo-tree-id5270 . -1) (undo-tree-id5271 . -1) (undo-tree-id5272 . -1) (undo-tree-id5273 . -1) (undo-tree-id5274 . -1) (undo-tree-id5275 . -1) (undo-tree-id5276 . -1) (undo-tree-id5277 . -1) (undo-tree-id5278 . -1) (undo-tree-id5279 . -1) (undo-tree-id5280 . -1) (undo-tree-id5281 . -1) (undo-tree-id5282 . -1) (undo-tree-id5283 . -1) (undo-tree-id5284 . -1) (undo-tree-id5285 . -1) (undo-tree-id5286 . -1) (undo-tree-id5287 . -1) (undo-tree-id5288 . -1) (undo-tree-id5289 . -1)) nil (26450 10434 389880 378000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4120 . 4121) (#("
" 0 1 (fontified nil)) . -4176) (4120 . 4177) 4065) nil (26450 10434 389861 552000) 0 nil])
([nil nil ((4065 . 4066)) nil (26450 10434 389860 310000) 0 nil])
([nil nil ((4114 . 4116) (#("t" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -4114) (undo-tree-id5232 . -1) (undo-tree-id5233 . -1) (undo-tree-id5234 . -1) 4115 (4111 . 4115) (4106 . 4111) (#("part2_" 0 6 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -4106) (undo-tree-id5235 . -6) (undo-tree-id5236 . -6) (undo-tree-id5237 . -6) (undo-tree-id5238 . -6) (undo-tree-id5239 . -6) (undo-tree-id5240 . -6) (undo-tree-id5241 . -6) (undo-tree-id5242 . -6) (undo-tree-id5243 . -6) (undo-tree-id5244 . -6) (undo-tree-id5245 . -6) 4112 (#("arch." 0 5 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -4112) (undo-tree-id5246 . -5) (undo-tree-id5247 . -5) (undo-tree-id5248 . -5) (undo-tree-id5249 . -5) (undo-tree-id5250 . -5) (undo-tree-id5251 . -5) (undo-tree-id5252 . -5) (undo-tree-id5253 . -5) (undo-tree-id5254 . -5) 4117 (#("png" 0 3 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -4117) (undo-tree-id5255 . -3) (undo-tree-id5256 . -3) (undo-tree-id5257 . -3) (undo-tree-id5258 . -3) (undo-tree-id5259 . -3) (undo-tree-id5260 . -3) (undo-tree-id5261 . -3) 4120) nil (26450 10434 389858 737000) 0 nil])
([nil nil ((4158 . 4168) (#("g" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . 4158) (#("n" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . 4158) (#("p" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . 4158) (#("." 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . 4158) (#("p" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -4158) (undo-tree-id5143 . -1) (undo-tree-id5144 . -1) (undo-tree-id5145 . -1) (undo-tree-id5146 . -1) (undo-tree-id5147 . -1) (undo-tree-id5148 . -1) (undo-tree-id5149 . -1) (undo-tree-id5150 . -1) (undo-tree-id5151 . -1) (undo-tree-id5152 . -1) (undo-tree-id5153 . -1) (undo-tree-id5154 . -1) (undo-tree-id5155 . -1) (undo-tree-id5156 . -1) (undo-tree-id5157 . -1) (undo-tree-id5158 . -1) (undo-tree-id5159 . -1) (undo-tree-id5160 . -1) (undo-tree-id5161 . -1) (#("a" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -4159) (undo-tree-id5162 . -1) (undo-tree-id5163 . -1) (undo-tree-id5164 . -1) (undo-tree-id5165 . -1) (undo-tree-id5166 . -1) (undo-tree-id5167 . -1) (undo-tree-id5168 . -1) (undo-tree-id5169 . -1) (undo-tree-id5170 . -1) (undo-tree-id5171 . -1) (undo-tree-id5172 . -1) (undo-tree-id5173 . -1) (undo-tree-id5174 . -1) (undo-tree-id5175 . -1) (undo-tree-id5176 . -1) (undo-tree-id5177 . -1) (undo-tree-id5178 . -1) (#("r" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -4160) (undo-tree-id5179 . -1) (undo-tree-id5180 . -1) (undo-tree-id5181 . -1) (undo-tree-id5182 . -1) (undo-tree-id5183 . -1) (undo-tree-id5184 . -1) (undo-tree-id5185 . -1) (undo-tree-id5186 . -1) (undo-tree-id5187 . -1) (undo-tree-id5188 . -1) (undo-tree-id5189 . -1) (undo-tree-id5190 . -1) (undo-tree-id5191 . -1) (undo-tree-id5192 . -1) (undo-tree-id5193 . -1) (#("t" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -4161) (undo-tree-id5194 . -1) (undo-tree-id5195 . -1) (undo-tree-id5196 . -1) (undo-tree-id5197 . -1) (undo-tree-id5198 . -1) (undo-tree-id5199 . -1) (undo-tree-id5200 . -1) (undo-tree-id5201 . -1) (undo-tree-id5202 . -1) (undo-tree-id5203 . -1) (undo-tree-id5204 . -1) (undo-tree-id5205 . -1) (undo-tree-id5206 . -1) (#("2" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -4162) (undo-tree-id5207 . -1) (undo-tree-id5208 . -1) (undo-tree-id5209 . -1) (undo-tree-id5210 . -1) (undo-tree-id5211 . -1) (undo-tree-id5212 . -1) (undo-tree-id5213 . -1) (undo-tree-id5214 . -1) (undo-tree-id5215 . -1) (undo-tree-id5216 . -1) (undo-tree-id5217 . -1) (#("_" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -4163) (undo-tree-id5218 . -1) (undo-tree-id5219 . -1) (undo-tree-id5220 . -1) (undo-tree-id5221 . -1) (undo-tree-id5222 . -1) (undo-tree-id5223 . -1) (undo-tree-id5224 . -1) (undo-tree-id5225 . -1) (undo-tree-id5226 . -1) 4164 (#("arch" 0 4 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . 4164) (undo-tree-id5227 . -3) (undo-tree-id5228 . -3) (undo-tree-id5229 . -3) (undo-tree-id5230 . -3) (undo-tree-id5231 . -3) 4167) nil (26450 10434 389833 439000) 0 nil])
([nil nil ((4169 . 4170) 4167) nil (26450 10434 387198 628000) 0 nil])
([nil nil ((4075 . 4077) (#("a" 0 1 (wrap-prefix "  " fontified t)) . -4075) (undo-tree-id5306 . -1) (undo-tree-id5307 . -1) (undo-tree-id5308 . -1) 4076 (4065 . 4076) (#("n" 0 1 (wrap-prefix "  " fontified t)) . -4065) (undo-tree-id5309 . -1) (undo-tree-id5310 . -1) (undo-tree-id5311 . -1) 4066 (4052 . 4066) (#(">" 0 1 (wrap-prefix "  " fontified t)) . -4052) (undo-tree-id5312 . -1) (undo-tree-id5313 . -1) (undo-tree-id5314 . -1) (undo-tree-id5315 . -1) (undo-tree-id5316 . -1) (undo-tree-id5317 . -1) (undo-tree-id5318 . -1) (undo-tree-id5319 . -1) (undo-tree-id5320 . -1) (undo-tree-id5321 . -1) (undo-tree-id5322 . -1) (undo-tree-id5323 . -1) (undo-tree-id5324 . -1) 4053 (#("23" 0 2 (wrap-prefix "  " fontified t)) . -4053) (undo-tree-id5325 . -2) (undo-tree-id5326 . -1) (undo-tree-id5327 . -2) (undo-tree-id5328 . -1) (undo-tree-id5329 . -2) (undo-tree-id5330 . -2) (undo-tree-id5331 . -2) (undo-tree-id5332 . -2) (undo-tree-id5333 . -2) 4055 (#(" " 0 1 (wrap-prefix "  " fontified t)) . -4055) (undo-tree-id5334 . -1) (undo-tree-id5335 . -1) (undo-tree-id5336 . -1) (undo-tree-id5337 . -1) 4056 (4052 . 4056) (#("2" 0 1 (wrap-prefix "  " fontified t)) . -4052) (undo-tree-id5338 . -1) (undo-tree-id5339 . -1) (undo-tree-id5340 . -1) (undo-tree-id5341 . -1) (undo-tree-id5342 . -1) (undo-tree-id5343 . -1) (undo-tree-id5344 . -1) (undo-tree-id5345 . -1) (undo-tree-id5346 . -1) (undo-tree-id5347 . -1) (undo-tree-id5348 . -1) (#("." 0 1 (wrap-prefix "  " fontified t)) . -4053) (undo-tree-id5349 . -1) (undo-tree-id5350 . -1) (undo-tree-id5351 . -1) (undo-tree-id5352 . -1) (undo-tree-id5353 . -1) (undo-tree-id5354 . -1) (undo-tree-id5355 . -1) (#("3" 0 1 (wrap-prefix "  " fontified t)) . -4054) (undo-tree-id5356 . -1) (undo-tree-id5357 . -1) (undo-tree-id5358 . -1) 4055 (4048 . 4055) (4027 . 4048) (#("." 0 1 (wrap-prefix "  " fontified t)) . -4027) (undo-tree-id5359 . -1) (undo-tree-id5360 . -1) (undo-tree-id5361 . -1) (undo-tree-id5362 . -1) (undo-tree-id5363 . -1) (undo-tree-id5364 . -1) (undo-tree-id5365 . -1) (undo-tree-id5366 . -1) (undo-tree-id5367 . -1) (undo-tree-id5368 . -1) (undo-tree-id5369 . -1) (undo-tree-id5370 . -1) (undo-tree-id5371 . -1) (undo-tree-id5372 . -1) (undo-tree-id5373 . -1) (undo-tree-id5374 . -1) (undo-tree-id5375 . -1) (undo-tree-id5376 . -1) (undo-tree-id5377 . -1) (undo-tree-id5378 . -1) (undo-tree-id5379 . -1) (undo-tree-id5380 . -1) (undo-tree-id5381 . -1) (undo-tree-id5382 . -1) (undo-tree-id5383 . -1) (undo-tree-id5384 . -1) 4028 (#("And" 0 3 (wrap-prefix "  " fontified t)) . -4028) (undo-tree-id5385 . -3) (undo-tree-id5386 . -1) (undo-tree-id5387 . -2) (undo-tree-id5388 . -1) (undo-tree-id5389 . -3) (undo-tree-id5390 . -2) (undo-tree-id5391 . -3) (undo-tree-id5392 . -3) (undo-tree-id5393 . -3) (undo-tree-id5394 . -3) (undo-tree-id5395 . -3) (undo-tree-id5396 . -3) (undo-tree-id5397 . -3) (undo-tree-id5398 . -3) (undo-tree-id5399 . -3) 4031 (#(" " 0 1 (wrap-prefix "  " fontified t)) . -4031) (undo-tree-id5400 . -1) (undo-tree-id5401 . -1) (undo-tree-id5402 . -1) (undo-tree-id5403 . -1) (undo-tree-id5404 . -1) (undo-tree-id5405 . -1) (undo-tree-id5406 . -1) (undo-tree-id5407 . -1) 4032 (#("w" 0 1 (wrap-prefix "  " fontified t)) . -4032) (undo-tree-id5408 . -1) (undo-tree-id5409 . -1) (undo-tree-id5410 . -1) 4033 (4028 . 4033) (#(" " 0 1 (wrap-prefix "  " fontified t)) . -4028) (undo-tree-id5411 . -1) (undo-tree-id5412 . -1) (undo-tree-id5413 . -1) (undo-tree-id5414 . -1) (undo-tree-id5415 . -1) 4029 (t 26450 10434 405772 895000)) nil (26450 10489 378300 796000) 0 nil])
([nil nil ((4077 . 4078)) nil (26450 10489 373436 441000) 0 nil])
([nil nil ((4269 . 4270) (4262 . 4269) (4241 . 4262) (4220 . 4241) (4219 . 4220) (t 26450 10489 393443 273000) 4219) nil (26450 10568 799092 515000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -4270) (4270 . 4271) (#(")" 0 1 (wrap-prefix "  " fontified nil)) . -4270) (4270 . 4271) (4268 . 4271)) nil (26450 10568 799091 303000) 0 nil])
([nil nil ((4291 . 4305) (4270 . 4291)) nil (26450 10568 799090 862000) 0 nil])
([nil nil ((#("." 0 1 (wrap-prefix "  " fontified t)) . 4304) (undo-tree-id5460 . -1)) nil (26450 10568 799090 131000) 0 nil])
([nil nil ((4307 . 4308) (4306 . 4307) 4304) nil (26450 10568 799089 19000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4307 . 4308) (#("
" 0 1 (fontified nil wrap-prefix "  ")) . -4359) (4307 . 4360)) nil (26450 10568 799088 287000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4359 . 4360) (#("
" 0 1 (fontified nil wrap-prefix "  ")) . -4411) (4359 . 4412) 4308) nil (26450 10568 799087 616000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4411 . 4412) (#("
" 0 1 (fontified nil wrap-prefix "  ")) . -4463) (4411 . 4464) 4360) nil (26450 10568 799086 915000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4463 . 4464) (#("
" 0 1 (fontified nil wrap-prefix "  ")) . -4515) (4463 . 4516) 4412) nil (26450 10568 799086 43000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4515 . 4516) (#("
" 0 1 (fontified nil wrap-prefix "  ")) . -4567) (4515 . 4568) 4464) nil (26450 10568 799085 382000) 0 nil])
([nil nil ((4348 . 4349) (#("loss_" 0 5 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -4348) (undo-tree-id5444 . -5) (undo-tree-id5445 . -5) (undo-tree-id5446 . -5) (undo-tree-id5447 . -5) (undo-tree-id5448 . -5) (undo-tree-id5449 . -5) (undo-tree-id5450 . -5) (undo-tree-id5451 . -5) (undo-tree-id5452 . -5) 4353 (#("curve" 0 5 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -4353) (undo-tree-id5453 . -5) (undo-tree-id5454 . -5) (undo-tree-id5455 . -5) (undo-tree-id5456 . -5) (undo-tree-id5457 . -5) (undo-tree-id5458 . -5) (undo-tree-id5459 . -5) 4358) nil (26450 10568 799084 220000) 0 nil])
([nil nil ((4391 . 4392) (#("1" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -4391) (undo-tree-id5441 . -1) (undo-tree-id5442 . -1) (undo-tree-id5443 . -1) 4392 (4391 . 4392) (#("loss" 0 4 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . 4391)) nil (26450 10568 799076 605000) 0 nil])
([nil nil ((#("_" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -4392) (undo-tree-id5431 . 1) (undo-tree-id5432 . -1) (undo-tree-id5433 . -1) (undo-tree-id5434 . -1) (undo-tree-id5435 . -1) (undo-tree-id5436 . -1) (undo-tree-id5437 . -1) (undo-tree-id5438 . -1) (undo-tree-id5439 . -1) (undo-tree-id5440 . -1) 4393 (#("curve" 0 5 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . 4393)) nil (26450 10568 799069 893000) 0 nil])
([nil nil ((#("loss_curve" 0 10 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . 4434) (undo-tree-id5419 . 4) (undo-tree-id5420 . -5) (undo-tree-id5421 . -4) (undo-tree-id5422 . -5) (undo-tree-id5423 . -4) (undo-tree-id5424 . -5) (undo-tree-id5425 . -5) (undo-tree-id5426 . -5) (undo-tree-id5427 . -5) (undo-tree-id5428 . -4) (undo-tree-id5429 . -5) (undo-tree-id5430 . -4)) nil (26450 10568 799064 212000) 0 nil])
([nil nil ((4434 . 4435) (#("2" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -4434) (undo-tree-id5416 . -1) (undo-tree-id5417 . -1) (undo-tree-id5418 . -1) 4435 (4434 . 4435)) nil (26450 10568 799053 592000) 0 nil])
([nil nil ((#("loss_curve" 0 10 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . 4477)) nil (26450 10568 799039 876000) 0 nil])
([nil nil ((4477 . 4478)) nil (26450 10568 799039 545000) 0 nil])
([nil nil ((#("loss_curve" 0 10 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . 4520)) nil (26450 10568 799038 253000) 0 nil])
([nil nil ((4520 . 4521)) nil (26450 10568 799031 430000) 0 nil])
([nil nil ((4606 . 4622) (#("the" 0 3 (wrap-prefix "  " fontified t)) . -4606) (undo-tree-id5498 . -3) (undo-tree-id5499 . -1) (undo-tree-id5500 . -2) (undo-tree-id5501 . -1) (undo-tree-id5502 . -3) (undo-tree-id5503 . -2) (undo-tree-id5504 . -3) 4609 (4590 . 4609) (4580 . 4590) (#("o" 0 1 (wrap-prefix "  " fontified t)) . -4580) (undo-tree-id5505 . -1) (undo-tree-id5506 . -1) (undo-tree-id5507 . -1) 4581 (4566 . 4581) (4545 . 4566) (4524 . 4545) (4523 . 4524) (t 26450 10568 820411 604000) 4523) nil (26450 10626 367374 727000) 0 nil])
([nil nil ((4623 . 4624) (4622 . 4623) 4621) nil (26450 10626 367365 540000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4625 . 4626) (#("
" 0 1 (fontified nil wrap-prefix "  ")) . -4668) (4625 . 4669)) nil (26450 10626 367364 999000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix "  " fontified t)) . 4623) (undo-tree-id5488 . -1) (undo-tree-id5489 . -1) (undo-tree-id5490 . -1) (undo-tree-id5491 . -1) (undo-tree-id5492 . -1) (undo-tree-id5493 . -1) (undo-tree-id5494 . -1) (undo-tree-id5495 . -1) (undo-tree-id5496 . -1) (undo-tree-id5497 . -1)) nil (26450 10626 367363 927000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t wrap-prefix "  ")) . 4623) (undo-tree-id5468 . 1) (undo-tree-id5469 . -1) (undo-tree-id5470 . -1) (undo-tree-id5471 . -1) (undo-tree-id5472 . -1) (undo-tree-id5473 . -1) (undo-tree-id5474 . -1) (undo-tree-id5475 . -1) (undo-tree-id5476 . -1) (undo-tree-id5477 . -1) (undo-tree-id5478 . -1) (undo-tree-id5479 . -1) (undo-tree-id5480 . -1) (undo-tree-id5481 . -1) (undo-tree-id5482 . -1) (undo-tree-id5483 . -1) (undo-tree-id5484 . -1) (undo-tree-id5485 . -1) (undo-tree-id5486 . -1) (undo-tree-id5487 . -1)) nil (26450 10626 367344 741000) 0 nil])
([nil nil ((4664 . 4685) (#("5" 0 1 (fontified t face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) wrap-prefix "  ")) . -4664) (undo-tree-id5461 . -1) (undo-tree-id5462 . -1) (undo-tree-id5463 . -1) (undo-tree-id5464 . -1) (undo-tree-id5465 . -1) (undo-tree-id5466 . -1) (undo-tree-id5467 . -1) 4665) nil (26450 10626 367326 907000) 0 nil])
([nil nil ((4685 . 4686)) nil (26450 10626 367309 985000) 0 nil])
([nil nil ((4687 . 4688) 4685) nil (26450 10626 367304 274000) 0 nil])
([nil nil ((4702 . 4703) (4689 . 4702) (4688 . 4689) (t 26450 10626 389113 447000) 4688) nil (26450 10666 646766 633000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4703 . 4704) (#("
" 0 1 (fontified nil wrap-prefix "  ")) . -4767) (4703 . 4768)) nil (26450 10666 646765 942000) 0 nil])
([nil nil ((4744 . 4756) (#("validation_" 0 11 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -4744) (undo-tree-id5508 . -11) (undo-tree-id5509 . -11) (undo-tree-id5510 . -11) (undo-tree-id5511 . -11) (undo-tree-id5512 . -11) (undo-tree-id5513 . -11) (undo-tree-id5514 . -11) (undo-tree-id5515 . -11) (undo-tree-id5516 . -11) 4755 (#("comparisons" 0 11 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -4755) (undo-tree-id5517 . -11) (undo-tree-id5518 . -11) (undo-tree-id5519 . -11) (undo-tree-id5520 . -11) (undo-tree-id5521 . -11) (undo-tree-id5522 . -11) (undo-tree-id5523 . -11) 4766) nil (26450 10666 646764 469000) 0 nil])
([nil nil ((4757 . 4758) 4755) nil (26450 10666 646740 294000) 0 nil])
([nil nil ((4093 . 4108) (#("PSNR" 0 4 (fontified t wrap-prefix "  ")) . -4093) (undo-tree-id5524 . -4) (undo-tree-id5525 . -4) (undo-tree-id5526 . -4) (undo-tree-id5527 . -4) (undo-tree-id5528 . -4) (undo-tree-id5529 . -4) (undo-tree-id5530 . -4) (undo-tree-id5531 . -4) (undo-tree-id5532 . -4) (undo-tree-id5533 . -4) (undo-tree-id5534 . -4) (undo-tree-id5535 . -4) (undo-tree-id5536 . -4) (undo-tree-id5537 . -4) (undo-tree-id5538 . -4) 4097 (t 26450 10666 660604 413000)) nil (26450 10706 255923 91000) 0 nil])
([nil nil ((4863 . 4865) (4848 . 4863) (4840 . 4848) (4819 . 4840) (#("d" 0 1 (wrap-prefix "  " fontified t)) . -4819) (undo-tree-id5578 . -1) (undo-tree-id5579 . -1) (undo-tree-id5580 . -1) (undo-tree-id5581 . -1) (undo-tree-id5582 . -1) (undo-tree-id5583 . -1) (undo-tree-id5584 . -1) (undo-tree-id5585 . -1) (undo-tree-id5586 . -1) (undo-tree-id5587 . -1) (undo-tree-id5588 . -1) (#("n" 0 1 (wrap-prefix "  " fontified t)) . -4820) (undo-tree-id5589 . -1) (undo-tree-id5590 . -1) (undo-tree-id5591 . -1) (undo-tree-id5592 . -1) (undo-tree-id5593 . -1) (undo-tree-id5594 . -1) (undo-tree-id5595 . -1) (#(" " 0 1 (wrap-prefix "  " fontified t)) . -4821) (undo-tree-id5596 . -1) (undo-tree-id5597 . -1) (undo-tree-id5598 . -1) 4822 (4802 . 4822) (#("implemented" 0 11 (wrap-prefix "  " fontified t)) . -4802) (undo-tree-id5599 . -11) (undo-tree-id5600 . -1) (undo-tree-id5601 . -2) (undo-tree-id5602 . -1) (undo-tree-id5603 . -3) (undo-tree-id5604 . -2) (undo-tree-id5605 . -4) (undo-tree-id5606 . -3) (undo-tree-id5607 . -5) (undo-tree-id5608 . -4) (undo-tree-id5609 . -6) (undo-tree-id5610 . -5) (undo-tree-id5611 . -7) (undo-tree-id5612 . -6) (undo-tree-id5613 . -8) (undo-tree-id5614 . -7) (undo-tree-id5615 . -9) (undo-tree-id5616 . -8) (undo-tree-id5617 . -10) (undo-tree-id5618 . -9) (undo-tree-id5619 . -11) (undo-tree-id5620 . -10) (undo-tree-id5621 . -11) (undo-tree-id5622 . -11) (undo-tree-id5623 . -11) (undo-tree-id5624 . -11) (undo-tree-id5625 . -11) (undo-tree-id5626 . -11) (undo-tree-id5627 . -11) (undo-tree-id5628 . -11) (undo-tree-id5629 . -11) (undo-tree-id5630 . -11) (undo-tree-id5631 . -11) (undo-tree-id5632 . -11) (undo-tree-id5633 . -11) (undo-tree-id5634 . -11) (undo-tree-id5635 . -11) (undo-tree-id5636 . -11) (undo-tree-id5637 . -11) (undo-tree-id5638 . -11) (undo-tree-id5639 . -11) 4813 (#(" " 0 1 (wrap-prefix "  " fontified t)) . -4813) (undo-tree-id5640 . -1) (undo-tree-id5641 . -1) (undo-tree-id5642 . -1) (undo-tree-id5643 . -1) (undo-tree-id5644 . -1) (undo-tree-id5645 . -1) (undo-tree-id5646 . -1) (undo-tree-id5647 . -1) (undo-tree-id5648 . -1) (undo-tree-id5649 . -1) (undo-tree-id5650 . -1) (undo-tree-id5651 . -1) (undo-tree-id5652 . -1) (undo-tree-id5653 . -1) (undo-tree-id5654 . -1) (undo-tree-id5655 . -1) (undo-tree-id5656 . -1) (undo-tree-id5657 . -1) 4814 (#("a" 0 1 (wrap-prefix "  " fontified t)) . -4814) (undo-tree-id5658 . -1) (undo-tree-id5659 . -1) (undo-tree-id5660 . -1) (undo-tree-id5661 . -1) (undo-tree-id5662 . -1) (undo-tree-id5663 . -1) (undo-tree-id5664 . -1) (undo-tree-id5665 . -1) (undo-tree-id5666 . -1) (undo-tree-id5667 . -1) (undo-tree-id5668 . -1) (undo-tree-id5669 . -1) (undo-tree-id5670 . -1) 4815 (#(" " 0 1 (wrap-prefix "  " fontified t)) . -4815) (undo-tree-id5671 . -1) (undo-tree-id5672 . -1) (undo-tree-id5673 . -1) (undo-tree-id5674 . -1) (undo-tree-id5675 . -1) (undo-tree-id5676 . -1) (undo-tree-id5677 . -1) (undo-tree-id5678 . -1) (undo-tree-id5679 . -1) (undo-tree-id5680 . -1) 4816 (#("di" 0 2 (wrap-prefix "  " fontified t)) . -4816) (undo-tree-id5681 . -2) (undo-tree-id5682 . -1) (undo-tree-id5683 . -2) (undo-tree-id5684 . -1) (undo-tree-id5685 . -2) 4818 (4814 . 4818) (4811 . 4814) (4790 . 4811) (4788 . 4790) (4771 . 4788) (#("#" 0 1 (wrap-prefix "  " fontified t)) . -4771) (undo-tree-id5686 . -1) (undo-tree-id5687 . -1) (undo-tree-id5688 . -1) 4772 (4770 . 4772) (4769 . 4770) (t 26450 10706 274087 358000) 4769) nil (26450 10781 654313 960000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4864 . 4865) (#("
" 0 1 (fontified nil wrap-prefix "  ")) . -4918) (4864 . 4919)) nil (26450 10781 654258 585000) 0 nil])
([nil nil ((4905 . 4920) (#("r" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -4905) (undo-tree-id5541 . -1) (undo-tree-id5542 . -1) (undo-tree-id5543 . -1) (undo-tree-id5544 . -1) (undo-tree-id5545 . -1) (undo-tree-id5546 . -1) (undo-tree-id5547 . -1) (undo-tree-id5548 . -1) (undo-tree-id5549 . -1) (undo-tree-id5550 . -1) (undo-tree-id5551 . -1) (#("e" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -4906) (undo-tree-id5552 . -1) (undo-tree-id5553 . -1) (undo-tree-id5554 . -1) (undo-tree-id5555 . -1) (undo-tree-id5556 . -1) (undo-tree-id5557 . -1) (undo-tree-id5558 . -1) (#("d" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -4907) (undo-tree-id5559 . -1) (undo-tree-id5560 . -1) (undo-tree-id5561 . -1) 4908 (4905 . 4908) (#("rotating." 0 9 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -4905) (undo-tree-id5562 . -9) (undo-tree-id5563 . -9) (undo-tree-id5564 . -9) (undo-tree-id5565 . -9) (undo-tree-id5566 . -9) (undo-tree-id5567 . -9) (undo-tree-id5568 . -9) (undo-tree-id5569 . -9) (undo-tree-id5570 . -9) 4914 (#("gif" 0 3 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -4914) (undo-tree-id5571 . -3) (undo-tree-id5572 . -3) (undo-tree-id5573 . -3) (undo-tree-id5574 . -3) (undo-tree-id5575 . -3) (undo-tree-id5576 . -3) (undo-tree-id5577 . -3) 4917) nil (26450 10781 654256 511000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4921 . 4922) (#("
" 0 1 (fontified nil wrap-prefix "  ")) . -4978) (4921 . 4979) 4919) nil (26450 10781 654228 528000) 0 nil])
([nil nil ((4962 . 4965) (#("teal" 0 4 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . 4962) (undo-tree-id5539 . -4) (undo-tree-id5540 . -4)) nil (26450 10781 654224 99000) 0 nil])
([nil nil ((5179 . 5199) (5158 . 5179) (5147 . 5158) (#("the" 0 3 (wrap-prefix "  " fontified t)) . -5147) (undo-tree-id5689 . -3) (undo-tree-id5690 . -1) (undo-tree-id5691 . -2) (undo-tree-id5692 . -1) (undo-tree-id5693 . -3) (undo-tree-id5694 . -2) (undo-tree-id5695 . -3) (undo-tree-id5696 . -3) (undo-tree-id5697 . -3) (undo-tree-id5698 . -3) (undo-tree-id5699 . -3) (undo-tree-id5700 . -3) (undo-tree-id5701 . -3) (undo-tree-id5702 . -3) (undo-tree-id5703 . -3) (undo-tree-id5704 . -3) (undo-tree-id5705 . -3) (undo-tree-id5706 . -3) (undo-tree-id5707 . -3) 5150 (#(" " 0 1 (wrap-prefix "  " fontified t)) . -5150) (undo-tree-id5708 . -1) (undo-tree-id5709 . -1) (undo-tree-id5710 . -1) (undo-tree-id5711 . -1) (undo-tree-id5712 . -1) (undo-tree-id5713 . -1) (undo-tree-id5714 . -1) (undo-tree-id5715 . -1) (undo-tree-id5716 . -1) (undo-tree-id5717 . -1) (undo-tree-id5718 . -1) (undo-tree-id5719 . -1) 5151 (#("ast" 0 3 (wrap-prefix "  " fontified t)) . -5151) (undo-tree-id5720 . -3) (undo-tree-id5721 . -1) (undo-tree-id5722 . -2) (undo-tree-id5723 . -1) (undo-tree-id5724 . -3) (undo-tree-id5725 . -2) (undo-tree-id5726 . -3) 5154 (5133 . 5154) (5128 . 5133) (5107 . 5128) (#("tyhe " 0 5 (wrap-prefix "  " fontified t)) . -5107) (undo-tree-id5727 . -5) (undo-tree-id5728 . -1) (undo-tree-id5729 . -2) (undo-tree-id5730 . -1) (undo-tree-id5731 . -3) (undo-tree-id5732 . -2) (undo-tree-id5733 . -4) (undo-tree-id5734 . -3) (undo-tree-id5735 . -5) (undo-tree-id5736 . -4) (undo-tree-id5737 . -5) 5112 (5106 . 5112) (5085 . 5106) (#("T" 0 1 (wrap-prefix "  " fontified t)) . -5085) (undo-tree-id5738 . -1) (undo-tree-id5739 . -1) (undo-tree-id5740 . -1) (undo-tree-id5741 . -1) (undo-tree-id5742 . -1) (undo-tree-id5743 . -1) (undo-tree-id5744 . -1) (#("h" 0 1 (wrap-prefix "  " fontified t)) . -5086) (undo-tree-id5745 . -1) (undo-tree-id5746 . -1) (undo-tree-id5747 . -1) 5087 (5067 . 5087) (5065 . 5067) (#(" " 0 1 (wrap-prefix "  " fontified t)) . -5065) (undo-tree-id5748 . -1) (undo-tree-id5749 . -1) (undo-tree-id5750 . -1) (undo-tree-id5751 . -1) (undo-tree-id5752 . -1) (undo-tree-id5753 . -1) (undo-tree-id5754 . -1) (undo-tree-id5755 . -1) (undo-tree-id5756 . -1) (undo-tree-id5757 . -1) 5066 (#("bl" 0 2 (wrap-prefix "  " fontified t)) . -5066) (undo-tree-id5758 . -2) (undo-tree-id5759 . -1) (undo-tree-id5760 . -2) (undo-tree-id5761 . -1) (undo-tree-id5762 . -2) 5068 (5062 . 5068) (#("inde" 0 4 (wrap-prefix "  " fontified t)) . -5062) (undo-tree-id5763 . -4) (undo-tree-id5764 . -1) (undo-tree-id5765 . -2) (undo-tree-id5766 . -1) (undo-tree-id5767 . -3) (undo-tree-id5768 . -2) (undo-tree-id5769 . -4) (undo-tree-id5770 . -3) (undo-tree-id5771 . -4) 5066 (5062 . 5066) (#("i" 0 1 (wrap-prefix "  " fontified t)) . -5062) (undo-tree-id5772 . -1) (undo-tree-id5773 . -1) (undo-tree-id5774 . -1) (undo-tree-id5775 . -1) (undo-tree-id5776 . -1) (undo-tree-id5777 . -1) (undo-tree-id5778 . -1) (#("n" 0 1 (wrap-prefix "  " fontified t)) . -5063) (undo-tree-id5779 . -1) (undo-tree-id5780 . -1) (undo-tree-id5781 . -1) 5064 (5062 . 5064) (#("indent" 0 6 (wrap-prefix "  " fontified t)) . -5062) (undo-tree-id5782 . -6) (undo-tree-id5783 . -1) (undo-tree-id5784 . -2) (undo-tree-id5785 . -1) (undo-tree-id5786 . -3) (undo-tree-id5787 . -2) (undo-tree-id5788 . -4) (undo-tree-id5789 . -3) (undo-tree-id5790 . -5) (undo-tree-id5791 . -4) (undo-tree-id5792 . -6) (undo-tree-id5793 . -5) (undo-tree-id5794 . -6) 5068 (5062 . 5068) (#("identici" 0 8 (wrap-prefix "  " fontified t)) . -5062) (undo-tree-id5795 . -8) (undo-tree-id5796 . -1) (undo-tree-id5797 . -2) (undo-tree-id5798 . -1) (undo-tree-id5799 . -3) (undo-tree-id5800 . -2) (undo-tree-id5801 . -4) (undo-tree-id5802 . -3) (undo-tree-id5803 . -5) (undo-tree-id5804 . -4) (undo-tree-id5805 . -6) (undo-tree-id5806 . -5) (undo-tree-id5807 . -7) (undo-tree-id5808 . -6) (undo-tree-id5809 . -7) (undo-tree-id5810 . -7) (undo-tree-id5811 . -8) (undo-tree-id5812 . -7) (undo-tree-id5813 . -8) 5070 (5066 . 5070) (5052 . 5066) (#(" " 0 1 (wrap-prefix "  " fontified t)) . -5052) (undo-tree-id5814 . -1) (undo-tree-id5815 . -1) (undo-tree-id5816 . -1) (undo-tree-id5817 . -1) (undo-tree-id5818 . -1) (undo-tree-id5819 . -1) (undo-tree-id5820 . -1) (undo-tree-id5821 . -1) (undo-tree-id5822 . -1) (undo-tree-id5823 . -1) (undo-tree-id5824 . -1) (undo-tree-id5825 . -1) (undo-tree-id5826 . -1) (undo-tree-id5827 . -1) (undo-tree-id5828 . -1) (undo-tree-id5829 . -1) (undo-tree-id5830 . -1) (undo-tree-id5831 . -1) (undo-tree-id5832 . -1) (undo-tree-id5833 . -1) (undo-tree-id5834 . -1) (undo-tree-id5835 . -1) (undo-tree-id5836 . -1) (undo-tree-id5837 . -1) (undo-tree-id5838 . -1) (undo-tree-id5839 . -1) (undo-tree-id5840 . -1) (undo-tree-id5841 . -1) (undo-tree-id5842 . -1) (undo-tree-id5843 . -1) (undo-tree-id5844 . -1) (undo-tree-id5845 . -1) (undo-tree-id5846 . -1) (undo-tree-id5847 . -1) (undo-tree-id5848 . -1) (undo-tree-id5849 . -1) 5053 (#("with" 0 4 (wrap-prefix "  " fontified t)) . -5053) (undo-tree-id5850 . -4) (undo-tree-id5851 . -1) (undo-tree-id5852 . -2) (undo-tree-id5853 . -1) (undo-tree-id5854 . -3) (undo-tree-id5855 . -2) (undo-tree-id5856 . -4) (undo-tree-id5857 . -3) (undo-tree-id5858 . -4) (undo-tree-id5859 . -4) (undo-tree-id5860 . -4) (undo-tree-id5861 . -4) (undo-tree-id5862 . -4) (undo-tree-id5863 . -4) (undo-tree-id5864 . -4) (undo-tree-id5865 . -4) (undo-tree-id5866 . -4) (undo-tree-id5867 . -4) (undo-tree-id5868 . -4) (undo-tree-id5869 . -4) (undo-tree-id5870 . -4) (undo-tree-id5871 . -4) (undo-tree-id5872 . -4) (undo-tree-id5873 . -4) (undo-tree-id5874 . -4) (undo-tree-id5875 . -4) (undo-tree-id5876 . -4) (undo-tree-id5877 . -4) (undo-tree-id5878 . -4) (undo-tree-id5879 . -4) (undo-tree-id5880 . -4) 5057 (#(" " 0 1 (wrap-prefix "  " fontified t)) . -5057) (undo-tree-id5881 . -1) (undo-tree-id5882 . -1) (undo-tree-id5883 . -1) (undo-tree-id5884 . -1) (undo-tree-id5885 . -1) (undo-tree-id5886 . -1) (undo-tree-id5887 . -1) (undo-tree-id5888 . -1) (undo-tree-id5889 . -1) (undo-tree-id5890 . -1) (undo-tree-id5891 . -1) (undo-tree-id5892 . -1) (undo-tree-id5893 . -1) (undo-tree-id5894 . -1) (undo-tree-id5895 . -1) (undo-tree-id5896 . -1) (undo-tree-id5897 . -1) (undo-tree-id5898 . -1) (undo-tree-id5899 . -1) (undo-tree-id5900 . -1) (undo-tree-id5901 . -1) (undo-tree-id5902 . -1) 5058 (#("colors" 0 6 (wrap-prefix "  " fontified t)) . -5058) (undo-tree-id5903 . -6) (undo-tree-id5904 . -1) (undo-tree-id5905 . -2) (undo-tree-id5906 . -1) (undo-tree-id5907 . -3) (undo-tree-id5908 . -2) (undo-tree-id5909 . -4) (undo-tree-id5910 . -3) (undo-tree-id5911 . -5) (undo-tree-id5912 . -4) (undo-tree-id5913 . -6) (undo-tree-id5914 . -5) (undo-tree-id5915 . -6) (undo-tree-id5916 . -6) (undo-tree-id5917 . -6) (undo-tree-id5918 . -6) (undo-tree-id5919 . -6) 5064 (#(" " 0 1 (wrap-prefix "  " fontified t)) . -5064) (undo-tree-id5920 . -1) (undo-tree-id5921 . -1) (undo-tree-id5922 . -1) (undo-tree-id5923 . -1) 5065 (5053 . 5065) (5052 . 5053) (5031 . 5052) (#("sampling" 0 8 (wrap-prefix "  " fontified t)) . -5031) (undo-tree-id5924 . -8) (undo-tree-id5925 . -1) (undo-tree-id5926 . -2) (undo-tree-id5927 . -1) (undo-tree-id5928 . -3) (undo-tree-id5929 . -2) (undo-tree-id5930 . -4) (undo-tree-id5931 . -3) (undo-tree-id5932 . -5) (undo-tree-id5933 . -4) (undo-tree-id5934 . -6) (undo-tree-id5935 . -5) (undo-tree-id5936 . -7) (undo-tree-id5937 . -6) (undo-tree-id5938 . -7) (undo-tree-id5939 . -8) (undo-tree-id5940 . -7) (undo-tree-id5941 . -8) (undo-tree-id5942 . -8) (undo-tree-id5943 . -8) (undo-tree-id5944 . -8) (undo-tree-id5945 . -8) 5039 (5032 . 5039) (5011 . 5032) (#("y" 0 1 (wrap-prefix "  " fontified t)) . -5011) (undo-tree-id5946 . -1) (undo-tree-id5947 . -1) (undo-tree-id5948 . -1) (undo-tree-id5949 . -1) (undo-tree-id5950 . -1) (undo-tree-id5951 . -1) (undo-tree-id5952 . -1) (#(" " 0 1 (wrap-prefix "  " fontified t)) . -5012) (undo-tree-id5953 . -1) (undo-tree-id5954 . -1) (undo-tree-id5955 . -1) 5013 (5011 . 5013) (#("f" 0 1 (wrap-prefix "  " fontified t)) . -5011) (undo-tree-id5956 . -1) (undo-tree-id5957 . -1) (undo-tree-id5958 . -1) (undo-tree-id5959 . -1) (undo-tree-id5960 . -1) (undo-tree-id5961 . -1) (undo-tree-id5962 . -1) (undo-tree-id5963 . -1) (undo-tree-id5964 . -1) (undo-tree-id5965 . -1) (undo-tree-id5966 . -1) (undo-tree-id5967 . -1) (undo-tree-id5968 . -1) (undo-tree-id5969 . -1) (undo-tree-id5970 . -1) (undo-tree-id5971 . -1) (undo-tree-id5972 . -1) (undo-tree-id5973 . -1) (undo-tree-id5974 . -1) (undo-tree-id5975 . -1) (undo-tree-id5976 . -1) (undo-tree-id5977 . -1) (undo-tree-id5978 . -1) (undo-tree-id5979 . -1) (undo-tree-id5980 . -1) (#("t" 0 1 (wrap-prefix "  " fontified t)) . -5012) (undo-tree-id5981 . -1) (undo-tree-id5982 . -1) (undo-tree-id5983 . -1) (undo-tree-id5984 . -1) (undo-tree-id5985 . -1) (undo-tree-id5986 . -1) (undo-tree-id5987 . -1) (undo-tree-id5988 . -1) (undo-tree-id5989 . -1) (undo-tree-id5990 . -1) (undo-tree-id5991 . -1) (undo-tree-id5992 . -1) (undo-tree-id5993 . -1) (undo-tree-id5994 . -1) (undo-tree-id5995 . -1) (undo-tree-id5996 . -1) (undo-tree-id5997 . -1) (undo-tree-id5998 . -1) (undo-tree-id5999 . -1) (undo-tree-id6000 . -1) (#("y" 0 1 (wrap-prefix "  " fontified t)) . -5013) (undo-tree-id6001 . -1) (undo-tree-id6002 . -1) (undo-tree-id6003 . -1) (undo-tree-id6004 . -1) (undo-tree-id6005 . -1) (undo-tree-id6006 . -1) (undo-tree-id6007 . -1) (undo-tree-id6008 . -1) (undo-tree-id6009 . -1) (undo-tree-id6010 . -1) (undo-tree-id6011 . -1) (undo-tree-id6012 . -1) (undo-tree-id6013 . -1) (undo-tree-id6014 . -1) (undo-tree-id6015 . -1) (undo-tree-id6016 . -1) (undo-tree-id6017 . -1) (#(" " 0 1 (wrap-prefix "  " fontified t)) . -5014) (undo-tree-id6018 . -1) (undo-tree-id6019 . -1) (undo-tree-id6020 . -1) (undo-tree-id6021 . -1) (undo-tree-id6022 . -1) (undo-tree-id6023 . -1) (undo-tree-id6024 . -1) (undo-tree-id6025 . -1) (undo-tree-id6026 . -1) (undo-tree-id6027 . -1) (undo-tree-id6028 . -1) (undo-tree-id6029 . -1) (undo-tree-id6030 . -1) 5015 (#("the" 0 3 (wrap-prefix "  " fontified t)) . -5015) (undo-tree-id6031 . -3) (undo-tree-id6032 . -1) (undo-tree-id6033 . -2) (undo-tree-id6034 . -1) (undo-tree-id6035 . -3) (undo-tree-id6036 . -2) (undo-tree-id6037 . -3) 5018 (4998 . 5018) (#(" " 0 1 (wrap-prefix "  " fontified t)) . -4998) (undo-tree-id6038 . -1) (undo-tree-id6039 . -1) (undo-tree-id6040 . -1) (undo-tree-id6041 . -1) (undo-tree-id6042 . -1) (undo-tree-id6043 . -1) (undo-tree-id6044 . -1) (undo-tree-id6045 . -1) (undo-tree-id6046 . -1) (undo-tree-id6047 . -1) (undo-tree-id6048 . -1) (undo-tree-id6049 . -1) (undo-tree-id6050 . -1) (undo-tree-id6051 . -1) (undo-tree-id6052 . -1) (undo-tree-id6053 . -1) (undo-tree-id6054 . -1) (undo-tree-id6055 . -1) (undo-tree-id6056 . -1) (undo-tree-id6057 . -1) (undo-tree-id6058 . -1) (undo-tree-id6059 . -1) (undo-tree-id6060 . -1) (undo-tree-id6061 . -1) (undo-tree-id6062 . -1) (undo-tree-id6063 . -1) (undo-tree-id6064 . -1) (undo-tree-id6065 . -1) (undo-tree-id6066 . -1) (undo-tree-id6067 . -1) (undo-tree-id6068 . -1) (undo-tree-id6069 . -1) (undo-tree-id6070 . -1) (undo-tree-id6071 . -1) (undo-tree-id6072 . -1) (undo-tree-id6073 . -1) (undo-tree-id6074 . -1) (undo-tree-id6075 . -1) (undo-tree-id6076 . -1) (undo-tree-id6077 . -1) (undo-tree-id6078 . -1) (undo-tree-id6079 . -1) (undo-tree-id6080 . -1) (undo-tree-id6081 . -1) (undo-tree-id6082 . -1) (undo-tree-id6083 . -1) (undo-tree-id6084 . -1) (undo-tree-id6085 . -1) (undo-tree-id6086 . -1) (undo-tree-id6087 . -1) (undo-tree-id6088 . -1) (undo-tree-id6089 . -1) (undo-tree-id6090 . -1) (undo-tree-id6091 . -1) (undo-tree-id6092 . -1) (undo-tree-id6093 . -1) (undo-tree-id6094 . -1) (undo-tree-id6095 . -1) (undo-tree-id6096 . -1) (undo-tree-id6097 . -1) (undo-tree-id6098 . -1) (undo-tree-id6099 . -1) (undo-tree-id6100 . -1) (undo-tree-id6101 . -1) (undo-tree-id6102 . -1) (undo-tree-id6103 . -1) (undo-tree-id6104 . -1) (undo-tree-id6105 . -1) (undo-tree-id6106 . -1) 4999 (#("first" 0 5 (wrap-prefix "  " fontified t)) . -4999) (undo-tree-id6107 . -5) (undo-tree-id6108 . -1) (undo-tree-id6109 . -2) (undo-tree-id6110 . -1) (undo-tree-id6111 . -3) (undo-tree-id6112 . -2) (undo-tree-id6113 . -4) (undo-tree-id6114 . -3) (undo-tree-id6115 . -5) (undo-tree-id6116 . -4) (undo-tree-id6117 . -5) (undo-tree-id6118 . -5) (undo-tree-id6119 . -5) (undo-tree-id6120 . -5) (undo-tree-id6121 . -5) (undo-tree-id6122 . -5) (undo-tree-id6123 . -5) (undo-tree-id6124 . -5) (undo-tree-id6125 . -5) (undo-tree-id6126 . -5) (undo-tree-id6127 . -5) (undo-tree-id6128 . -5) (undo-tree-id6129 . -5) (undo-tree-id6130 . -5) (undo-tree-id6131 . -5) (undo-tree-id6132 . -5) (undo-tree-id6133 . -5) (undo-tree-id6134 . -5) (undo-tree-id6135 . -5) (undo-tree-id6136 . -5) (undo-tree-id6137 . -5) (undo-tree-id6138 . -5) (undo-tree-id6139 . -5) (undo-tree-id6140 . -5) (undo-tree-id6141 . -5) (undo-tree-id6142 . -5) (undo-tree-id6143 . -5) (undo-tree-id6144 . -5) (undo-tree-id6145 . -5) (undo-tree-id6146 . -5) (undo-tree-id6147 . -5) (undo-tree-id6148 . -5) (undo-tree-id6149 . -5) (undo-tree-id6150 . -5) (undo-tree-id6151 . -5) (undo-tree-id6152 . -5) (undo-tree-id6153 . -5) (undo-tree-id6154 . -5) (undo-tree-id6155 . -5) (undo-tree-id6156 . -5) (undo-tree-id6157 . -5) (undo-tree-id6158 . -5) (undo-tree-id6159 . -5) (undo-tree-id6160 . -5) (undo-tree-id6161 . -5) (undo-tree-id6162 . -5) (undo-tree-id6163 . -5) (undo-tree-id6164 . -5) (undo-tree-id6165 . -5) (undo-tree-id6166 . -5) (undo-tree-id6167 . -5) 5004 (#(" " 0 1 (wrap-prefix "  " fontified t)) . -5004) (undo-tree-id6168 . -1) (undo-tree-id6169 . -1) (undo-tree-id6170 . -1) (undo-tree-id6171 . -1) (undo-tree-id6172 . -1) (undo-tree-id6173 . -1) (undo-tree-id6174 . -1) (undo-tree-id6175 . -1) (undo-tree-id6176 . -1) (undo-tree-id6177 . -1) (undo-tree-id6178 . -1) (undo-tree-id6179 . -1) (undo-tree-id6180 . -1) (undo-tree-id6181 . -1) (undo-tree-id6182 . -1) (undo-tree-id6183 . -1) (undo-tree-id6184 . -1) (undo-tree-id6185 . -1) (undo-tree-id6186 . -1) (undo-tree-id6187 . -1) (undo-tree-id6188 . -1) (undo-tree-id6189 . -1) (undo-tree-id6190 . -1) (undo-tree-id6191 . -1) (undo-tree-id6192 . -1) (undo-tree-id6193 . -1) (undo-tree-id6194 . -1) (undo-tree-id6195 . -1) (undo-tree-id6196 . -1) (undo-tree-id6197 . -1) (undo-tree-id6198 . -1) (undo-tree-id6199 . -1) (undo-tree-id6200 . -1) (undo-tree-id6201 . -1) (undo-tree-id6202 . -1) (undo-tree-id6203 . -1) (undo-tree-id6204 . -1) (undo-tree-id6205 . -1) (undo-tree-id6206 . -1) (undo-tree-id6207 . -1) (undo-tree-id6208 . -1) (undo-tree-id6209 . -1) (undo-tree-id6210 . -1) (undo-tree-id6211 . -1) (undo-tree-id6212 . -1) (undo-tree-id6213 . -1) (undo-tree-id6214 . -1) (undo-tree-id6215 . -1) (undo-tree-id6216 . -1) (undo-tree-id6217 . -1) 5005 (#("identify" 0 8 (wrap-prefix "  " fontified t)) . -5005) (undo-tree-id6218 . -8) (undo-tree-id6219 . -1) (undo-tree-id6220 . -2) (undo-tree-id6221 . -1) (undo-tree-id6222 . -3) (undo-tree-id6223 . -2) (undo-tree-id6224 . -4) (undo-tree-id6225 . -3) (undo-tree-id6226 . -5) (undo-tree-id6227 . -4) (undo-tree-id6228 . -6) (undo-tree-id6229 . -5) (undo-tree-id6230 . -7) (undo-tree-id6231 . -6) (undo-tree-id6232 . -8) (undo-tree-id6233 . -7) (undo-tree-id6234 . -8) (undo-tree-id6235 . -8) (undo-tree-id6236 . -8) (undo-tree-id6237 . -8) (undo-tree-id6238 . -8) (undo-tree-id6239 . -8) (undo-tree-id6240 . -8) (undo-tree-id6241 . -8) (undo-tree-id6242 . -8) (undo-tree-id6243 . -8) (undo-tree-id6244 . -8) (undo-tree-id6245 . -8) (undo-tree-id6246 . -8) (undo-tree-id6247 . -8) (undo-tree-id6248 . -8) (undo-tree-id6249 . -8) (undo-tree-id6250 . -8) (undo-tree-id6251 . -8) (undo-tree-id6252 . -8) (undo-tree-id6253 . -8) (undo-tree-id6254 . -8) (undo-tree-id6255 . -8) (undo-tree-id6256 . -8) (undo-tree-id6257 . -8) (undo-tree-id6258 . -8) (undo-tree-id6259 . -8) (undo-tree-id6260 . -8) (undo-tree-id6261 . -8) (undo-tree-id6262 . -8) 5013 (#(" " 0 1 (wrap-prefix "  " fontified t)) . -5013) (undo-tree-id6263 . -1) (undo-tree-id6264 . -1) (undo-tree-id6265 . -1) (undo-tree-id6266 . -1) (undo-tree-id6267 . -1) (undo-tree-id6268 . -1) (undo-tree-id6269 . -1) (undo-tree-id6270 . -1) (undo-tree-id6271 . -1) (undo-tree-id6272 . -1) (undo-tree-id6273 . -1) (undo-tree-id6274 . -1) (undo-tree-id6275 . -1) (undo-tree-id6276 . -1) (undo-tree-id6277 . -1) (undo-tree-id6278 . -1) (undo-tree-id6279 . -1) (undo-tree-id6280 . -1) (undo-tree-id6281 . -1) (undo-tree-id6282 . -1) (undo-tree-id6283 . -1) (undo-tree-id6284 . -1) (undo-tree-id6285 . -1) (undo-tree-id6286 . -1) (undo-tree-id6287 . -1) (undo-tree-id6288 . -1) (undo-tree-id6289 . -1) (undo-tree-id6290 . -1) 5014 (#("the" 0 3 (wrap-prefix "  " fontified t)) . -5014) (undo-tree-id6291 . -3) (undo-tree-id6292 . -1) (undo-tree-id6293 . -2) (undo-tree-id6294 . -1) (undo-tree-id6295 . -3) (undo-tree-id6296 . -2) (undo-tree-id6297 . -3) (undo-tree-id6298 . -3) (undo-tree-id6299 . -3) (undo-tree-id6300 . -3) (undo-tree-id6301 . -3) (undo-tree-id6302 . -3) (undo-tree-id6303 . -3) (undo-tree-id6304 . -3) (undo-tree-id6305 . -3) (undo-tree-id6306 . -3) (undo-tree-id6307 . -3) (undo-tree-id6308 . -3) (undo-tree-id6309 . -3) (undo-tree-id6310 . -3) (undo-tree-id6311 . -3) (undo-tree-id6312 . -3) (undo-tree-id6313 . -3) 5017 (#(" " 0 1 (wrap-prefix "  " fontified t)) . -5017) (undo-tree-id6314 . -1) (undo-tree-id6315 . -1) (undo-tree-id6316 . -1) (undo-tree-id6317 . -1) (undo-tree-id6318 . -1) (undo-tree-id6319 . -1) (undo-tree-id6320 . -1) (undo-tree-id6321 . -1) (undo-tree-id6322 . -1) (undo-tree-id6323 . -1) (undo-tree-id6324 . -1) (undo-tree-id6325 . -1) (undo-tree-id6326 . -1) (undo-tree-id6327 . -1) (undo-tree-id6328 . -1) (undo-tree-id6329 . -1) 5018 (#("pixe" 0 4 (wrap-prefix "  " fontified t)) . -5018) (undo-tree-id6330 . -4) (undo-tree-id6331 . -1) (undo-tree-id6332 . -2) (undo-tree-id6333 . -1) (undo-tree-id6334 . -3) (undo-tree-id6335 . -2) (undo-tree-id6336 . -4) (undo-tree-id6337 . -3) (undo-tree-id6338 . -4) 5022 (5020 . 5022) (4999 . 5020) (#("a" 0 1 (wrap-prefix "  " fontified t)) . -4999) (undo-tree-id6339 . -1) (undo-tree-id6340 . -1) (undo-tree-id6341 . -1) 5000 (4979 . 5000) (4978 . 4979) (4977 . 4978) (t 26450 10781 666006 487000) 4964) nil (26450 10911 759509 942000) 0 nil])
([nil nil ((5012 . 5015) (#("y" 0 1 (fontified t wrap-prefix "  ")) . -5012) (undo-tree-id6345 . -1) (undo-tree-id6346 . -1) (undo-tree-id6347 . -1) (undo-tree-id6348 . -1) (undo-tree-id6349 . -1) 5013 (t 26450 10897 333428 465000)) nil (26450 10917 342051 239000) 0 nil] [nil nil ((nil rear-nonsticky nil 4979 . 4980) (nil fontified nil 4978 . 4980) (4978 . 4980) (t 26450 10897 333428 465000)) ((#("fy" 0 1 (fontified nil wrap-prefix "  ") 1 2 (rear-nonsticky nil fontified nil wrap-prefix "  ")) . 4978) (undo-tree-id6342 . -1) (undo-tree-id6343 . -1) (undo-tree-id6344 . -1) (nil rear-nonsticky nil 4979 . 4980)) (26450 10911 758481 43000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t wrap-prefix "  ")) . -5045) (undo-tree-id6350 . -1) (undo-tree-id6351 . -1) (undo-tree-id6352 . -1) (undo-tree-id6353 . -1) (undo-tree-id6354 . -1) (undo-tree-id6355 . -1) (undo-tree-id6356 . -1) 5046 (t 26450 10917 351677 210000)) nil (26450 10924 422285 893000) 0 nil])
nil
([nil nil ((5221 . 5223) (5200 . 5221) (t 26450 10924 438765 274000)) nil (26450 10971 667506 467000) 0 nil])
([nil nil ((4739 . 4740) (4719 . 4739) (#("a" 0 1 (fontified t wrap-prefix "  ")) . -4719) (undo-tree-id6411 . -1) (undo-tree-id6412 . -1) (undo-tree-id6413 . -1) (undo-tree-id6414 . -1) (undo-tree-id6415 . -1) (undo-tree-id6416 . -1) (undo-tree-id6417 . -1) (#("o" 0 1 (fontified t wrap-prefix "  ")) . -4720) (undo-tree-id6418 . -1) (undo-tree-id6419 . -1) (undo-tree-id6420 . -1) 4721 (4700 . 4721) (4699 . 4700) (4699 . 4700) (t 26450 10971 682352 322000)) nil (26450 11093 821589 375000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4740 . 4741) (#("
" 0 1 (fontified nil wrap-prefix "  ")) . -4794) (4740 . 4795)) nil (26450 11093 821582 722000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix "  " fontified t)) . 4740) (undo-tree-id6408 . -1) (undo-tree-id6409 . -1) (undo-tree-id6410 . -1)) nil (26450 11093 821581 380000) 0 nil])
([nil nil ((4791 . 4797) (4770 . 4791) (#("finalproj/" 0 10 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -4770) (undo-tree-id6381 . -10) (undo-tree-id6382 . -10) (undo-tree-id6383 . -10) (undo-tree-id6384 . -10) (undo-tree-id6385 . -10) (undo-tree-id6386 . -10) (undo-tree-id6387 . -10) (undo-tree-id6388 . -10) (undo-tree-id6389 . -10) (undo-tree-id6390 . -10) (undo-tree-id6391 . -10) 4780 (#("rotating." 0 9 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -4780) (undo-tree-id6392 . -9) (undo-tree-id6393 . -9) (undo-tree-id6394 . -9) (undo-tree-id6395 . -9) (undo-tree-id6396 . -9) (undo-tree-id6397 . -9) (undo-tree-id6398 . -9) (undo-tree-id6399 . -9) (undo-tree-id6400 . -9) 4789 (#("gif" 0 3 (fontified t face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) wrap-prefix "  ")) . -4789) (undo-tree-id6401 . -3) (undo-tree-id6402 . -3) (undo-tree-id6403 . -3) (undo-tree-id6404 . -3) (undo-tree-id6405 . -3) (undo-tree-id6406 . -3) (undo-tree-id6407 . -3) 4792) nil (26450 11093 821578 604000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4798 . 4799) (#("
" 0 1 (fontified nil wrap-prefix "  ")) . -4857) (4798 . 4858) 4796) nil (26450 11093 821562 544000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4857 . 4858) (#("
" 0 1 (fontified nil wrap-prefix "  ")) . -4916) (4857 . 4917) 4799) nil (26450 11093 821561 963000) 0 nil])
([nil nil ((4851 . 4852) (#("0" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -4851) (undo-tree-id6374 . -1) (undo-tree-id6375 . -1) (undo-tree-id6376 . -1) (undo-tree-id6377 . -1) (undo-tree-id6378 . -1) (undo-tree-id6379 . -1) (undo-tree-id6380 . -1) 4852) nil (26450 11093 821560 630000) 0 nil])
([nil nil ((#("3" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -4911) (undo-tree-id6357 . -1) (undo-tree-id6358 . -1) (undo-tree-id6359 . -1) 4912 (4909 . 4912) (#("4" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -4909) (undo-tree-id6360 . -1) (undo-tree-id6361 . -1) (undo-tree-id6362 . -1) (undo-tree-id6363 . -1) (undo-tree-id6364 . -1) (undo-tree-id6365 . -1) (undo-tree-id6366 . -1) (undo-tree-id6367 . -1) (undo-tree-id6368 . -1) (#("0" 0 1 (face markdown-url-face font-lock-multiline t mouse-face markdown-highlight-face invisible markdown-markup keymap (keymap (mouse-2 . markdown-follow-thing-at-point) (follow-link . mouse-face)) fontified t wrap-prefix "  ")) . -4910) (undo-tree-id6369 . -1) (undo-tree-id6370 . -1) (undo-tree-id6371 . -1) (undo-tree-id6372 . -1) (undo-tree-id6373 . -1) 4911) nil (26450 11093 821548 948000) 0 nil])
([nil nil ((4739 . 4740) (t 26450 11093 835870 178000) 4738) nil (26450 11103 616278 96000) 0 nil])
([nil nil ((4799 . 4800) (#("
" 0 1 (fontified t wrap-prefix "  ")) . -4799) (undo-tree-id6421 . -1) (undo-tree-id6422 . -1) (undo-tree-id6423 . -1) (undo-tree-id6424 . -1) (undo-tree-id6425 . -1) (undo-tree-id6426 . -1) (undo-tree-id6427 . -1) (undo-tree-id6428 . -1) 4800) nil (26450 11103 616272 776000) 0 nil])
([nil nil ((4800 . 4801) (t 26450 11103 622991 793000)) nil (26450 11109 816445 380000) 0 nil])
([nil nil ((4704 . 4708) (#("'" 0 1 (fontified t wrap-prefix "  ")) . -4704) (undo-tree-id6429 . -1) (undo-tree-id6430 . -1) (undo-tree-id6431 . -1) (undo-tree-id6432 . -1) (undo-tree-id6433 . -1) (undo-tree-id6434 . -1) (undo-tree-id6435 . -1) (undo-tree-id6436 . -1) (undo-tree-id6437 . -1) (undo-tree-id6438 . -1) (undo-tree-id6439 . -1) (undo-tree-id6440 . -1) (undo-tree-id6441 . -1) (undo-tree-id6442 . -1) (undo-tree-id6443 . -1) (undo-tree-id6444 . -1) (undo-tree-id6445 . -1) (undo-tree-id6446 . -1) (#("s" 0 1 (fontified t wrap-prefix "  ")) . -4705) (undo-tree-id6447 . -1) (undo-tree-id6448 . -1) (undo-tree-id6449 . -1) (undo-tree-id6450 . -1) (undo-tree-id6451 . -1) (undo-tree-id6452 . -1) (undo-tree-id6453 . -1) (undo-tree-id6454 . -1) (undo-tree-id6455 . -1) (undo-tree-id6456 . -1) (undo-tree-id6457 . -1) (undo-tree-id6458 . -1) (undo-tree-id6459 . -1) (undo-tree-id6460 . -1) (undo-tree-id6461 . -1) 4706 (t 26450 11109 824068 848000)) nil (26450 11119 634061 649000) 0 nil])
([nil nil ((75 . 77) (#("9" 0 1 (face markdown-metadata-value-face markdown-metadata-value (61 94 61 65 65 69 69 94 #<buffer 2024-12-05-proj6.markdown>) markdown-yaml-metadata-section (5 121) wrap-prefix "  " fontified t)) . -75) (undo-tree-id6497 . -1) (undo-tree-id6498 . -1) (undo-tree-id6499 . -1) (undo-tree-id6500 . -1) (undo-tree-id6501 . -1) (undo-tree-id6502 . -1) (undo-tree-id6503 . -1) (undo-tree-id6504 . -1) (undo-tree-id6505 . -1) (undo-tree-id6506 . -1) (undo-tree-id6507 . -1) (undo-tree-id6508 . -1) (undo-tree-id6509 . -1) (undo-tree-id6510 . -1) (#("1" 0 1 (face markdown-metadata-value-face markdown-metadata-value (61 95 61 65 65 69 69 95 #<buffer 2024-12-05-proj6.markdown>) markdown-yaml-metadata-section (5 122) wrap-prefix "  " fontified t)) . -76) (undo-tree-id6511 . -1) (undo-tree-id6512 . -1) (undo-tree-id6513 . -1) (undo-tree-id6514 . -1) 77 (76 . 77) (t 26450 11119 643190 861000)) nil (26450 12513 84742 912000) 0 nil])
([nil nil ((#("0" 0 1 (face markdown-metadata-value-face markdown-metadata-value (61 95 61 65 65 69 69 95 #<buffer 2024-12-05-proj6.markdown>) markdown-yaml-metadata-section (5 122) wrap-prefix "  " fontified t)) . 74) (undo-tree-id6478 . -1) (undo-tree-id6479 . -1) (undo-tree-id6480 . -1) (undo-tree-id6481 . -1) (undo-tree-id6482 . -1) (undo-tree-id6483 . -1) (undo-tree-id6484 . -1) (undo-tree-id6485 . -1) (undo-tree-id6486 . -1) (undo-tree-id6487 . -1) (undo-tree-id6488 . -1) (undo-tree-id6489 . -1) (undo-tree-id6490 . -1) (undo-tree-id6491 . -1) (undo-tree-id6492 . -1) (undo-tree-id6493 . -1) (undo-tree-id6494 . -1) (undo-tree-id6495 . -1) (undo-tree-id6496 . -1)) nil (26450 12513 84734 676000) 0 nil])
([nil current ((77 . 79) (#("1" 0 1 (face markdown-metadata-value-face markdown-metadata-value (61 93 61 65 65 69 69 93 #<buffer 2024-12-05-proj6.markdown>) markdown-yaml-metadata-section (5 120) wrap-prefix "  " fontified t)) . -77) (undo-tree-id6462 . -1) (undo-tree-id6463 . -1) (undo-tree-id6464 . -1) (undo-tree-id6465 . -1) (undo-tree-id6466 . -1) (undo-tree-id6467 . -1) (undo-tree-id6468 . -1) (undo-tree-id6469 . -1) (undo-tree-id6470 . -1) (undo-tree-id6471 . -1) (undo-tree-id6472 . -1) (#("8" 0 1 (face markdown-metadata-value-face markdown-metadata-value (61 94 61 65 65 69 69 94 #<buffer 2024-12-05-proj6.markdown>) markdown-yaml-metadata-section (5 121) wrap-prefix "  " fontified t)) . -78) (undo-tree-id6473 . -1) (undo-tree-id6474 . -1) (undo-tree-id6475 . -1) (undo-tree-id6476 . -1) (undo-tree-id6477 . -1) 79) nil (26450 12513 84713 55000) 0 nil])
nil
